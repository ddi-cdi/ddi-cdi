# PLEASE DO NOT EDIT THIS CODE!
# This code was generated by the Eclipse Acceleo module UCMIS M2T on 2023-05-25 10:41:35.
# Target language is 'Ontology Turtle' ('onto.ttl') generated on the basis of the model 'DDICDIModels'.

# Ontology for DataDescription
# based on the UML package DDICDIModels::DDICDILibrary::Classes::DataDescription
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix ucmis: <http://example.org/TODO/ucmis/> .
@prefix cdi:   <http://ddialliance.org/Specification/DDI-CDI/1.0/RDF/> .

<DataDescription.onto.ttl> a owl:Ontology;
  rdfs:label "DataDescription";
  rdfs:comment "This package contains a number of sub-packages, looking at the variety of logical data types defined by DDI-CDI, their constituent components, and shared classes. These definitions cover both the structures of the different types of data, and also their specific instances (i.e., data sets) at a logical level. Each data type is described in a consistent fashion by assembling components, which describe the roles played by some pieces of information (\"represented variables\") in the data set. Some shared non-component classes are provided directly in this package."@en;
  owl:imports <Components.onto.ttl>;
  owl:imports <Dimensional.onto.ttl>;
  owl:imports <KeyValue.onto.ttl>;
  owl:imports <Long.onto.ttl>;
  owl:imports <Wide.onto.ttl>;
.

# class ConceptualValue
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue
cdi:ConceptualValue
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptualValue";
  rdfs:comment "Definition \n============ \nConcept (with a notion of equality defined) being observed, captured, or derived which is associated to a single data instance.   \n\nExamples \n========== \nA systolic blood pressure of 122 is measured. The instance value for that measurement in this paragraph is the character string \"122\". The associated measured concept (a blood pressure at that level) is the conceptual value.  The conceptual value comes from a conceptual domain associated with a conceptual variable.   \n\nExplanatory notes \n=================== \nThis is the concept associated to the actual instance of data that is stored in a data point (the signified of a datum in the signification pattern)."@en;
  rdfs:subClassOf cdi:Concept;
.


cdi:ConceptualValue_hasConceptFrom_ConceptualDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasConceptFrom";
  skos:altLabel "ConceptualValue_hasConceptFrom_ConceptualDomain";
  rdfs:comment "Conceptual value has concept from one conceptual domain."@en;
  rdfs:domain cdi:ConceptualValue;
  rdfs:range cdi:ConceptualDomain;
.


# class DataPoint
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::DataPoint
cdi:DataPoint
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DataPoint";
  rdfs:comment "Definition\n============\nContainer for an instance value.\n\nExamples\n==========\nA cell in a data cube or a table. \n\nExplanatory notes\n===================\nA data point could be empty. It exists independently of the instance value to be stored in it."@en;
  
.

cdi:DataPoint-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:DataPoint;
  rdfs:range cdi:CatalogDetails;
.

cdi:DataPoint-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:DataPoint;
  rdfs:range cdi:Identifier;
.


cdi:DataPoint_isDescribedBy_InstanceVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDescribedBy";
  skos:altLabel "DataPoint_isDescribedBy_InstanceVariable";
  rdfs:comment "The instance variable delimits the values which can populate a data point. Data point is described by one instance variable."@en;
  rdfs:domain cdi:DataPoint;
  rdfs:range cdi:InstanceVariable;
.

cdi:DataPoint_correspondsTo_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "correspondsTo";
  skos:altLabel "DataPoint_correspondsTo_DataStructureComponent";
  
  rdfs:domain cdi:DataPoint;
  rdfs:range cdi:DataStructureComponent;
.


# class DataSet
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet
cdi:DataSet
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DataSet";
  rdfs:comment "Definition \n============ \nOrganized collection of data based on keys."@en;
  
.

cdi:DataSet-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:DataSet;
  rdfs:range cdi:CatalogDetails;
.

cdi:DataSet-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:DataSet;
  rdfs:range cdi:Identifier;
.


cdi:DataSet_has_DataPoint
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataSet_has_DataPoint";
  
  rdfs:domain cdi:DataSet;
  rdfs:range cdi:DataPoint;
.

cdi:DataSet_has_Key
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataSet_has_Key";
  
  rdfs:domain cdi:DataSet;
  rdfs:range cdi:Key;
.

cdi:DataSet_isStructuredBy_DataStructure
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isStructuredBy";
  skos:altLabel "DataSet_isStructuredBy_DataStructure";
  
  rdfs:domain cdi:DataSet;
  rdfs:range cdi:DataStructure;
.


# class DataStructure
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::DataStructure
cdi:DataStructure
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DataStructure";
  rdfs:comment "Definition \n============\nData organization based on reusable data structure components."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.


cdi:DataStructure_has_ComponentPosition
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataStructure_has_ComponentPosition";
  
  rdfs:domain cdi:DataStructure;
  rdfs:range cdi:ComponentPosition;
.

cdi:DataStructure_has_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataStructure_has_DataStructureComponent";
  
  rdfs:domain cdi:DataStructure;
  rdfs:range cdi:DataStructureComponent;
.

cdi:DataStructure_has_ForeignKey
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataStructure_has_ForeignKey";
  
  rdfs:domain cdi:DataStructure;
  rdfs:range cdi:ForeignKey;
.

cdi:DataStructure_has_PrimaryKey
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "DataStructure_has_PrimaryKey";
  
  rdfs:domain cdi:DataStructure;
  rdfs:range cdi:PrimaryKey;
.


# class Datum
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Datum
cdi:Datum
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Datum";
  rdfs:comment "Definition \n============ \nCorrespondence of a data instance to the concept it represents.  \n\nExamples \n========== \nA systolic blood pressure of 122 is measured. The single data instance (instance value) for that measurement is the character string \"122\". The datum in this case is the association of the conceptual value, i.e. the underlying measured concept (a blood pressure at that level), with the instance value.    \nif a datum represents the conceptual value “married” with a code “M,” it is not the same datum where that conceptual value is represented with a code “1”. If the datum which uses the code “M” is present in more than one data set, it is still the same datum.\n\nExplanatory notes \n=================== \nThe datum is a reification of the association between instance value and conceptual value. It is a designation (a representation of a concept by a sign) in the signification pattern. The data instance (instance value) is the signifier and the concept it represents (conceptual value) is the signified. The datum has an association with an instance variable which allows the attachment of a unit of measurement, a datatype, and a population. These instance variable attributes are critical for interpreting the signifier.  NOTE: This is NOT datum as defined in The Data Documentation Initiative Lifecycle specification, which is more limited in breadth. This specification takes a little more formal (semiotic) description of a datum using the signification pattern.\nThe datum is reusable, and may appear in more than one data set, carrying with it its full contextualized meaning and identity. The instance variables and instance values with which it is associated will therefore be functionally similar or identical across its appearance in different data instances. Instance variable and instance value are specific to a single data set instance – datum is not."@en;
  
.

cdi:Datum-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:Datum;
  rdfs:range cdi:CatalogDetails;
.

cdi:Datum-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:Datum;
  rdfs:range cdi:Identifier;
.


cdi:Datum_isBoundedBy_InstanceVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBoundedBy";
  skos:altLabel "Datum_isBoundedBy_InstanceVariable";
  rdfs:comment "A datum is bounded by an instance variable. The datum is drawn from a set of values, either substantive or sentinel described by the value domain of the instance variable."@en;
  rdfs:domain cdi:Datum;
  rdfs:range cdi:InstanceVariable;
.

cdi:Datum_denotes_ConceptualValue
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "denotes";
  skos:altLabel "Datum_denotes_ConceptualValue";
  
  rdfs:domain cdi:Datum;
  rdfs:range cdi:ConceptualValue;
.

cdi:Datum_uses_InstanceValue
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "uses";
  skos:altLabel "Datum_uses_InstanceValue";
  
  rdfs:domain cdi:Datum;
  rdfs:range cdi:InstanceValue;
.

cdi:Datum_uses_Notation
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "uses";
  skos:altLabel "Datum_uses_Notation";
  
  rdfs:domain cdi:Datum;
  rdfs:range cdi:Notation;
.


# class InstanceValue
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::InstanceValue
cdi:InstanceValue
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "InstanceValue";
  rdfs:comment "Definition \n============ \nSingle data instance corresponding to a concept (with a notion of equality defined) being observed, captured, or derived.  \n\nExamples \n========== \nA systolic blood pressure of 122 is measured. The single data instance (instance value) for that measurement is the character string \"122\". The associated measured concept (a blood pressure at that level) is the conceptual value.     \n\nExplanatory notes \n=================== \nThis is the actual instance of data that populates a data point (the signifier of a datum in the signification pattern). The instance value comes from a value domain associated with an instance variable which allows the attachment of a unit of measurement, a datatype, and a population."@en;
  
.

cdi:InstanceValue-content
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "content";
  rdfs:comment "The content of this value expressed as a string."@en;
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:TypedString;
.

cdi:InstanceValue-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:Identifier;
.

cdi:InstanceValue-whiteSpace
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "whiteSpace";
  rdfs:comment "The usual setting \"collapse\" states that leading and trailing white space will be removed and multiple adjacent white spaces will be treated as a single white space. When setting to \"replace\" all occurrences of #x9 (tab), #xA (line feed) and #xD (carriage return) are replaced with #x20 (space) but leading and trailing spaces will be retained. If the existence of any of these white spaces is critical to the understanding of the content, change the value of this attribute to \"preserve\"."@en;
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:WhiteSpaceRule;
.


cdi:InstanceValue_hasValueFrom_ValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasValueFrom";
  skos:altLabel "InstanceValue_hasValueFrom_ValueDomain";
  
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:ValueDomain;
.

cdi:InstanceValue_isStoredIn_DataPoint
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isStoredIn";
  skos:altLabel "InstanceValue_isStoredIn_DataPoint";
  
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:DataPoint;
.

cdi:InstanceValue_represents_ConceptualValue
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "represents";
  skos:altLabel "InstanceValue_represents_ConceptualValue";
  
  rdfs:domain cdi:InstanceValue;
  rdfs:range cdi:ConceptualValue;
.


# class Notation
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Notation
cdi:Notation
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Notation";
  rdfs:comment "Definition \n============ \nRepresentation of a category in the context of a code or a classification item, as opposed of the corresponding instance value which would appear when used in a dataset. \n\nExamples \n========== \nThe number \"334\" used as a code for the \"Computer and electronic product manufacturing\" category in the North American Industry Classification System (NAICS)."@en;
  
.

cdi:Notation-content
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "content";
  rdfs:comment "The actual content of this value as a string."@en;
  rdfs:domain cdi:Notation;
  rdfs:range cdi:TypedString;
.

cdi:Notation-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:Notation;
  rdfs:range cdi:Identifier;
.

cdi:Notation-whiteSpace
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "whiteSpace";
  rdfs:comment "The usual setting \"collapse\" states that leading and trailing white space will be removed and multiple adjacent white spaces will be treated as a single white space. When setting to \"replace\" all occurrences of #x9 (tab), #xA (line feed) and #xD (carriage return) are replaced with #x20 (space) but leading and trailing spaces will be retained. If the existence of any of these white spaces is critical to the understanding of the content, change the value of this attribute to \"preserve\"."@en;
  rdfs:domain cdi:Notation;
  rdfs:range cdi:WhiteSpaceRule;
.


cdi:Notation_represents_Category
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "represents";
  skos:altLabel "Notation_represents_Category";
  rdfs:comment "Notation represents zero to many categories."@en;
  rdfs:domain cdi:Notation;
  rdfs:range cdi:Category;
.





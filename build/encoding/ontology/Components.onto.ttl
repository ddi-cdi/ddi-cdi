# PLEASE DO NOT EDIT THIS CODE!
# This code was generated by the Eclipse Acceleo module UCMIS M2T on 2023-05-25 10:41:35.
# Target language is 'Ontology Turtle' ('onto.ttl') generated on the basis of the model 'DDICDIModels'.

# Ontology for Components
# based on the UML package DDICDIModels::DDICDILibrary::Classes::DataDescription::Components
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix ucmis: <http://example.org/TODO/ucmis/> .
@prefix cdi:   <http://ddialliance.org/Specification/DDI-CDI/1.0/RDF/> .

<Components.onto.ttl> a owl:Ontology;
  rdfs:label "Components";
  rdfs:comment "This package contains classes which define the roles played across the different data types by represented variables (pieces of information modeled according to that construct from the conceptual package). Each type of data is defined using a consistent approach, with a selection of the components as appropriate. These typically include the way in which descriptors, measures, and identifiers are logically assembled within the data."@en;
.

# class AttributeComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::AttributeComponent
cdi:AttributeComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "AttributeComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a data structure to qualify observations or provide other types of supplementary information.  \n\nExamples \n========== \nThe publication status of an observation (e.g. provisional, final, revised)."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.


cdi:AttributeComponent_qualifies_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "qualifies";
  skos:altLabel "AttributeComponent_qualifies_DataStructureComponent";
  
  rdfs:domain cdi:AttributeComponent;
  rdfs:range cdi:DataStructureComponent;
.


# class ComponentPosition
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::ComponentPosition
cdi:ComponentPosition
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ComponentPosition";
  rdfs:comment "Definition \n============ \nIndexes the components in a data structure using integers with a position indicated by incrementing upward from 0 or 1."@en;
  
.

cdi:ComponentPosition-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ComponentPosition;
  rdfs:range cdi:Identifier;
.

cdi:ComponentPosition-value
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "value";
  rdfs:comment "Index value of the member in an ordered array."@en;
  rdfs:domain cdi:ComponentPosition;
  rdfs:range xsd:integer;
.


cdi:ComponentPosition_indexes_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "indexes";
  skos:altLabel "ComponentPosition_indexes_DataStructureComponent";
  
  rdfs:domain cdi:ComponentPosition;
  rdfs:range cdi:DataStructureComponent;
.


# class DataStructureComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::DataStructureComponent
cdi:DataStructureComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DataStructureComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a data structure.  \n\nExplanatory notes \n=================== \nA represented variable can have different roles in different data structures. For instance, the variable sex can be a measure in a wide data structure and a dimension in a dimensional data structure."@en;
  
.

cdi:DataStructureComponent-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:DataStructureComponent;
  rdfs:range cdi:Identifier;
.

cdi:DataStructureComponent-semantic
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantic";
  rdfs:comment "Qualifies the purpose or use expressed as a paired external controlled vocabulary."@en;
  rdfs:domain cdi:DataStructureComponent;
  rdfs:range cdi:PairedControlledVocabularyEntry;
.

cdi:DataStructureComponent-specialization
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "specialization";
  rdfs:comment "The role played by the component for the data set for purposes of harmonization and integration, typically regarding geography, time, etc."@en;
  rdfs:domain cdi:DataStructureComponent;
  rdfs:range cdi:SpecializationRole;
.


cdi:DataStructureComponent_isDefinedBy_RepresentedVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDefinedBy";
  skos:altLabel "DataStructureComponent_isDefinedBy_RepresentedVariable";
  rdfs:comment "Data structure component is defined by zero to one represented variable."@en;
  rdfs:domain cdi:DataStructureComponent;
  rdfs:range cdi:RepresentedVariable;
.


# class DimensionComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::DimensionComponent
cdi:DimensionComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DimensionComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a dimensional data structure to identify the universes associated with data points. The variable acts as a field in the compound identifier (the key structure) to disambiguate the cells in the multi-dimensional \"cube\".  \n\nExplanatory notes \n=================== \nThe categories from each dimension often are used in combination to identify a cell. The meaning of the combination of the categories supplies meaning to the cell."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.

cdi:DimensionComponent-categoricalAdditivity
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "categoricalAdditivity";
  rdfs:comment "Indicates whether categories at a specific level can be combined to provide the value for their shared parent category. Value is True if categories can be added together (collapsed) to create higher-level categories.  \n\nAn example would be age categories. Five-year age categories can be collapsed into 10-year age categories."@en;
  rdfs:domain cdi:DimensionComponent;
  rdfs:range xsd:boolean;
.


cdi:DimensionComponent_isStructuredBy_ValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isStructuredBy";
  skos:altLabel "DimensionComponent_isStructuredBy_ValueDomain";
  
  rdfs:domain cdi:DimensionComponent;
  rdfs:range cdi:ValueDomain;
.


# class ForeignKey
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::ForeignKey
cdi:ForeignKey
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ForeignKey";
  rdfs:comment "Definition\n============\nRole of a set of data structure components for content referencing purposes\n\nExplanatory notes\n===================\nEquivalent to foreign key in the relational model.\nIt can be used in conjunction with primary key to link data structures and their related data sets."@en;
  
.

cdi:ForeignKey-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ForeignKey;
  rdfs:range cdi:Identifier;
.


cdi:ForeignKey_isComposedOf_ForeignKeyComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isComposedOf";
  skos:altLabel "ForeignKey_isComposedOf_ForeignKeyComponent";
  
  rdfs:domain cdi:ForeignKey;
  rdfs:range cdi:ForeignKeyComponent;
.


# class ForeignKeyComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::ForeignKeyComponent
cdi:ForeignKeyComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ForeignKeyComponent";
  rdfs:comment "Definition\n============\nRole of a data structure component for content referencing purposes\n\nExplanatory notes\n===================\nEquivalent to a foreign key attribute (i.e. column) in the relational model.\nIt can be used in conjunction with a primary key component to link data structures and their related data sets."@en;
  
.

cdi:ForeignKeyComponent-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ForeignKeyComponent;
  rdfs:range cdi:Identifier;
.


cdi:ForeignKeyComponent_correspondsTo_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "correspondsTo";
  skos:altLabel "ForeignKeyComponent_correspondsTo_DataStructureComponent";
  
  rdfs:domain cdi:ForeignKeyComponent;
  rdfs:range cdi:DataStructureComponent;
.

cdi:ForeignKeyComponent_references_PrimaryKeyComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "references";
  skos:altLabel "ForeignKeyComponent_references_PrimaryKeyComponent";
  
  rdfs:domain cdi:ForeignKeyComponent;
  rdfs:range cdi:PrimaryKeyComponent;
.


# class IdentifierComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::IdentifierComponent
cdi:IdentifierComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "IdentifierComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a long or wide data structure to identify the units associated to data points, and in dimensional and key value data structures to provide identifying fields for the instance values.  \n\nExamples \n========== \nThe personal identification number of a Swedish citizen for unit data or the name of a country in the European Union for dimensional data."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.



# class MeasureComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::MeasureComponent
cdi:MeasureComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "MeasureComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a data structure to hold the observed/derived values.  \n\nExamples \n========== \nHeight of a person in a wide or long dataset or number of citizens in a country in a dataset for multiple countries (dimensional dataset)."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.

cdi:MeasureComponent-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:MeasureComponent;
  rdfs:range cdi:ObjectName;
.



# class PrimaryKey
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::PrimaryKey
cdi:PrimaryKey
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "PrimaryKey";
  rdfs:comment "Definition\n============\nRole of a set of data structure components for content linkage purposes\n\nExplanatory notes\n===================\nEquivalent to primary key in the relational model.\nA primary key essentially indicates which data structure components correspond to key members.\nIt can also be used in conjunction with foreign key to link data structures and their related datasets."@en;
  
.

cdi:PrimaryKey-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:PrimaryKey;
  rdfs:range cdi:Identifier;
.


cdi:PrimaryKey_isComposedOf_PrimaryKeyComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isComposedOf";
  skos:altLabel "PrimaryKey_isComposedOf_PrimaryKeyComponent";
  
  rdfs:domain cdi:PrimaryKey;
  rdfs:range cdi:PrimaryKeyComponent;
.


# class PrimaryKeyComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::PrimaryKeyComponent
cdi:PrimaryKeyComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "PrimaryKeyComponent";
  rdfs:comment "Definition\n============\nRole of a data structure component for content identification purposes\n\nExplanatory notes\n===================\nEquivalent to a primary key attribute (i.e. column) in the relational model.\nIt can be used in conjunction with a foreign key component to link data structures and their related datasets."@en;
  
.

cdi:PrimaryKeyComponent-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:PrimaryKeyComponent;
  rdfs:range cdi:Identifier;
.


cdi:PrimaryKeyComponent_correspondsTo_DataStructureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "correspondsTo";
  skos:altLabel "PrimaryKeyComponent_correspondsTo_DataStructureComponent";
  
  rdfs:domain cdi:PrimaryKeyComponent;
  rdfs:range cdi:DataStructureComponent;
.


# class VariableDescriptorComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::VariableDescriptorComponent
cdi:VariableDescriptorComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariableDescriptorComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a data structure to provide codes for variable identification.   \n\nExamples \n========== \nConsider {\"income\", \"age\"} to be the value domain of the represented variable working as a variable descriptor component.  The two codes, i.e. those designating \"income\" and \"age\", are descriptors used to identify which values in the variable value component correspond to income and which ones to age.   \n\nExplanatory notes \n=================== \nWhenever more than one variable appears in the same column, we need a mechanism to distinguish which values correspond to which variable. This mechanism is provided by the variable descriptor component, which contains the codes used to link the variables to their values.  This structure provides a flexible mechanism avoiding the need for a formal pointer."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.


cdi:VariableDescriptorComponent_isDefinedBy_DescriptorVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDefinedBy";
  skos:altLabel "VariableDescriptorComponent_isDefinedBy_DescriptorVariable";
  
  rdfs:domain cdi:VariableDescriptorComponent;
  rdfs:range cdi:DescriptorVariable;
.

cdi:VariableDescriptorComponent_refersTo_VariableValueComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "refersTo";
  skos:altLabel "VariableDescriptorComponent_refersTo_VariableValueComponent";
  
  rdfs:domain cdi:VariableDescriptorComponent;
  rdfs:range cdi:VariableValueComponent;
.


# class VariableValueComponent
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::VariableValueComponent
cdi:VariableValueComponent
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariableValueComponent";
  rdfs:comment "Definition \n============ \nRole given to a represented variable in the context of a data structure to record values of multiple variables.   \n\nExamples \n========== \nConsider two variables, i.e. income and age, with their values living together in different entries in the same column.  The values of those two variables are now in the value domain of a single variable (the one working as a variable value component).  Another column, based on a variable descriptor component, use codes for \"income\" and \"age\" to distinguish income values from age values.   \n\nExplanatory notes \n=================== \nA variable value component captures the values of multiple variables that have been transposed into a single column.  The variable descriptor component provides a mechanism to identify which of those values correspond to which variable.   This structure provides a flexible mechanism avoiding the need for a formal pointer."@en;
  rdfs:subClassOf cdi:DataStructureComponent;
.






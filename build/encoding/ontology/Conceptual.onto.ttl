# PLEASE DO NOT EDIT THIS CODE!
# This code was generated by the Eclipse Acceleo module UCMIS M2T on 2023-05-25 10:41:35.
# Target language is 'Ontology Turtle' ('onto.ttl') generated on the basis of the model 'DDICDIModels'.

# Ontology for Conceptual
# based on the UML package DDICDIModels::DDICDILibrary::Classes::Conceptual
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix ucmis: <http://example.org/TODO/ucmis/> .
@prefix cdi:   <http://ddialliance.org/Specification/DDI-CDI/1.0/RDF/> .

<Conceptual.onto.ttl> a owl:Ontology;
  rdfs:label "Conceptual";
  rdfs:comment "This package contains the classes in the DDI-CDI Library which define foundational metadata constructs at the conceptual level. This includes not only the primary definitional class in the model - Concept - but also many of its significant applications: variables, units (of interest, not of measurement), universes, and categories, along with supporting constructs.\nMany of these classes are reused in other packages for specific purposes."@en;
.

# class Category
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Category
cdi:Category
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Category";
  rdfs:comment "Definition \n============ \nConcept whose role is to define and measure a characteristic.  \n\nExamples \n========== \nThe category \"Male\" is used to define or measure \"Sex\" or \"Gender\", which are characteristics. In turn, they are also variables. \"Extremely Satisfied\" is a category in an agreement scale. This can be used for many kinds of variables.  \n\n\nExplanatory notes \n=================== \nA category is a concept, typically associated with a code in the representation of a variable value. Categories are most often used in the allowed values for qualitative, i.e., nominal and ordinal, variables. A set of categories, say \"Male\" and \"Female\" for characteristics \"Sex\" or \"Gender,\" helps define those characteristics. For describing location of measurement station, you might have categories \"Urban\", \"Suburban\", \"Rural\", etc."@en;
  rdfs:subClassOf cdi:Concept;
.

cdi:Category-descriptiveText
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "descriptiveText";
  rdfs:comment "A short natural language account of the characteristics of the object."@en;
  rdfs:domain cdi:Category;
  rdfs:range cdi:InternationalString;
.



# class CategoryPosition
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryPosition
cdi:CategoryPosition
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "CategoryPosition";
  rdfs:comment "Definition\n============\nAssigns a sequence number to a category within a list."@en;
  
.

cdi:CategoryPosition-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:CategoryPosition;
  rdfs:range cdi:Identifier;
.

cdi:CategoryPosition-value
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "value";
  rdfs:comment "Index value of the member in an ordered array."@en;
  rdfs:domain cdi:CategoryPosition;
  rdfs:range xsd:integer;
.


cdi:CategoryPosition_indexes_Category
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "indexes";
  skos:altLabel "CategoryPosition_indexes_Category";
  
  rdfs:domain cdi:CategoryPosition;
  rdfs:range cdi:Category;
.


# class CategoryRelationship
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryRelationship
cdi:CategoryRelationship
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "CategoryRelationship";
  rdfs:comment "Definition \n============ \nSource-to-target relationship between categories in a structure.   \n\nExamples \n========== \nIn the International Standard Industrial Classification of All Economic Activities (ISIC) Revision 4 (https://unstats.un.org/unsd/demographic-social/census/documents/isic_rev4.pdf), the super-type/sub-type relation is used throughout. The super-type \"Manufacturing Sector\" has among its sub-types \"Manufacture of Rubber and Plastics Products\" (division 22). In this example, the super-type is the source (Manufacturing Sector\") and the sub-type is the target. The semantics attribute will provide the type of the relationship.\n\nExplanatory notes \n=================== \nRelationships between pairs of categories are linkages between them. The meaning of the linkage is determined by the relation."@en;
  
.

cdi:CategoryRelationship-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:CategoryRelationship;
  rdfs:range cdi:Identifier;
.

cdi:CategoryRelationship-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:CategoryRelationship;
  rdfs:range cdi:ControlledVocabularyEntry;
.


cdi:CategoryRelationship_hasSource_Category
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasSource";
  skos:altLabel "CategoryRelationship_hasSource_Category";
  
  rdfs:domain cdi:CategoryRelationship;
  rdfs:range cdi:Category;
.

cdi:CategoryRelationship_hasTarget_Category
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasTarget";
  skos:altLabel "CategoryRelationship_hasTarget_Category";
  rdfs:comment "Second member in a relationship. Note that this can be realized as a collection to support tuples."@en;
  rdfs:domain cdi:CategoryRelationship;
  rdfs:range cdi:Category;
.


# class CategoryRelationStructure
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryRelationStructure
cdi:CategoryRelationStructure
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "CategoryRelationStructure";
  rdfs:comment "Definition \n============ \nDescription of the relationships between and among categories within a collection.  \n\nExamples \n========== \nThe category of \"student\" might be described as having sub-types of \"primary school student\" and \"high school student\".  \n\n\nExplanatory notes \n=================== \nThe category relation structure employs a set of category relations to describe the relationship among concepts. Each category relation is a one to many description of connections between categories. Together they might commonly describe relationships as complex as a hierarchy or graph. This is a kind of a concept structure restricted to categories (which are concepts). Allows for the specification of complex relationships among categories."@en;
  
.

cdi:CategoryRelationStructure-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:Identifier;
.

cdi:CategoryRelationStructure-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:ObjectName;
.

cdi:CategoryRelationStructure-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:InternationalString;
.

cdi:CategoryRelationStructure-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:CategoryRelationStructure-specification
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "specification";
  rdfs:comment "Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:StructureSpecification;
.

cdi:CategoryRelationStructure-topology
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "topology";
  rdfs:comment "Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:CategoryRelationStructure-totality
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "totality";
  rdfs:comment "Indicates whether the related collections are comprehensive in terms of their coverage."@en;
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:StructureExtent;
.


cdi:CategoryRelationStructure_has_CategoryRelationship
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "CategoryRelationStructure_has_CategoryRelationship";
  
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:CategoryRelationship;
.

cdi:CategoryRelationStructure_structures_CategorySet
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "structures";
  skos:altLabel "CategoryRelationStructure_structures_CategorySet";
  
  rdfs:domain cdi:CategoryRelationStructure;
  rdfs:range cdi:CategorySet;
.


# class CategorySet
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::CategorySet
cdi:CategorySet
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "CategorySet";
  rdfs:comment "Definition\n============\nConcept system where the underlying concepts are categories.\n\nExamples\n==========\n\"Male\" and \"Female\" categories in a category set named \"Gender\".\n\nExplanatory notes\n===================\nThe categories in a category set help define the meaning of the category set. Gender can be defined as \"male or female\" - see example above. A category set can be used directly by questions to express a set of response choices."@en;
  rdfs:subClassOf cdi:ConceptSystem;
.


cdi:CategorySet_has_Category
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "CategorySet_has_Category";
  
  rdfs:domain cdi:CategorySet;
  rdfs:range cdi:Category;
.

cdi:CategorySet_has_CategoryPosition
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "CategorySet_has_CategoryPosition";
  
  rdfs:domain cdi:CategorySet;
  rdfs:range cdi:CategoryPosition;
.


# class Concept
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept
cdi:Concept
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Concept";
  rdfs:comment "Definition \n============ \nUnit of thought differentiated by characteristics (from the Generic Statistical Information Model version 1.2: https://statswiki.unece.org/display/clickablegsim/Concept).  \n\nExamples \n========== \nVelocity, Distance, Poverty, Income, Household Relationship, Family, Gender, Business Establishment, Satisfaction, Mass, Air Quality, etc.\n\n\nExplanatory notes \n=================== \nMany DDI-CDI classes are subtypes of the concept class including category, universe, unit type, conceptual variable. This class realizes the pattern class signified and as such a concept can be denoted by a sign."@en;
  
.

cdi:Concept-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:CatalogDetails;
.

cdi:Concept-definition
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "definition";
  rdfs:comment "Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:InternationalString;
.

cdi:Concept-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:LabelForDisplay;
.

cdi:Concept-externalDefinition
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "externalDefinition";
  rdfs:comment "A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:Reference;
.

cdi:Concept-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:Identifier;
.

cdi:Concept-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:Concept;
  rdfs:range cdi:ObjectName;
.



# class ConceptMap
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap
cdi:ConceptMap
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptMap";
  rdfs:comment "Definition \n============ \nCorrespondence between concepts in a correspondence table.  \n\nExamples \n========== \nA simple example might map the following 2 martial status category sets:  MS1: single, married, widowed, divorced. MS2: single, married.  So, a correspondence table between these 2 category sets might look like this: MS1 single - MS2 single; MS1 widowed - MS2 single; MS1 divorced - MS2 single; MS1 married - MS2 married. \n\nExplanatory notes \n=================== \nA concept map is the pairing of similar concepts. Each concept in the map belongs to a different collection. The collection of maps for all the concepts in corresponding collections is a correspondence table."@en;
  
.

cdi:ConceptMap-correspondence
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "correspondence";
  rdfs:comment "Type of correspondence in terms of commonalities and differences between two members."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:CorrespondenceDefinition;
.

cdi:ConceptMap-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:LabelForDisplay;
.

cdi:ConceptMap-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:Identifier;
.

cdi:ConceptMap-usage
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "usage";
  rdfs:comment "Explanation of the ways in which the object is employed."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:InternationalString;
.

cdi:ConceptMap-validDates
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "validDates";
  rdfs:comment "The dates describing the validity period of the object. The date from which the object became valid must be defined if the map belongs to a \"floating\" construct. The date at which the object became invalid must be defined if the map belongs to a \"floating\" construct and is no longer valid."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:DateRange;
.


cdi:ConceptMap_hasSource_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasSource";
  skos:altLabel "ConceptMap_hasSource_Concept";
  rdfs:comment "Concept map has one to many source concepts."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:Concept;
.

cdi:ConceptMap_hasTarget_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasTarget";
  skos:altLabel "ConceptMap_hasTarget_Concept";
  rdfs:comment "Concept map has one to many target concepts."@en;
  rdfs:domain cdi:ConceptMap;
  rdfs:range cdi:Concept;
.


# class ConceptRelationship
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship
cdi:ConceptRelationship
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptRelationship";
  rdfs:comment "Definition \n============ \nRelationship between a pair of concepts in a collection of concepts. Use controlled vocabulary provided in semantics to identify the type of relationship (relation, e.g. ParentChild, WholePart, etc.)  \n\nExamples \n========== \nApple (a specialized concept) is a kind of fruit (a generic concept). A wheel (a partitive concept) is part of a car (a whole concept).  \n\nExplanatory notes \n=================== \nThe idea is similar to category relationship, except it applies generally and not just for categories."@en;
  
.

cdi:ConceptRelationship-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptRelationship;
  rdfs:range cdi:Identifier;
.

cdi:ConceptRelationship-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:ConceptRelationship;
  rdfs:range cdi:ControlledVocabularyEntry;
.


cdi:ConceptRelationship_hasSource_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasSource";
  skos:altLabel "ConceptRelationship_hasSource_Concept";
  rdfs:comment "Restricts source object to concept for the relationship."@en;
  rdfs:domain cdi:ConceptRelationship;
  rdfs:range cdi:Concept;
.

cdi:ConceptRelationship_hasTarget_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasTarget";
  skos:altLabel "ConceptRelationship_hasTarget_Concept";
  rdfs:comment "Restricts target object to concept for the relationship."@en;
  rdfs:domain cdi:ConceptRelationship;
  rdfs:range cdi:Concept;
.


# class ConceptStructure
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptStructure
cdi:ConceptStructure
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptStructure";
  rdfs:comment "Definition \n============ \nRelations of concepts within a collection.  \n\nExamples \n========== \nA concept of vacation might be described as having sub-types of beach vacation and mountain vacation.  \n\nExplanatory notes \n=================== \nThe concept structure employs a set of concept relationships to describe the relationship among concepts. Each concept relationship is a one to many description of connections between concepts. Together they can describe relationships as complex as a hierarchy or even a complete cyclical network as in a concept map. Allows for the specification of complex relationships among concepts."@en;
  
.

cdi:ConceptStructure-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:Identifier;
.

cdi:ConceptStructure-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:ObjectName;
.

cdi:ConceptStructure-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:InternationalString;
.

cdi:ConceptStructure-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:ConceptStructure-specification
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "specification";
  rdfs:comment "Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:StructureSpecification;
.

cdi:ConceptStructure-topology
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "topology";
  rdfs:comment "Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:ConceptStructure-totality
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "totality";
  rdfs:comment "Indicates whether the related collections are comprehensive in terms of their coverage."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:StructureExtent;
.


cdi:ConceptStructure_has_ConceptRelationship
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "ConceptStructure_has_ConceptRelationship";
  rdfs:comment "Concept structure has zero to many concept relationships."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:ConceptRelationship;
.

cdi:ConceptStructure_structures_ConceptSystem
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "structures";
  skos:altLabel "ConceptStructure_structures_ConceptSystem";
  rdfs:comment "Concept structure structures concept system."@en;
  rdfs:domain cdi:ConceptStructure;
  rdfs:range cdi:ConceptSystem;
.


# class ConceptSystem
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem
cdi:ConceptSystem
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptSystem";
  rdfs:comment "Definition\n============\nSet of concepts structured by the relations among them [GSIM 1.1].\n\nExamples\n==========\n1) Concept of Sex: Male, Female, Other. \n2) Concept of Household Relationship: Household Head, Spouse of Household Head, Child of Household Head, Unrelated Household Member, etc.\n\nExplanatory notes\n===================\nNote that this class can be used with concepts, classifications, universes, populations, unit types and any other class that extends from concept."@en;
  
.

cdi:ConceptSystem-allowsDuplicates
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "allowsDuplicates";
  rdfs:comment "If value is False, the members are unique within the collection - if True, there may be duplicates. (Note that a mathematical “bag” permits duplicates and is unordered - a “set” does not have duplicates and may be ordered.)"@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range xsd:boolean;
.

cdi:ConceptSystem-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:CatalogDetails;
.

cdi:ConceptSystem-externalDefinition
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "externalDefinition";
  rdfs:comment "A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:Reference;
.

cdi:ConceptSystem-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:Identifier;
.

cdi:ConceptSystem-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:ObjectName;
.

cdi:ConceptSystem-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:InternationalString;
.


cdi:ConceptSystem_has_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "ConceptSystem_has_Concept";
  rdfs:comment "Concept system has zero to many concepts."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:Concept;
.

cdi:ConceptSystem_isDefinedBy_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDefinedBy";
  skos:altLabel "ConceptSystem_isDefinedBy_Concept";
  rdfs:comment "Concept system is defined by zero to many concepts. The conceptual basis for the collection of members."@en;
  rdfs:domain cdi:ConceptSystem;
  rdfs:range cdi:Concept;
.


# class ConceptSystemCorrespondence
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystemCorrespondence
cdi:ConceptSystemCorrespondence
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptSystemCorrespondence";
  rdfs:comment "Definition \n============ \nRelationship between 2 or more concept systems described through mapping similarity relationships between their member concepts.  \n\nExamples \n========== \nCorrespondence between the concepts used to define the amount of salt dissolved in a body of water: the concepts \"salinity\" and \"saltiness\" might be described as equivalent, for example.\n\nExplanatory notes \n=================== \nDescribes correspondence with one or more maps which identify a source and target concept and defines their commonality and difference using descriptive text and controlled vocabularies."@en;
  
.

cdi:ConceptSystemCorrespondence-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:CatalogDetails;
.

cdi:ConceptSystemCorrespondence-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:LabelForDisplay;
.

cdi:ConceptSystemCorrespondence-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:Identifier;
.

cdi:ConceptSystemCorrespondence-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:InternationalString;
.

cdi:ConceptSystemCorrespondence-usage
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "usage";
  rdfs:comment "Explanation of the ways in which the object is employed."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:InternationalString;
.


cdi:ConceptSystemCorrespondence_has_ConceptMap
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "ConceptSystemCorrespondence_has_ConceptMap";
  rdfs:comment "Concept system correspondence has zero to many concept maps."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:ConceptMap;
.

cdi:ConceptSystemCorrespondence_maps_ConceptSystem
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "maps";
  skos:altLabel "ConceptSystemCorrespondence_maps_ConceptSystem";
  rdfs:comment "Concept system correspondence maps two to many concept systems. Realization of structures in symmetric relation. When concepts of a single concept system are mapped, the Concept has to appear twice as target."@en;
  rdfs:domain cdi:ConceptSystemCorrespondence;
  rdfs:range cdi:ConceptSystem;
.


# class ConceptualDomain
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain
cdi:ConceptualDomain
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptualDomain";
  rdfs:comment "Definition \n============ \nSet of concepts, where each concept is intended to be used as the meaning (signified) for a datum.  \n\nExamples \n========== \nSubstantive: Housing Unit Tenure - Owned, Rented, Vacant. Sentinel: Non-response - Refused, Don't Know, Not Applicable   \n\nExplanatory notes \n=================== \nIntent of a conceptual domain is defining a set of concepts used to measure a broader concept. For effective use they should be discrete (non-overlapping) and provide exhaustive coverage of the broader concept. The constituent concepts can be either sentinel or substantive,  The set can be described by either enumeration or by an expression."@en;
  
.

cdi:ConceptualDomain-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:ConceptualDomain;
  rdfs:range cdi:CatalogDetails;
.

cdi:ConceptualDomain-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:ConceptualDomain;
  rdfs:range cdi:LabelForDisplay;
.

cdi:ConceptualDomain-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:ConceptualDomain;
  rdfs:range cdi:Identifier;
.


cdi:ConceptualDomain_isDescribedBy_ValueAndConceptDescription
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDescribedBy";
  skos:altLabel "ConceptualDomain_isDescribedBy_ValueAndConceptDescription";
  rdfs:comment "A description of the concepts in the domain. A numeric domain might use a logical expression to be machine actionable; a text domain might use a regular expression to describe strings that describe the concepts."@en;
  rdfs:domain cdi:ConceptualDomain;
  rdfs:range cdi:ValueAndConceptDescription;
.

cdi:ConceptualDomain_takesConceptsFrom_ConceptSystem
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesConceptsFrom";
  skos:altLabel "ConceptualDomain_takesConceptsFrom_ConceptSystem";
  rdfs:comment "Conceptual domain takes concept from zero to one concept system."@en;
  rdfs:domain cdi:ConceptualDomain;
  rdfs:range cdi:ConceptSystem;
.


# class ConceptualVariable
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable
cdi:ConceptualVariable
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ConceptualVariable";
  rdfs:comment "Definition \n============ \nA variable at the highest level of abstraction.\n  \nExamples \n========== \nA gender variable defining two categories – \"male\" and \"female\" allowing relating each of these to concepts having description of how these categories are decided.\n\nExplanatory notes \n=================== \nThe conceptual variable allows for describing the domain of concepts it can take on as well as the type of unit that can be measured. A conceptual variable for blood pressure might, for example describe the conditions under which the pressure is to be taken (sitting as opposed to standing) and a conceptual value domain as height of mercury – without units. One represented variable would further refine this by specifying inches as the unit of measurement for the height. Another might specify that the height be represented in centimeters. Both represented variables could reference the same conceptual variable to indicate in what way they are comparable."@en;
  rdfs:subClassOf cdi:Concept;
.

cdi:ConceptualVariable-descriptiveText
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "descriptiveText";
  rdfs:comment "A short natural language account of the characteristics of the object."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:InternationalString;
.

cdi:ConceptualVariable-unitOfMeasureKind
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "unitOfMeasureKind";
  rdfs:comment "Kind of unit of measure, so that it may be prone to translation to equivalent UOMs. Example values include \"acceleration,\" \"temperature,\" \"salinity\", etc. This description exists at the conceptual level, indicating a limitation on the type of representations which may be used for the variable as it is made more concrete."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.


cdi:ConceptualVariable_measures_UnitType
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "measures";
  skos:altLabel "ConceptualVariable_measures_UnitType";
  rdfs:comment "Identifies the unit type associated with the conceptual variable."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:UnitType;
.

cdi:ConceptualVariable_takesSentinelConceptsFrom_SentinelConceptualDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesSentinelConceptsFrom";
  skos:altLabel "ConceptualVariable_takesSentinelConceptsFrom_SentinelConceptualDomain";
  rdfs:comment "Identifies the conceptual domain containing the set of sentinel concepts used to describe the conceptual variable."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:SentinelConceptualDomain;
.

cdi:ConceptualVariable_takesSubstantiveConceptsFrom_SubstantiveConceptualDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesSubstantiveConceptsFrom";
  skos:altLabel "ConceptualVariable_takesSubstantiveConceptsFrom_SubstantiveConceptualDomain";
  rdfs:comment "Identifies the substantive conceptual domain containing the set of substantive concepts used to describe the conceptual variable."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:SubstantiveConceptualDomain;
.

cdi:ConceptualVariable_uses_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "uses";
  skos:altLabel "ConceptualVariable_uses_Concept";
  rdfs:comment "Reference to a concept that is being used."@en;
  rdfs:domain cdi:ConceptualVariable;
  rdfs:range cdi:Concept;
.


# class InstanceVariable
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::InstanceVariable
cdi:InstanceVariable
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "InstanceVariable";
  rdfs:comment "Definition\n==========\nUse of a represented variable within a data set.  \n\nExamples\n======== \n1. Gender: Dan Gillman has gender <m, male>, Arofan Gregory has gender <m, male>, etc.\n2. Number of employees: Microsoft has 90,000 employees; IBM has 433,000 employees, etc.\n3. Endowment: Johns Hopkins has endowment of <3, $1,000,000 and above>, Yale has endowment of <3, $1,000,000 and above>, etc.\n4. A tornado near Winterset, Iowa, had a peak wind speed of 170 mph. Two instance variables of a person's height reference the same represented variable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same substantive value domain, use a sentinel value domain drawn from the same set of sentinel value domains, have the same sentinel (missing value) concepts, and draw their population from the same universe. In other words, the two instance variables should be comparable.\n\nExplanatory notes\n================= \nThe instance variable class inherits all of the properties and relationships of the represented variable class and, in turn, the conceptual variable class. This means that an instance variable can be completely populated without the need to create an associated represented variable or conceptual variable. If, however, a user wishes to indicate that a particular instance variable is patterned after a particular represented variable or a particular conceptual variable that may be indicated by including a relationship to the represented variable and/or conceptual variable. Including these references is an important method of indicating that multiple instance variables have the same representation, measure the same concept, and are drawn from the same universe. If two instance variables of a person's height reference the same represented variable. This indicates that they are intended to: be measured with the same unit of measurement, have the same intended data type, have the same substantive value domain, use a sentinel value domain drawn from the same set of sentinel value domains, have the same sentinel (missing value) concepts, and draw their population from the same universe. In other words, the two instance variables should be comparable. The instance variable describes actual instances of data that have been collected."@en;
  rdfs:subClassOf cdi:RepresentedVariable;
.

cdi:InstanceVariable-physicalDataType
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "physicalDataType";
  rdfs:comment "The data type of this variable. Supports the optional use of an external controlled vocabulary."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:InstanceVariable-platformType
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "platformType";
  rdfs:comment "Describes the application or technical system context in which the variable has been realized. Typically a statistical processing package or other processing environment."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:InstanceVariable-source
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "source";
  rdfs:comment "Reference capturing provenance information."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:Reference;
.

cdi:InstanceVariable-variableFunction
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "variableFunction";
  rdfs:comment "Immutable characteristic of the variable such as geographic designator, weight, temporal designation, etc."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.


cdi:InstanceVariable_isBasedOn_RepresentedVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "InstanceVariable_isBasedOn_RepresentedVariable";
  rdfs:comment "The represented variable that can be shared by multiple instance variables. Indicates comparability in substantive representation, universe, and (indirectly) conceptual domain. If a relationship to a represented variable is defined there should be no relationship to a conceptual variable."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:RepresentedVariable;
.

cdi:InstanceVariable_measures_Population
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "measures";
  skos:altLabel "InstanceVariable_measures_Population";
  rdfs:comment "Set of specific units (people, entities, objects, events), usually in a given time and geography, being measured. Can be a specialization of the universe measured by a related represented variable."@en;
  rdfs:domain cdi:InstanceVariable;
  rdfs:range cdi:Population;
.


# class Population
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Population
cdi:Population
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Population";
  rdfs:comment "Definition\n============\nUniverse with time and geography specified.\n\nExamples\n==========\n1. Canadian adult persons residing in Canada on 13 November 1956.\n2. US computer companies at the end of 2012.  \n3. Universities in Denmark 1 January 2011.\n\nExplanatory notes\n===================\nPopulation is the most specific in the conceptually narrowing hierarchy of unit type, universe and population. Several populations having differing time and or geography may specialize the same universe."@en;
  rdfs:subClassOf cdi:Universe;
.

cdi:Population-timePeriodOfPopulation
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "timePeriodOfPopulation";
  rdfs:comment "The time period associated with the population."@en;
  rdfs:domain cdi:Population;
  rdfs:range cdi:DateRange;
.


cdi:Population_isComposedOf_Unit
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isComposedOf";
  skos:altLabel "Population_isComposedOf_Unit";
  rdfs:comment "A unit in the population."@en;
  rdfs:domain cdi:Population;
  rdfs:range cdi:Unit;
.

cdi:Population_narrows_Universe
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "narrows";
  skos:altLabel "Population_narrows_Universe";
  rdfs:comment "Reference to a universe that the population narrows."@en;
  rdfs:domain cdi:Population;
  rdfs:range cdi:Universe;
.


# class RepresentedVariable
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::RepresentedVariable
cdi:RepresentedVariable
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "RepresentedVariable";
  rdfs:comment "Definition \n========== \nConceptual variable with a substantive value domain specified.   \n\nExamples \n========== \nThe pair (Number of Employees, Integer), where \"Number of Employees\" is the characteristic of the population (variable) and \"Integer\" is how that measure will be represented (value domain).  \n\nExplanatory notes \n=================== \nExtends from conceptual variable and can contain all descriptive fields without creating a conceptual variable. By referencing a conceptual variable it can indicate a common relationship with represented variables expressing the same characteristic of a universe measured in another way, such as Age of Persons in hours rather than years. Represented variable constrains the coverage of the unit type to a specific universe. In the above case the universe with the measurement of Age in hours may be constrained to Persons under 5 days (120 hours old). Represented variable can define sentinel values for multiple storage systems which have the same conceptual domain but specialized value domains."@en;
  rdfs:subClassOf cdi:ConceptualVariable;
.

cdi:RepresentedVariable-describedUnitOfMeasure
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "describedUnitOfMeasure";
  rdfs:comment "The unit in which the data values are measured (kg, pound, euro), expressed as a value from a controlled system of entries (i.e., QDT). Supports the provision of an identifier for the entry in the authoritative source (a URI, etc.), and the specific vocabulary."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:RepresentedVariable-hasIntendedDataType
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "hasIntendedDataType";
  rdfs:comment "The data type intended to be used by this variable. Supports the optional use of an external controlled vocabulary."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:RepresentedVariable-simpleUnitOfMeasure
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "simpleUnitOfMeasure";
  rdfs:comment "The unit in which the data values are measured (kg, pound, euro), expressed as a simple string, in cases where no additional information is available (in the legacy system) or needed (as in the case of broad agreement within the community of use [i.e., ISO country codes, currencies, etc. in SDMX])"@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range xsd:string;
.


cdi:RepresentedVariable_isBasedOn_ConceptualVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "RepresentedVariable_isBasedOn_ConceptualVariable";
  rdfs:comment "The conceptual variable that can be shared by a set of represented variables. Indicates comparability in conceptual domain and unit type."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:ConceptualVariable;
.

cdi:RepresentedVariable_measures_Universe
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "measures";
  skos:altLabel "RepresentedVariable_measures_Universe";
  rdfs:comment "The defined class of people, entities, events, or objects to be measured by the represented variable."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:Universe;
.

cdi:RepresentedVariable_takesSentinelValuesFrom_SentinelValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesSentinelValuesFrom";
  skos:altLabel "RepresentedVariable_takesSentinelValuesFrom_SentinelValueDomain";
  rdfs:comment "A represented variable may have more than one sets of sentinel value domains, one for each type of software platform on which related instance variables might be instantiated. All of the sentinel value domains must have sentinel conceptual domains that correspond exactly. This allows codes for missing values to be explicitly matched across platforms."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:SentinelValueDomain;
.

cdi:RepresentedVariable_takesSubstantiveValuesFrom_SubstantiveValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesSubstantiveValuesFrom";
  skos:altLabel "RepresentedVariable_takesSubstantiveValuesFrom_SubstantiveValueDomain";
  rdfs:comment "The substantive representation (substantive value domain) of the variable. This is equivalent to the relationship \"Measures\" in the Generic Statistical Information Model (GSIM) although GSIM makes no distinction between substantive and sentinel values."@en;
  rdfs:domain cdi:RepresentedVariable;
  rdfs:range cdi:SubstantiveValueDomain;
.


# class SentinelConceptualDomain
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::SentinelConceptualDomain
cdi:SentinelConceptualDomain
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "SentinelConceptualDomain";
  rdfs:comment "Definition\n==========\nConceptual domain of sentinel concepts.\n\nExamples\n========\n\n- Refused \n- Don't know\n- Lost in processing\n\nExplanatory notes\n=================\nSentinel values are intended for processing purposes whereas substantive values are used for subject matter concerns."@en;
  rdfs:subClassOf cdi:ConceptualDomain;
.



# class SubstantiveConceptualDomain
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::SubstantiveConceptualDomain
cdi:SubstantiveConceptualDomain
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "SubstantiveConceptualDomain";
  rdfs:comment "Definition \n==========\nConceptual domain of substantive concepts.  \n\nExamples \n======== \nAn enumeration of concepts for a categorical variable like \"male\" and \"female\" for gender, or \"ozone\" and \"particulate matter less than 2.5 microns in diameter\" for pollutant in an air quality measure.  \n\nExplanatory notes \n=================\nA conceptual variable links a unit type to a substantive conceptual domain. The latter can be an enumeration or description of the values that the variable may take on. In the enumerated case these are the categories in a category set that can be values, not the codes that represent the values. An example might be the conceptual domain for a variable representing self-identified gender. An enumeration might include the concept of \"male\" and the concept of \"female\". These, in turn, would be represented in a substantive value domain by codes in a code list like \"m\" and \"f\", or \"0\" and \"1\". A conceptual domain might be described through a value and concept description's description property of \"a real number greater than 0\" or through a more formal logical expression of \"all reals x such that x > 0\". Even in the described case, what is being described are conceptual, not the symbols used to represent the values. This may be a subtle distinction, but allows specifying that the same numeric value might be represented by 32 bits or by 64 bits or by an Arabic numeral or a Roman numeral."@en;
  rdfs:subClassOf cdi:ConceptualDomain;
.



# class Unit
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Unit
cdi:Unit
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Unit";
  rdfs:comment "Definition\n==========\nIndividual object of interest for some statistical activity, such as data collection.\n\nExamples\n========\nHere are 3 examples:\n\n1. Individual US person (i.e., Arofan Gregory, Dan Gillman, Barack Obama, etc.)\n2. Individual US computer companies (i.e., Microsoft, Apple, IBM, etc.)\n3. Individual US universities (i.e., Johns Hopkins, University of Maryland, Yale, etc.) [GSIM 1.1]\n\nExplanatory notes\n=================\nIn a traditional data table each column might represent some variable (measurement). Each row would represent the entity (Unit)  to which those variables relate. Height measurements might be made on persons (unit type) of primary school age (Universe) at Pinckney Elementary School on September 1, 2005 (population). The height for Mary Roe (Unit)  might be 139 cm.\n\nThe Unit is not invariably tied to some value. A median income might be calculated for a block in the U.S. but then used as an attribute of a person residing on that block. For the initial measurement the Unit was the block. In the reuse the unit would be that specific person to which the value was applied.\n\nIn a big data table each row represents a unit/variable double. Together a unit identifier and a variable identifier define the key. And for each key there is just one value – the measure of the unit on the variable.\n\nA big data table is sometimes referred to as a column-oriented data store whereas a traditional database is sometimes referred to as a row-oriented data store. The unit plays an identifier role in both types of data stores."@en;
  
.

cdi:Unit-catalogDetails
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "catalogDetails";
  rdfs:comment "Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:CatalogDetails;
.

cdi:Unit-definition
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "definition";
  rdfs:comment "Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:InternationalString;
.

cdi:Unit-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:LabelForDisplay;
.

cdi:Unit-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:Identifier;
.

cdi:Unit-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:ObjectName;
.


cdi:Unit_has_UnitType
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "Unit_has_UnitType";
  rdfs:comment "The unit type of the unit."@en;
  rdfs:domain cdi:Unit;
  rdfs:range cdi:UnitType;
.


# class UnitType
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType
cdi:UnitType
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "UnitType";
  rdfs:comment "Definition\n==========\nUnit type is a type or class of objects of interest (units).\n\nExamples\n========\nPerson, Establishment, Household, State, Country, Dog, Automobile, Neutrino.\n\nExplanatory notes\n=================\nUnit type is the most general in the hierarchy of unit type, universe, and population. It is a description of the basic characteristics for a general set of Units. A universe is a set of entities defined by a specialization of a unit type. A Population further narrows the specification to a specific time and geography.\n\nA unit type is used to describe a class or group of Units based on a single characteristic with no specification of time and geography. For example, the unit type of \"Person\" groups together a set of Units based on the characteristic that they are \"Persons\".\n\nIt concerns not only unit types used in dissemination, but anywhere in the statistical process. E.g. using administrative data might involve the use of a fiscal unit. [GSIM 1.1]."@en;
  rdfs:subClassOf cdi:Concept;
.

cdi:UnitType-descriptiveText
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "descriptiveText";
  rdfs:comment "A short natural language account of the characteristics of the object."@en;
  rdfs:domain cdi:UnitType;
  rdfs:range cdi:InternationalString;
.


cdi:UnitType_uses_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "uses";
  skos:altLabel "UnitType_uses_Concept";
  rdfs:comment "Reference to the concept that is being used."@en;
  rdfs:domain cdi:UnitType;
  rdfs:range cdi:Concept;
.


# class Universe
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::Universe
cdi:Universe
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Universe";
  rdfs:comment "Definition\n============\nSpecialized unit type, with the specialization based upon characteristics other than time and geography.\n\nExamples\n==========\n1. Canadian adults (not limited to those residing in Canada)\n2. Computer companies \n3. Universities\n\nExplanatory notes\n===================\nUniverse sits in a hierarchy between unit type and population, with unit type being most general and Population most specific. A universe is a set of entities defined by a more narrow specification than that of an underlying unit type. A population further narrows the specification to a specific time and geography.\n\nIf the Universe consists of people, a number of factors may be used in defining membership in the Universe, such as age, sex, residence, income, veteran status, criminal convictions, etc. The universe may consist of elements other than persons, such as housing units, court cases, deaths, countries, etc. A universe may be described as \"inclusive\" or \"exclusive\". \n\nNot to be confused with Population, which includes the specification of time and geography."@en;
  rdfs:subClassOf cdi:Concept;
.

cdi:Universe-descriptiveText
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "descriptiveText";
  rdfs:comment "A short natural language account of the characteristics of the object."@en;
  rdfs:domain cdi:Universe;
  rdfs:range cdi:InternationalString;
.

cdi:Universe-isInclusive
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "isInclusive";
  rdfs:comment "Default value is True. The description statement of a universe is generally stated in inclusive terms such as \"All persons with university degree\". Occasionally a universe is defined by what it excludes, i.e., \"All persons except those with university degree\". In this case the value would be changed to False."@en;
  rdfs:domain cdi:Universe;
  rdfs:range xsd:boolean;
.


cdi:Universe_narrows_UnitType
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "narrows";
  skos:altLabel "Universe_narrows_UnitType";
  rdfs:comment "Reference to the unit type that the universe definition narrows."@en;
  rdfs:domain cdi:Universe;
  rdfs:range cdi:UnitType;
.

cdi:Universe_uses_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "uses";
  skos:altLabel "Universe_uses_Concept";
  rdfs:comment "Reference to the concept that is being used."@en;
  rdfs:domain cdi:Universe;
  rdfs:range cdi:Concept;
.


# class VariableCollection
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection
cdi:VariableCollection
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariableCollection";
  rdfs:comment "Definition\n==========\nGroup of any type of variable within the variable cascade (conceptual, represented, instance).\n\nExamples\n========\n1. Variables within a specific section of a study\n2. Variables related to a specific subject or keyword\n3. Variables at a specified level of development or review\n\nExplanatory notes\n================= \nA simple ordered or unordered list of variables can be described via a set of variable position parameters. An optional variable structure can describe a more complex structure for the collection. We might, for example, use the variable structure to group variables by content within a single collection of data or a wave of on-going data collection. For the purposes of management, conceptualization or anything other than organizing a logical record or physical layout."@en;
  
.

cdi:VariableCollection-allowsDuplicates
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "allowsDuplicates";
  rdfs:comment "If value is False, the members are unique within the collection - if True, there may be duplicates. (Note that a mathematical “bag” permits duplicates and is unordered - a “set” does not have duplicates and may be ordered.)"@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range xsd:boolean;
.

cdi:VariableCollection-displayLabel
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "displayLabel";
  rdfs:comment "A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:LabelForDisplay;
.

cdi:VariableCollection-groupingSemantic
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "groupingSemantic";
  rdfs:comment "A semantic term defining the factor used for defining this group."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:VariableCollection-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:Identifier;
.

cdi:VariableCollection-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:ObjectName;
.

cdi:VariableCollection-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:InternationalString;
.

cdi:VariableCollection-usage
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "usage";
  rdfs:comment "Explanation of the ways in which the object is employed."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:InternationalString;
.


cdi:VariableCollection_has_ConceptualVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "VariableCollection_has_ConceptualVariable";
  rdfs:comment "Variable collection has zero to many conceptual variables."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:ConceptualVariable;
.

cdi:VariableCollection_has_VariablePosition
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "VariableCollection_has_VariablePosition";
  rdfs:comment "Variable collection has zero to many variable positions."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:VariablePosition;
.

cdi:VariableCollection_isDefinedBy_Concept
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isDefinedBy";
  skos:altLabel "VariableCollection_isDefinedBy_Concept";
  rdfs:comment "The conceptual basis for the collection of members."@en;
  rdfs:domain cdi:VariableCollection;
  rdfs:range cdi:Concept;
.


# class VariablePosition
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::VariablePosition
cdi:VariablePosition
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariablePosition";
  rdfs:comment "Definition\n============\nAssigns a sequence number to a variable within a list.\n\nExplanatory notes\n===================\nVariable position allows a list of variables to be ordered."@en;
  
.

cdi:VariablePosition-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:VariablePosition;
  rdfs:range cdi:Identifier;
.

cdi:VariablePosition-value
  a rdf:Property, owl:DatatypeProperty, ucmis:Attribute;
  rdfs:label "value";
  rdfs:comment "Index value of the member in an ordered array."@en;
  rdfs:domain cdi:VariablePosition;
  rdfs:range xsd:integer;
.


cdi:VariablePosition_indexes_ConceptualVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "indexes";
  skos:altLabel "VariablePosition_indexes_ConceptualVariable";
  rdfs:comment "Variable position indexes a conceptual variable."@en;
  rdfs:domain cdi:VariablePosition;
  rdfs:range cdi:ConceptualVariable;
.


# class VariableRelationship
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableRelationship
cdi:VariableRelationship
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariableRelationship";
  rdfs:comment "Definition \n============ \nRelationship between any variables in the variable cascade (conceptual, represented, instance), based on an ordered relation."@en;
  
.

cdi:VariableRelationship-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:VariableRelationship;
  rdfs:range cdi:Identifier;
.

cdi:VariableRelationship-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:VariableRelationship;
  rdfs:range cdi:ControlledVocabularyEntry;
.


cdi:VariableRelationship_hasSource_ConceptualVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasSource";
  skos:altLabel "VariableRelationship_hasSource_ConceptualVariable";
  
  rdfs:domain cdi:VariableRelationship;
  rdfs:range cdi:ConceptualVariable;
.

cdi:VariableRelationship_hasTarget_ConceptualVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasTarget";
  skos:altLabel "VariableRelationship_hasTarget_ConceptualVariable";
  rdfs:comment "Note that this can be realized as a collection to support tuples."@en;
  rdfs:domain cdi:VariableRelationship;
  rdfs:range cdi:ConceptualVariable;
.


# class VariableStructure
# based on the UML class DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableStructure
cdi:VariableStructure
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "VariableStructure";
  rdfs:comment "Definition \n============ \nRelation structure for use with any set of variables in the variable cascade (conceptual, represented, instance)."@en;
  
.

cdi:VariableStructure-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:Identifier;
.

cdi:VariableStructure-name
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "name";
  rdfs:comment "Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:OrganizationName;
.

cdi:VariableStructure-purpose
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "purpose";
  rdfs:comment "Intent or reason for the object/the description of the object."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:InternationalString;
.

cdi:VariableStructure-semantics
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "semantics";
  rdfs:comment "Specifies the semantics of the object in reference to a vocabulary, ontology, etc."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:VariableStructure-specification
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "specification";
  rdfs:comment "Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:StructureSpecification;
.

cdi:VariableStructure-topology
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "topology";
  rdfs:comment "Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:ControlledVocabularyEntry;
.

cdi:VariableStructure-totality
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "totality";
  rdfs:comment "Indicates whether the related collections are comprehensive in terms of their coverage."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:StructureExtent;
.


cdi:VariableStructure_has_VariableRelationship
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "VariableStructure_has_VariableRelationship";
  
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:VariableRelationship;
.

cdi:VariableStructure_structures_VariableCollection
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "structures";
  skos:altLabel "VariableStructure_structures_VariableCollection";
  rdfs:comment "Variable structure structures zero to one variable collection."@en;
  rdfs:domain cdi:VariableStructure;
  rdfs:range cdi:VariableCollection;
.





# PLEASE DO NOT EDIT THIS CODE!
# This code was generated by the Eclipse Acceleo module UCMIS M2T on 2023-05-25 10:41:35.
# Target language is 'Ontology Turtle' ('onto.ttl') generated on the basis of the model 'DDICDIModels'.

# Ontology for Long
# based on the UML package DDICDIModels::DDICDILibrary::Classes::DataDescription::Long
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix ucmis: <http://example.org/TODO/ucmis/> .
@prefix cdi:   <http://ddialliance.org/Specification/DDI-CDI/1.0/RDF/> .

<Long.onto.ttl> a owl:Ontology;
  rdfs:label "Long";
  rdfs:comment "This package contains classes used to define data in which observations are arranged in a stream or flow, as from sensors or entry into administrative registers, and may be understood as events over time, even if irregular. Long structures may also be generated by procedures like the R melt() function that transform a wide structure into a long structure. Some analysis procedures are designed to operate on long structures. Typically, the specific measures may vary across entries as they appear in the flow (measurements are entered in sequence, corresponding to different variables, often unpredictably), and the subject of the measure (the unit) may be repeated at several points in the stream."@en;
.

# class Descriptor
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::Descriptor
cdi:Descriptor
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "Descriptor";
  rdfs:comment "Definition\n==========\nUse of a code for variable identification in the context of a data structure and a variable descriptor component.\n\nExamples\n========\nConsider two variables, i.e. income and age, with values appearing in the same column. Codes \"income\" and \"age\" are descriptors. They appear multiple time in a variable descriptor component, one for each value in the variable value component. Each descriptor references one of those values. This way it's possible to identify which values correspond to income and which ones to age."@en;
  rdfs:subClassOf cdi:InstanceValue;
.


cdi:Descriptor_isBasedOn_VariableDescriptorComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "Descriptor_isBasedOn_VariableDescriptorComponent";
  
  rdfs:domain cdi:Descriptor;
  rdfs:range cdi:VariableDescriptorComponent;
.

cdi:Descriptor_hasValueFrom_DescriptorValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasValueFrom";
  skos:altLabel "Descriptor_hasValueFrom_DescriptorValueDomain";
  
  rdfs:domain cdi:Descriptor;
  rdfs:range cdi:DescriptorValueDomain;
.

cdi:Descriptor_identifies_ReferenceVariable
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "identifies";
  skos:altLabel "Descriptor_identifies_ReferenceVariable";
  
  rdfs:domain cdi:Descriptor;
  rdfs:range cdi:ReferenceVariable;
.

cdi:Descriptor_refersTo_ReferenceValue
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "refersTo";
  skos:altLabel "Descriptor_refersTo_ReferenceValue";
  
  rdfs:domain cdi:Descriptor;
  rdfs:range cdi:ReferenceValue;
.


# class DescriptorValueDomain
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::DescriptorValueDomain
cdi:DescriptorValueDomain
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DescriptorValueDomain";
  rdfs:comment "Definition\n============\nSet of permissible values for a variable playing the role of a variable descriptor component.\n\nExamples\n==========\nConsider two variables, i.e. income and age, with values appearing in the same column. \nCodes \"income\" and \"age\" are descriptors that appear in the descriptor value domain corresponding to the descriptor variable."@en;
  rdfs:subClassOf cdi:SubstantiveValueDomain;
.



# class DescriptorVariable
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::DescriptorVariable
cdi:DescriptorVariable
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "DescriptorVariable";
  rdfs:comment "Definition\n============\nVariable that provides codes for variable identification in the context of a data structure.\nVariable playing the role of a variable descriptor component.\n\nExamples\n==========\nConsider two variables, i.e. income and age, with values apearing in the same column. \nCodes \"income\" and \"age\" are descriptors that appear in the descriptor value domain corresponding to the descriptor variable."@en;
  rdfs:subClassOf cdi:RepresentedVariable;
.


cdi:DescriptorVariable_takesSubstantiveValuesFrom_DescriptorValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesSubstantiveValuesFrom";
  skos:altLabel "DescriptorVariable_takesSubstantiveValuesFrom_DescriptorValueDomain";
  
  rdfs:domain cdi:DescriptorVariable;
  rdfs:range cdi:DescriptorValueDomain;
.


# class LongDataSet
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::LongDataSet
cdi:LongDataSet
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "LongDataSet";
  rdfs:comment "Definition\n============\nOrganized collection of long data. It is structured by a long data structure.\n\nExamples\n==========\nA unit dataset where each row corresponds to a set of data points capturing different characteristics of a unit, some of which can be transposed into variable descriptor and variable value components."@en;
  rdfs:subClassOf cdi:DataSet;
.


cdi:LongDataSet_has_LongKey
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "LongDataSet_has_LongKey";
  
  rdfs:domain cdi:LongDataSet;
  rdfs:range cdi:LongKey;
.


# class LongDataStructure
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::LongDataStructure
cdi:LongDataStructure
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "LongDataStructure";
  rdfs:comment "Definition\n============\nStructure of a long dataset (organized collection of long data). It is described by identifier, measure, attribute, variable descriptor and variable value components.\n\nExamples\n==========\nThe structure described by [Unit id, Income, Province, Variable name, Variable value] where Unit id identifies a statistical unit, Income and Province are two instance variables capturing characteristics, and other instance variables are represented by Variable name (a variable descriptor component) and Variable Value (a variable value component)."@en;
  rdfs:subClassOf cdi:DataStructure;
.



# class LongKey
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::LongKey
cdi:LongKey
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "LongKey";
  rdfs:comment "Definition\n============\nCollection of data instances that uniquely identify a collection of data points in a long dataset.\n\nExamples\n==========\nCollection containing the single \"K1Z1C1\" string in a long dataset where rows are identified by postal code representations."@en;
  
.

cdi:LongKey-identifier
  a rdf:Property, owl:ObjectProperty, ucmis:Attribute;
  rdfs:label "identifier";
  rdfs:comment "Identifier for objects requiring short- or long-lasting referencing and management."@en;
  rdfs:domain cdi:LongKey;
  rdfs:range cdi:Identifier;
.


cdi:LongKey_correspondsTo_Unit
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "correspondsTo";
  skos:altLabel "LongKey_correspondsTo_Unit";
  
  rdfs:domain cdi:LongKey;
  rdfs:range cdi:Unit;
.

cdi:LongKey_identifies_DataPoint
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "identifies";
  skos:altLabel "LongKey_identifies_DataPoint";
  
  rdfs:domain cdi:LongKey;
  rdfs:range cdi:DataPoint;
.

cdi:LongKey_has_Descriptor
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "LongKey_has_Descriptor";
  
  rdfs:domain cdi:LongKey;
  rdfs:range cdi:Descriptor;
.

cdi:LongKey_has_LongMainKeyMember
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "has";
  skos:altLabel "LongKey_has_LongMainKeyMember";
  
  rdfs:domain cdi:LongKey;
  rdfs:range cdi:LongMainKeyMember;
.


# class LongMainKeyMember
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::LongMainKeyMember
cdi:LongMainKeyMember
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "LongMainKeyMember";
  rdfs:comment "Definition\n============\nSingle data instance that is part of a long key. \n\nExamples\n==========\nThe \"K1Z1C1\" string in a long dataset where rows are identified by postal code representations."@en;
  rdfs:subClassOf cdi:InstanceValue;
.


cdi:LongMainKeyMember_isBasedOn_AttributeComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "LongMainKeyMember_isBasedOn_AttributeComponent";
  
  rdfs:domain cdi:LongMainKeyMember;
  rdfs:range cdi:AttributeComponent;
.

cdi:LongMainKeyMember_isBasedOn_IdentifierComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "LongMainKeyMember_isBasedOn_IdentifierComponent";
  
  rdfs:domain cdi:LongMainKeyMember;
  rdfs:range cdi:IdentifierComponent;
.

cdi:LongMainKeyMember_isBasedOn_MeasureComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "isBasedOn";
  skos:altLabel "LongMainKeyMember_isBasedOn_MeasureComponent";
  
  rdfs:domain cdi:LongMainKeyMember;
  rdfs:range cdi:MeasureComponent;
.


# class ReferenceValue
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceValue
cdi:ReferenceValue
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ReferenceValue";
  rdfs:comment "Definition\n============\nRecorded value in a variable value component. \nValue referenced by a descriptor.\n\nExamples\n==========\nConsider two variables, i.e. income and age, with values appearing in the same column, e.g. 100000, 45, 85000, 34, etc. \nCodes \"income\" and \"age\" are descriptors whereas 100000, 45, 85000, 34 are reference values."@en;
  rdfs:subClassOf cdi:InstanceValue;
.


cdi:ReferenceValue_correspondsTo_VariableValueComponent
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "correspondsTo";
  skos:altLabel "ReferenceValue_correspondsTo_VariableValueComponent";
  
  rdfs:domain cdi:ReferenceValue;
  rdfs:range cdi:VariableValueComponent;
.

cdi:ReferenceValue_hasValueFrom_ReferenceValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "hasValueFrom";
  skos:altLabel "ReferenceValue_hasValueFrom_ReferenceValueDomain";
  
  rdfs:domain cdi:ReferenceValue;
  rdfs:range cdi:ReferenceValueDomain;
.


# class ReferenceValueDomain
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceValueDomain
cdi:ReferenceValueDomain
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ReferenceValueDomain";
  rdfs:comment "Definition\n============\nSet of permissible values for a variable playing the role of a variable value component.\n\nExamples\n==========\nConsider two variables, i.e. income and age, with values appearing in the same column. A reference variable in this case would be a type of represented variable that can take on values from both income and age. A long data structure might have a column that takes on values from this reference variable. A descriptor variable would then have values paired with the values from the reference variable, pointing to either the income or age variable."@en;
  rdfs:subClassOf cdi:ValueDomain;
.



# class ReferenceVariable
# based on the UML class DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceVariable
cdi:ReferenceVariable
  a rdfs:Class, owl:Class, ucmis:Class;
  rdfs:label "ReferenceVariable";
  rdfs:comment "Definition\n============\nVariable that records values of multiple variables in the context of a data structure.\nVariable playing the role of a variable value component.\n\nExamples\n==========\nConsider two variables, i.e. income and age, with values appearing in the same column, e.g. 100000, 45, 85000, 34, etc. \nValues 100000, 45, 85000, 34 are reference values in the reference value domain corresponding to the reference variable."@en;
  rdfs:subClassOf cdi:RepresentedVariable;
.


cdi:ReferenceVariable_takesValuesFrom_ReferenceValueDomain
  a rdf:Property, owl:ObjectProperty, ucmis:Association;
  # ASSOCIATION
  rdfs:label "takesValuesFrom";
  skos:altLabel "ReferenceVariable_takesValuesFrom_ReferenceValueDomain";
  rdfs:comment "Points to a value domain that contains values that may be drawn from the domains of multiple simple variables."@en;
  rdfs:domain cdi:ReferenceVariable;
  rdfs:range cdi:ReferenceValueDomain;
.





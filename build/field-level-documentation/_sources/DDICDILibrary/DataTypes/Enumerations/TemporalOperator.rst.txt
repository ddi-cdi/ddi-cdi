.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::Enumerations::TemporalOperator:

TemporalOperator
****************

**Fully qualified enumeration name**: DDICDIModels::DDICDILibrary::DataTypes::Enumerations:::index:`TemporalOperator`

Definition
============
Set of control flow operators where the continuation of the execution flow depends on the finalization of one or more preceding activities.

.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/DataTypes/Enumerations/TemporalOperator.pu

.. dropdown:: Enumeration literals
   :open:

   .. list-table::
      :widths: 20 80
      :header-rows: 1
      :class: datatable-enumeration-literals

      * - Name
        - Description
      * - AndJoin
        - Given three activities A, B and C, if ANDJoin(A, B) -> C, then C is executed after both A and B finish executing. ANDJoin is sometimes referred to as synchronization.
      * - AndSplit
        - Given three activities A, B and C, if ANDSplit(A) -> (B, C), then both B and C are executed after A finishes executing.
      * - XorJoin
        - Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes referred to as simple merge.
      * - XorSplit
        - Given three activities A, B and C, if XORSplit(A) -> (B, C), then either B or C is executed, not both, after A finishes executing. XORSplit is sometimes referred to as exclusive choice.

.. dropdown:: Usage

   .. list-table::
      :widths: 25 25 25 25
      :header-rows: 1
      :class: datatable-usage

      * - Type
        - Package
        - Classifier
        - Attribute
      * - Class
        - Process
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct`
        - temporalControl


.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the enumeration **TemporalOperator**

         .. literalinclude:: /xmi/TemporalOperator.xmi 
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the enumeration **TemporalOperator**

         .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/TemporalOperator_xsd.txt 
            :language: xml
            :linenos:
            :dedent: 2
            :emphasize-lines: 1

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the enumeration **TemporalOperator** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/TemporalOperator.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

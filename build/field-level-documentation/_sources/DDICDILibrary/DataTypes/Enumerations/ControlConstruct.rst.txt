.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::Enumerations::ControlConstruct:

ControlConstruct
****************

**Fully qualified enumeration name**: DDICDIModels::DDICDILibrary::DataTypes::Enumerations:::index:`ControlConstruct`

Definition
============
Type of control construct used by the conditional control logic related to an activity.

.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/Enumerations/ControlConstruct.pu

.. container::
   :name: literals

   .. dropdown:: Enumeration literals
      :open:

      .. list-table::
         :widths: 20 80
         :header-rows: 1
         :class: datatable-enumeration-literals

         * - Name
           - Description
         * - Else
           - Describes an Else type of control construct.
         * - IfThen
           - Describes an IfThen type of control construct.  If the stated condition is met, the Then clause is triggered.
         * - Loop
           - Describes a Loop type of control construct (loops until a limiting condition is met).
         * - RepeatUntil
           - Describes an RepeatUntil type of control construct (to be repeated until a specified condition is met).
         * - RepeatWhile
           - Describes a RepeatWhile type of control construct (to be repeated while a specified condition is met).

.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic`
           - construct


.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the enumeration **ControlConstruct**

            .. literalinclude:: /xmi/ControlConstruct.xmi 
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the enumeration **ControlConstruct**

            .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/ControlConstruct_xsd.txt 
               :language: xml
               :linenos:
               :dedent: 2
               :emphasize-lines: 1

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the enumeration **ControlConstruct** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/ControlConstruct.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

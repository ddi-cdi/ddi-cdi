.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::Enumerations::TemporalRelation:

TemporalRelation
****************

**Fully qualified enumeration name**: DDICDIModels::DDICDILibrary::DataTypes::Enumerations:::index:`TemporalRelation`

Definition
==========
Set of thirteen Allen's interval relations defined as Contains, Finishes, Meets, Overlaps, Precedes, Starts (and their converses), plus Equals. These are jointly exhaustive and pairwise disjoint binary relations representing temporal relationships between pairs of time intervals.

Explanatory notes
=================
Here are the relations in Allen's interval algebra:

- a precedes b (p) and b is preceded by a (P)
- a meets b (m) and b is met by a (M)
- a overlaps b (o) and b is overlapped by a (O)
- a is finished by b (F) and b finishes a (f)
- a contains B (D) and b is during a (d)
- a starts b (s) and b is started by a (S)
- a and b equal (e) each other

.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/Enumerations/TemporalRelation.pu

.. container::
   :name: literals

   .. dropdown:: Enumeration literals
      :open:

      .. list-table::
         :widths: 20 80
         :header-rows: 1
         :class: datatable-enumeration-literals

         * - Name
           - Description
         * - Contains
           - A contains interval relation. Representation of the contains relation in Allen's interval algebra. We say that an interval A contains another interval B if and only if A begins before B but finishes after it. More precisely, A.start < B.start < B.end < A.end. Instead of saying that A contains B we can also say that B is during A (converse). An asymmetric relationship: anti-reflexive, anti-symmetric, transitive.
         * - Equals
           - An equals interval relation. Representation of the equals relation in Allen's interval algebra. We say that an interval A equals another interval B if and only if they both begin and finish at the same time. More precisely, A.start = B.start < A.end = B.end. Instead of saying that A equals B we can also say the B equals A (reflexive). An equivalence symmetric relationship: reflexive, symmetric, transitive.
         * - Finishes
           - A finishes interval relation. Representation of the finishes relation in Allen's interval algebra. We say that an interval A finishes another interval B if and only if A begins after B but both finish at the same time. More precisely, B.start < A.start < B.end = A.end. Instead of saying that A finishes B we can also say that B is finished by A (converse). An asymmetric relationship: anti-reflexive, anti-symmetric, transitive.
         * - Meets
           - A meets interval relation. Representation of the meets relation in Allen's interval algebra. We say that an interval A meets another interval B if and only if A finishes when B begins. More precisely, A.ends = B.start. Instead of saying that A meets B we can also say that B is met by A (converse). An immediate-precedence relationship: anti-reflexive, anti-symmetric, anti-transitive.
         * - Overlaps
           - A overlaps interval relation. Representation of the overlaps relation in Allen's interval algebra. We say that an interval A overlaps another interval B if and only if A begins before B but finishes during B. More precisely, A.start < B.start < A.end < B.end. Instead of saying that A overlaps B we can also say that B is overlapped by A (converse). An acyclic precedence relationship: anti-reflexive, anti-symmetric, neither.
         * - Precedes
           - A precedes interval relation. Representation of the precedes relation in Allen's interval algebra. We say that an interval A precedes another interval B if and only if A finishes before B begins. More precisely, A.end < B.start. Instead of saying that A precedes B we can also say that B is preceded by A (converse). An asymmetric relationship: anti-reflexive, anti-symmetric, transitive.
         * - Starts
           - A starts interval relation. Representation of the starts relation in Allen's interval algebra. We say that an interval A starts another interval B if and only if they both start at the same time but A finishes first. More precisely, A.start = B.start < A.end. An asymmetric relationship: anti-reflexive, anti-symmetric, transitive.

.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra`
           - temporalIntervalRelation


.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the enumeration **TemporalRelation**

            .. literalinclude:: /xmi/TemporalRelation.xmi 
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the enumeration **TemporalRelation**

            .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/TemporalRelation_xsd.txt 
               :language: xml
               :linenos:
               :dedent: 2
               :emphasize-lines: 1

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the enumeration **TemporalRelation** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/Enumerations/TemporalRelation.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

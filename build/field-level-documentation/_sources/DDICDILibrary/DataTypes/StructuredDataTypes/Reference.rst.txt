.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference:

Reference
*********

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`Reference`

Definition
============
Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/Reference.pu


.. container::
   :name: attributes

   .. dropdown:: Attributes

      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes

         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - ddiReference
           - \- *own datatype* \-
           - A DDI type reference to a DDI object.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalRegistrationDataIdentifier` 
           - 0..1
           - 

         * - deepLink
           - \- *own datatype* \-
           - The selector refers to the object identifier by the ddiReference and has deep linking purposes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Selector` 
           - 0..1
           - 

         * - description
           - \- *own datatype* \-
           - Human-readable description of the reference.
           - String 
           - 0..1
           - 

         * - location
           - \- *own datatype* \-
           - The location of the referenced resource, as appropriate to support retrieval.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - nonDdiReference
           - \- *own datatype* \-
           - A non-DDI reference to any object using a system of identification which is not supported by a URI.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::NonDdiIdentifier` 
           - 0..*
           - 

         * - semantic
           - \- *own datatype* \-
           - External qualifier to describe the purpose or meaning of the reference.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..1
           - 

         * - uri
           - \- *own datatype* \-
           - A URI to any object.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::XMLSchemaDataTypes::XsdAnyUri` 
           - 0..1
           - 

         * - validType
           - \- *own datatype* \-
           - The expected type of the reference (e.g., the class or element according to the schema of the referenced resource).
           - String 
           - 0..*
           - 


.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
           - externalDefinition
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - externalDefinition
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::InstanceVariable`
           - source
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - entityProduced
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - entityUsed
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - standardModelMapping
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Parameter`
           - entityBound
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::AgentInRole`
           - reference
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - relatedResource
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry`
           - entryReference
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry`
           - vocabulary
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LicenseInformation`
           - licenseReference

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the data type **Reference** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

            .. literalinclude:: /xmi/Reference.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the data type **Reference** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/Reference_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the data type **Reference** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/Reference.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the data type **Reference** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/Reference.jsonld 
               :language: jsonld
               :linenos:
               :emphasize-lines: 5


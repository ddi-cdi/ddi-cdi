.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandFile:

CommandFile
***********

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`CommandFile`

Definition
============
Identifies and provides a link to an external copy of the command, for example, a SAS Command Code script. Designates the programming language of the command file, a description of the location of the file , and a URN or URL for the command file.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandFile.pu


.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - location
        - \- *own datatype* \-
        - A description of the location of the file. This may not be machine actionable. It supports a description expressed in multiple languages.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - uri
        - \- *own datatype* \-
        - The URL or URN of the command file.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::XMLSchemaDataTypes::XsdAnyUri` 
        - 0..1
        - 


.. dropdown:: Usage

   .. list-table::
      :widths: 25 25 25 25
      :header-rows: 1
      :class: datatable-usage

      * - Type
        - Package
        - Classifier
        - Attribute
      * - DataType
        - StructuredDataTypes
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandCode`
        - commandFile

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the data type **CommandFile** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/CommandFile.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the data type **CommandFile** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandFile_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the data type **CommandFile** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandFile.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the data type **CommandFile** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandFile.jsonld 
            :language: jsonld
            :linenos:
            :emphasize-lines: 5


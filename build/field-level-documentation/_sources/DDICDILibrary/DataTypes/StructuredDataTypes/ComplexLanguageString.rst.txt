.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ComplexLanguageString:

ComplexLanguageString
*********************

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`ComplexLanguageString`

Definition
============
Allows for non-formatted language specific strings that may be translations from other languages, or that may be translatable into other languages. Only one string per language/scope type is allowed. Language specific string contains the following attributes, xmlang to designate the language, isTranslated with a default value of false to designate if an object is a translation of another language, isTranslatable with a default value of true to designate if the content can be translated, translationSourceLanguage to indicate the source languages used in creating this translation, translationDate, and scope which can be used to define intended audience or use such as internal, external, etc.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/ComplexLanguageString.pu

.. dropdown:: Inheritance

   .. |_| unicode:: U+2003 .. em space

   .. role:: focus

   .. cssclass:: regular

   | :ref:`StructuredDataTypes::LanguageString<DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LanguageString>`

   .. cssclass:: regular

   | |_| ᐊ── :focus:`StructuredDataTypes::ComplexLanguageString`




.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - isTranslatable
        - \- *own datatype* \-
        - Indicates whether content is translatable (True) or not (False). An example of something that is not translatable would be a MNEMONIC of an object or a number.
        - Boolean 
        - 0..1
        - true

      * - isTranslated
        - \- *own datatype* \-
        - Indicates whether content is a translation (True) or an original (False).
        - Boolean 
        - 0..1
        - false

      * - scope
        - \- *own datatype* \-
        - Supports specification of scope for the contained content. Use with the language specification to filter application of content.
        - String 
        - 0..1
        - 

      * - structureUsed
        - \- *own datatype* \-
        - The structure type used. Examples are HTML or restructured text.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
        - 0..1
        - 

      * - translationDate
        - \- *own datatype* \-
        - The date the content was translated. Provision of translation date allows user to verify if translation was available during data collection or other time linked activity.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::XMLSchemaDataTypes::XsdDate` 
        - 0..1
        - 

      * - translationSourceLanguage
        - \- *own datatype* \-
        - List the language code of the source. Repeat of multiple language sources are used.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::XMLSchemaDataTypes::XsdLanguage` 
        - 0..*
        - 

      * - content
        - :ref:`StructuredDataTypes::LanguageString<DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LanguageString>`
        - The content of the string.
        - String 
        - 1..1
        - 

      * - language
        - :ref:`StructuredDataTypes::LanguageString<DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LanguageString>`
        - Definition from XML Schema Part 2: Datatypes Second Edition:
          "language" represents natural language identifiers as defined by by [RFC 3066]. The value space of "language" is the set of all strings that are valid language identifiers as defined [RFC 3066] . The lexical space of language is the set of all strings that conform to the pattern [a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*. The base type of "language" is token. https://www.w3.org/TR/xmlschema-2/#language.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::XMLSchemaDataTypes::XsdLanguage` 
        - 0..1
        - 


.. dropdown:: Usage

   .. list-table::
      :widths: 25 25 25 25
      :header-rows: 1
      :class: datatable-usage

      * - Type
        - Package
        - Classifier
        - Attribute
      * - DataType
        - StructuredDataTypes
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString`
        - languageSpecificString

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the data type **ComplexLanguageString** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/ComplexLanguageString.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the data type **ComplexLanguageString** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/ComplexLanguageString_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the data type **ComplexLanguageString** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/ComplexLanguageString.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the data type **ComplexLanguageString** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/ComplexLanguageString.jsonld 
            :language: jsonld
            :linenos:
            :emphasize-lines: 5


.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CorrespondenceDefinition:

CorrespondenceDefinition
************************

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`CorrespondenceDefinition`

Definition
============
Describes the commonalities and differences between two members using a textual description of both commonalities and differences plus an optional coding of the type of commonality.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/CorrespondenceDefinition.pu


.. container::
   :name: attributes

   .. dropdown:: Attributes

      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes

         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - commonality
           - \- *own datatype* \-
           - A description of the common features of the two items. Supports multiple language versions of the same content as well as optional formatting of the content.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - commonalityCode
           - \- *own datatype* \-
           - Commonality expressed as a term or code. Supports the use of an external controlled vocabulary. If repeated, clarify each external controlled vocabulary used.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..*
           - 

         * - difference
           - \- *own datatype* \-
           - A description of the differences between the two items. Supports multiple language versions of the same content as well as optional formatting of the content.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - matching
           - \- *own datatype* \-
           - Allows specification of exact match, close match, or disjoint. These relationships can be further defined by describing commonalities or differences or providing additional controlled vocabulary descriptions of relationships.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::Enumerations::MatchingCriterion` 
           - 0..1
           - 


.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - correspondence
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::InstanceVariableMap`
           - correspondence
         * - Class
           - CollectionsPattern
           - :ref:`DDICDIModels::DesignPatterns::CollectionsPattern::Map`
           - correspondence

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the data type **CorrespondenceDefinition** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

            .. literalinclude:: /xmi/CorrespondenceDefinition.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the data type **CorrespondenceDefinition** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CorrespondenceDefinition_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2


         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the data type **CorrespondenceDefinition** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CorrespondenceDefinition.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the data type **CorrespondenceDefinition** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CorrespondenceDefinition.jsonld 
               :language: jsonld
               :linenos:
               :emphasize-lines: 5




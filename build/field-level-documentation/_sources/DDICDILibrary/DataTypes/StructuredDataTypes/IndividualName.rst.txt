.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::IndividualName:

IndividualName
**************

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`IndividualName`

Definition
============
The name of an individual broken out into its component parts of prefix, first/given name, middle name, last/family/surname, and suffix. The preferred compilation of the name parts may also be provided. The legal or formal name of the individual should have the isFormal attribute set to true. The preferred name should be noted with the isPreferred attribute. The attribute sex provides information to assist in the appropriate use of pronouns.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/IndividualName.pu


.. container::
   :name: attributes

   .. dropdown:: Attributes

      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes

         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - abbreviation
           - \- *own datatype* \-
           - An abbreviation or acronym for the name. This may be expressed in multiple languages. It is assumed that if only a single language is provided that it may be used in any of the other languages within which the name itself is expressed.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - context
           - \- *own datatype* \-
           - A name may be specific to a particular context, i.e. common usage, business, social, etc.. Identify the context related to the specified name. Supports the use of an external controlled vocabulary.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..1
           - 

         * - effectiveDates
           - \- *own datatype* \-
           - Clarifies when the name information is accurate.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::DateRange` 
           - 0..1
           - 

         * - firstGiven
           - \- *own datatype* \-
           - First (given) name of the individual.
           - String 
           - 0..1
           - 

         * - fullName
           - \- *own datatype* \-
           - This provides a means of providing a full name as a single object for display or print such as identification badges etc. For example a person with the name of William Grace for official use may prefer a display name of Bill Grace on a name tag or other informal publication.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - isFormal
           - \- *own datatype* \-
           - The legal or formal name of the individual should have the isFormal attribute set to True. To avoid confusion only one individual name should have the isFormal attribute set to True. Use the TypeOfIndividualName to further differentiate the type and applied usage when multiple names are provided.
           - Boolean 
           - 0..1
           - 

         * - isPreferred
           - \- *own datatype* \-
           - If more than one name for the object is provided, use the isPreferred attribute to indicate which is the preferred name content. All other names should be set to isPreferred=False.
           - Boolean 
           - 0..1
           - 

         * - lastFamily
           - \- *own datatype* \-
           - Last (family) name /surname of the individual.
           - String 
           - 0..1
           - 

         * - middle
           - \- *own datatype* \-
           - Middle name or initial of the individual.
           - String 
           - 0..*
           - 

         * - prefix
           - \- *own datatype* \-
           - Title that precedes the name of the individual, such as Ms., or Dr.
           - String 
           - 0..1
           - 

         * - sex
           - \- *own datatype* \-
           - Sex allows for the specification of male, female or neutral. The purpose of providing this information is to assist others in the appropriate use of pronouns when addressing the individual. Note that many countries/languages may offer a neutral pronoun form.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::Enumerations::SexSpecification` 
           - 0..1
           - 

         * - suffix
           - \- *own datatype* \-
           - Title that follows the name of the individual, such as Esq. (abbreviation for Esquire. This is usually a courtesy title).
           - String 
           - 0..1
           - 

         * - typeOfIndividualName
           - \- *own datatype* \-
           - The type of individual name provided. the use of a controlled vocabulary is strongly recommended. At minimum his should include, e.g. PreviousFormalName, Nickname (or CommonName), Other.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..1
           - 


.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Agents
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::Individual`
           - individualName

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the data type **IndividualName** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

            .. literalinclude:: /xmi/IndividualName.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the data type **IndividualName** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/IndividualName_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the data type **IndividualName** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/IndividualName.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the data type **IndividualName** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/IndividualName.jsonld 
               :language: jsonld
               :linenos:
               :emphasize-lines: 5


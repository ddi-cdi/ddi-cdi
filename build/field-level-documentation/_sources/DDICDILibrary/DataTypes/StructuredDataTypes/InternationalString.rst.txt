.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString:

InternationalString
*******************

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`InternationalString`

Definition
============
Packaging structure for multilingual versions of the same string content, represented by a set of LanguageString. Only one LanguageString per language/scope type is allowed. Where an element of this type (InternationalString) is repeatable, the expectation is that each repetition contains a different content, each of which can be expressed in multiple languages.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/InternationalString.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :focus:`StructuredDataTypes::InternationalString`

      .. cssclass:: regular

      |    ᐊ── :ref:`StructuredDataTypes::BibliographicName<DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::BibliographicName>`

      .. cssclass:: regular

      |    ᐊ── :ref:`StructuredDataTypes::LabelForDisplay<DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay>`




.. container::
   :name: attributes

   .. dropdown:: Attributes

      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes

         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - languageSpecificString
           - \- *own datatype* \-
           - A non-formatted string of text with an attribute that designates the language of the text. Repeat this object to express the same content in another language.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LanguageString` 
           - 0..*
           - 


.. container::
   :name: usage

   .. dropdown:: Usage

      .. list-table::
         :widths: 25 25 25 25
         :header-rows: 1
         :class: datatable-usage

         * - Type
           - Package
           - Classifier
           - Attribute
         * - Class
           - Agents
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::Agent`
           - purpose
         * - Class
           - Agents
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing`
           - purpose
         * - Class
           - Agents
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentStructure`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Category`
           - descriptiveText
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::CategoryRelationStructure`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
           - definition
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - usage
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptStructure`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystemCorrespondence`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystemCorrespondence`
           - usage
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable`
           - descriptiveText
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Unit`
           - definition
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType`
           - descriptiveText
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
           - purpose
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
           - usage
         * - Class
           - Conceptual
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableStructure`
           - purpose
         * - Class
           - Dimensional
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::Revision`
           - overview
         * - Class
           - Dimensional
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::ScopedMeasure`
           - frequency
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
           - aboutMissing
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecordRelationStructure`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
           - overview
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSetStructure`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalLayoutRelationStructure`
           - criteria
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalLayoutRelationStructure`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegment`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegmentStructure`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
           - overview
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::RecordRelation`
           - purpose
         * - Class
           - FormatDescription
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::RecordRelation`
           - usage
         * - Class
           - Process
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - definition
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::AuthorizationSource`
           - legalMandate
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::AuthorizationSource`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::AuthorizationSource`
           - statementOfAuthorization
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
           - corrections
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndexEntry`
           - entry
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItem`
           - changeFromPreviousVersion
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItem`
           - changeLog
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItem`
           - explanatoryNotes
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItem`
           - futureNotes
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationItemStructure`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeries`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeriesStructure`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodeListStructure`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain`
           - purpose
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::LevelStructure`
           - usage
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - changeFromBase
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - copyright
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - purposeOfVariant
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - rationale
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - updateChanges
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::StatisticalClassification`
           - usage
         * - Class
           - Representations
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ValueAndConceptDescription`
           - description
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::AccessInformation`
           - copyright
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::AccessInformation`
           - rights
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::AccessLocation`
           - physicalLocation
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - alternativeTitle
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - informationSource
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - subTitle
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - summary
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails`
           - title
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandCode`
           - description
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandFile`
           - location
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CorrespondenceDefinition`
           - commonality
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CorrespondenceDefinition`
           - difference
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::EmbargoInformation`
           - description
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::IndividualName`
           - abbreviation
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::IndividualName`
           - fullName
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LicenseInformation`
           - description
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::OrganizationName`
           - abbreviation
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ProvenanceInformation`
           - provenanceStatement
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::RationaleDefinition`
           - rationaleDescription
         * - DataType
           - StructuredDataTypes
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference`
           - location
         * - Class
           - CollectionsPattern
           - :ref:`DDICDIModels::DesignPatterns::CollectionsPattern::Collection`
           - purpose
         * - Class
           - CollectionsPattern
           - :ref:`DDICDIModels::DesignPatterns::CollectionsPattern::Comparison`
           - purpose
         * - Class
           - CollectionsPattern
           - :ref:`DDICDIModels::DesignPatterns::CollectionsPattern::Structure`
           - purpose

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings

      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.

      .. tab-set::

         .. tab-item:: Canonical XMI
            :class-content: encoding

            Fragment for the data type **InternationalString** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

            .. literalinclude:: /xmi/InternationalString.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the data type **InternationalString** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/InternationalString_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2


         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the data type **InternationalString** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/InternationalString.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the data type **InternationalString** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

            .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/InternationalString.jsonld 
               :language: jsonld
               :linenos:
               :emphasize-lines: 5




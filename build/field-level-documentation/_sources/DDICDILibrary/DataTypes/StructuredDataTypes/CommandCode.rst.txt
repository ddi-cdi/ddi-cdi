.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandCode:

CommandCode
***********

**Fully qualified datatype name**: DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes:::index:`CommandCode`

Definition
============
Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.pu


.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - command
        - \- *own datatype* \-
        - This is an in-line provision of the command itself. It provides the programming language used as well as the command.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Command` 
        - 0..*
        - 

      * - commandFile
        - \- *own datatype* \-
        - Identifies and provides a link to an external copy of the command, for example, a SAS Command Code script. Designates the programming language of the command file as well as the URI for the file.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CommandFile` 
        - 0..*
        - 

      * - description
        - \- *own datatype* \-
        - A description of the purpose and use of the command code provided. Supports multiple languages.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 


.. dropdown:: Usage

   .. list-table::
      :widths: 25 25 25 25
      :header-rows: 1
      :class: datatable-usage

      * - Type
        - Package
        - Classifier
        - Attribute
      * - Class
        - Process
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic`
        - condition
      * - Class
        - Process
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Step`
        - script
      * - Class
        - Representations
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
        - codingInstruction
      * - Class
        - Representations
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndexEntry`
        - codingInstruction

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the data type **CommandCode** (`entire XMI model </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/CommandCode.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the data type **CommandCode** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the data type **CommandCode** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_, `entire ontology as zip </encoding/ontology/ddi-cdi.onto.ttl.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the data type **CommandCode** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_ `entire JSON-LD as zip </encoding/json-ld/ddi-cdi.jsonld.zip>`_)

         .. literalinclude:: /DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.jsonld 
            :language: jsonld
            :linenos:
            :emphasize-lines: 5


.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Representations::CodeList:

CodeList
********

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Representations:::index:`CodeList`


Definition 
============ 
:ref:`DDICDIModels::DesignPatterns::CollectionsPattern::List` of codes and associated categories.  

Examples 
========== 
The codes "M" and "F" could point to "Male" and "Female" categories respectively.  A code list for an occupational classification system like the International Standard Classification of Occupations (ISCO-08: https://www.ilo.org/public/english/bureau/stat/isco/isco08/) could use a classification relation structure to describe a hierarchy (Chief Executives and Administrative and Commercial Managers as subtypes of Managers).   

Explanatory notes 
=================== 
:ref:`DDICDIModels::DesignPatterns::CollectionsPattern::List` may be flat or hierarchical. A hierarchical structure may have an indexed order for intended presentation even though the content within levels of the hierarchy are conceptually unordered. For hierarchical structures classification item structure is used to provide additional information on the structure and organization of the categories. Note that a category set can be structured by a classification relation structure without the need for associating any codes with the categories. This allows for the creation of a category set, for example for a response domain, without an associated codelist.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/Representations/CodeList.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`

      .. cssclass:: regular

      | |_| ᐊ── :focus:`Representations::CodeList`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - allowsDuplicates
           - \- *own class* \-
           - If value is False, the members are unique within the collection - if True, there may be duplicates. (Note that a mathematical “bag” permits duplicates and is unordered - a “set” does not have duplicates and may be ordered.)
           - Boolean 
           - 1..1
           - 

         * - identifier
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 

         * - name
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
           - Human understandable name (liguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
           - 0..*
           - 

         * - purpose
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
           - Intent or reason for the object/the description of the object.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of CodeList
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - from
           - EnumerationDomain isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
           - 0..*
           - none
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
         * - from
           - EnumerationDomain references CategorySet
           - Category set associated with the enumeration.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::CategorySet`
           - 0..1
           - none
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
         * - from
           - EnumerationDomain uses LevelStructure
           - Has meaningful level to which members belong.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::LevelStructure`
           - 0..1
           - none
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
         * - to
           - SentinelValueDomain takesValuesFrom EnumerationDomain
           - Any subtype of an enumeration domain enumerating the set of valid values.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::SentinelValueDomain`
           - 0..*
           - none
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
         * - to
           - SubstantiveValueDomain takesValuesFrom EnumerationDomain
           - Any subtype of an enumeration domain enumerating the set of valid values.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::SubstantiveValueDomain`
           - 0..*
           - none
           - :ref:`Representations::EnumerationDomain<DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain>`
         * - to
           - DimensionalKeyMember hasValueFrom CodeList
           - 
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::DimensionalKeyMember`
           - 0..*
           - none
           - \- *own class* \-
         * - from
           - CodeList has Code
           - 
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::Code`
           - 0..*
           - shared
           - \- *own class* \-
         * - from
           - CodeList has CodePosition
           - 
           - 1..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodePosition`
           - 0..*
           - composite
           - \- *own class* \-
         * - to
           - CodeListStructure structures CodeList
           - 
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodeListStructure`
           - 0..1
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **CodeList** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/CodeList.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **CodeList** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/CodeList_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **CodeList** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/CodeList.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **CodeList** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/CodeList.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Representations::Code:

Code
****

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Representations:::index:`Code`


Definition 
============ 
The characters used as a symbol to designate a category within a codelist or classification. (Formally, a sign for which the signifier is non-linguistic alphanumeric string.)   

Examples 
========== 
The letter M might stand for the category "Male" in the codeList called "Gender".  

Explanatory notes 
=================== 
A non-linguistic alphanumeric string is one which does not correspond to a word in natural language. For use in a codelist. The representation property (value) is expressed as it would be found in a data file. Multiple representations may relate to the same category but should be expressed as separate codes.  It should not be confused with a classification item which is a placeholder for a position in a statistical classification.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/Representations/Code.pu


.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - identifier
           - \- *own class* \-
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of Code
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - from
           - Code denotes Category
           - A definition for the code. Specialization of denotes for categories.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Category`
           - 1..1
           - none
           - \- *own class* \-
         * - from
           - Code uses Notation
           - 
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Notation`
           - 1..1
           - none
           - \- *own class* \-
         * - to
           - CodeList has Code
           - 
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodeList`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - CodePosition indexes Code
           - 
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodePosition`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - CodeRelationship hasSource Code
           - 
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodeRelationship`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - CodeRelationship hasTarget Code
           - Note that this can be realized as a collection to support tuples.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::CodeRelationship`
           - 0..*
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **Code** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/Code.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **Code** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/Code_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2


         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **Code** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/Code.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **Code** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Representations/Code.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5



.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::DataDescription::KeyValue::KeyValueDataStore:

KeyValueDataStore
*****************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::DataDescription::KeyValue:::index:`KeyValueDataStore`


Definition
============
Organized collection of key-value data. It is structured by a key value structure.

Examples
==========
A unit key-value datastore where each instance key corresponds to a data point capturing a different characteristic of a unit.

Explanatory notes
===================
A key-value datastore is just a collection of key-value pairs, i.e. instance keys and reference values. 
Each instance key encodes all relevant information about the context, the unit of interest and the variable associated with the reference value of a given data point.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/DataDescription/KeyValue/KeyValueDataStore.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`

      .. cssclass:: regular

      | |_| ᐊ── :focus:`KeyValue::KeyValueDataStore`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - catalogDetails
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
           - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - identifier
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of KeyValueDataStore
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - from
           - DataSet has DataPoint
           - 
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::DataPoint`
           - 0..*
           - composite
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
         * - from
           - DataSet has Key
           - 
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Key`
           - 0..*
           - composite
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
         * - from
           - DataSet isStructuredBy DataStructure
           - 
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::DataStructure`
           - 0..*
           - none
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
         * - to
           - LogicalRecord organizes DataSet
           - 
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
           - 0..*
           - none
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`
         * - to
           - PhysicalDataSet correspondsTo DataSet
           - 
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
           - 0..*
           - none
           - :ref:`DataDescription::DataSet<DDICDIModels::DDICDILibrary::Classes::DataDescription::DataSet>`

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **KeyValueDataStore** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/KeyValueDataStore.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **KeyValueDataStore** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/KeyValue/KeyValueDataStore_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **KeyValueDataStore** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/KeyValue/KeyValueDataStore.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **KeyValueDataStore** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/KeyValue/KeyValueDataStore.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


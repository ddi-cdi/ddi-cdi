.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::DimensionalKeyDefinitionMember:

DimensionalKeyDefinitionMember
******************************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional:::index:`DimensionalKeyDefinitionMember`


Definition
============
Single concept that is part of a dimensional key definition.

Examples
==========
The [Ontario] category in a dimensional dataset where data points are defined by Province and other dimensions.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/DataDescription/Dimensional/DimensionalKeyDefinitionMember.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`

      .. cssclass:: regular

      | |_| ᐊ── :ref:`DataDescription::ConceptualValue<DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue>`

      .. cssclass:: regular

      | |_| |_| ᐊ── :focus:`Dimensional::DimensionalKeyDefinitionMember`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - catalogDetails
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - definition
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - displayLabel
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
           - 0..*
           - 

         * - externalDefinition
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference` 
           - 0..1
           - 

         * - identifier
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 

         * - name
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
           - 0..*
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of DimensionalKeyDefinitionMember
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - from
           - ConceptualValue hasConceptFrom ConceptualDomain
           - Conceptual value has concept from one conceptual domain.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain`
           - 1..1
           - none
           - :ref:`DataDescription::ConceptualValue<DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue>`
         * - to
           - Datum denotes ConceptualValue
           - 
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Datum`
           - 0..*
           - none
           - :ref:`DataDescription::ConceptualValue<DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue>`
         * - to
           - InstanceValue represents ConceptualValue
           - 
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::InstanceValue`
           - 1..*
           - none
           - :ref:`DataDescription::ConceptualValue<DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue>`
         * - to
           - AgentListing isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationFamily isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationIndex isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationSeries isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeries`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - Concept uses Concept
           - 
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptMap hasSource Concept
           - Concept map has one to many source concepts.
           - 1..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptMap hasTarget Concept
           - Concept map has one to many target concepts.
           - 1..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptRelationship hasSource Concept
           - Restricts source object to concept for the relationship.
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptRelationship hasTarget Concept
           - Restricts target object to concept for the relationship.
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptSystem has Concept
           - Concept system has zero to many concepts.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptSystem isDefinedBy Concept
           - Concept system is defined by zero to many concepts. The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - DataStore isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - EnumerationDomain isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - Level isDefinedBy Concept
           - A concept or concept sub-type which describes the level.
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::Level`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - LogicalRecord isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalDataSet isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalRecordSegment isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegment`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalSegmentLayout isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - VariableCollection isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - from
           - DimensionalKeyDefinitionMember isRepresentedBy DimensionalKeyMember
           - 
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::DimensionalKeyMember`
           - 1..*
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **DimensionalKeyDefinitionMember** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/DimensionalKeyDefinitionMember.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **DimensionalKeyDefinitionMember** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Dimensional/DimensionalKeyDefinitionMember_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **DimensionalKeyDefinitionMember** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Dimensional/DimensionalKeyDefinitionMember.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **DimensionalKeyDefinitionMember** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Dimensional/DimensionalKeyDefinitionMember.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


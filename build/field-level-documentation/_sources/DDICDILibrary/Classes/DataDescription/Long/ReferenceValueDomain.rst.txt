.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceValueDomain:

ReferenceValueDomain
********************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::DataDescription::Long:::index:`ReferenceValueDomain`


Definition
============
Set of permissible values for a variable playing the role of a variable value component.

Examples
==========
Consider two variables, i.e. income and age, with values appearing in the same column. A reference variable in this case would be a type of represented variable that can take on values from both income and age. A long data structure might have a column that takes on values from this reference variable. A descriptor variable would then have values paired with the values from the reference variable, pointing to either the income or age variable.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/DataDescription/Long/ReferenceValueDomain.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`

      .. cssclass:: regular

      | |_| ᐊ── :focus:`Long::ReferenceValueDomain`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - catalogDetails
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
           - Bundles the information useful for a data catalog entry. 
             
             Examples would be creator, contributor, title, copyright, embargo, and license information
             
             A set of information useful for attribution, data discovery, and access.
             This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - displayLabel
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
           - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
           - 0..*
           - 

         * - identifier
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 

         * - recommendedDataType
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
           - The data types that are recommended for use with this domain.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..*
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of ReferenceValueDomain
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - to
           - InstanceValue hasValueFrom ValueDomain
           - 
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::InstanceValue`
           - 0..*
           - none
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
         * - to
           - DimensionComponent isStructuredBy ValueDomain
           - 
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Components`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Components::DimensionComponent`
           - 0..*
           - none
           - :ref:`Representations::ValueDomain<DDICDIModels::DDICDILibrary::Classes::Representations::ValueDomain>`
         * - to
           - ReferenceValue hasValueFrom ReferenceValueDomain
           - 
           - 1..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceValue`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - ReferenceVariable takesValuesFrom ReferenceValueDomain
           - Points to a value domain that contains values that may be drawn from the domains of multiple simple variables.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceVariable`
           - 0..*
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **ReferenceValueDomain** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/ReferenceValueDomain.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **ReferenceValueDomain** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Long/ReferenceValueDomain_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **ReferenceValueDomain** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Long/ReferenceValueDomain.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **ReferenceValueDomain** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/DataDescription/Long/ReferenceValueDomain.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalLayoutRelationStructure:


PhysicalLayoutRelationStructure
*******************************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::FormatDescription:::index:`PhysicalLayoutRelationStructure`


Definition
==========
Realization of relation structure that is used to describe the sequence of value mappings in a physical layout.  

Examples
======== 
The W3C Tabular Data on the Web specification section 4.5 Cells (https://www.w3.org/TR/tabular-data-model/#content-type) allows for a list datatype within cells. In the example below there are three top level instance variables: PersonID - the person identifier; AgeYr - age in years; BpSys_Dia - blood pressure (a list containing Systolic and Diastolic values). There are two variables at a secondary level of the hierarchy: Systolic - the systolic pressure; Diastolic - the diastolic pressure. The delimited file below uses the comma to separate "columns" and forward slash to separate elements of a blood pressure list. ::

   PersonID, AgeYr, BpSys_Dia  
   1,22,119/67  
   2,68,122/70  

The physical relation structure in this case would describe a BpSys_Dia list variable as containing an ordered sequence of the Systolic and Diastolic instance variables.   

Explanatory notes
=================
This can be more complex than a simple sequence.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/Classes/FormatDescription/PhysicalLayoutRelationStructure.pu


.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - criteria
        - \- *own class* \-
        - Intentional definition of the order criteria (e.g. alphabetical, numerical, increasing, decreasing, etc.).
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - identifier
        - \- *own class* \-
        - Identifier for objects requiring short- or long-lasting referencing and management.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
        - 0..1
        - 

      * - name
        - \- *own class* \-
        - A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles. If more than one name is provided then a context to differentiate usage must be provided as well.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
        - 0..*
        - 

      * - purpose
        - \- *own class* \-
        - Intent or reason for the object/the description of the object.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - semantics
        - \- *own class* \-
        - Specifies the semantics of the object in reference to a vocabulary, ontology, etc.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
        - 0..1
        - 

      * - specification
        - \- *own class* \-
        - Provides information on reflexivity, transitivity, and symmetry of relationship using a descriptive term from an enumerated list. Use if all relations within this relation structure are of the same specification.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::StructureSpecification` 
        - 0..1
        - 

      * - topology
        - \- *own class* \-
        - Indicates the form of the associations among members of the collection. Specifies the way in which constituent parts are interrelated or arranged.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
        - 1..1
        - 

      * - totality
        - \- *own class* \-
        - Indicates whether the related collections are comprehensive in terms of their coverage.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::Enumerations::StructureExtent` 
        - 0..1
        - 


.. dropdown:: Associations

   .. list-table::
      :widths: 5 10 30 5 10 10 5 5 15
      :header-rows: 1
      :class: datatable-associations
   
      * - Direction
        - Association
        - Description
        - Multiplicity of PhysicalLayoutRelationStructure
        - Package of Other Class
        - Other Class
        - Multiplicity of other class
        - Aggregation Kind
        - Inherited from
      * - from
        - PhysicalLayoutRelationStructure has ValueMappingRelationship
        - 
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::ValueMappingRelationship`
        - 0..*
        - composite
        - \- *own class* \-
      * - from
        - PhysicalLayoutRelationStructure structures PhysicalSegmentLayout
        - 
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
        - 0..1
        - none
        - \- *own class* \-

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the class **PhysicalLayoutRelationStructure** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/PhysicalLayoutRelationStructure.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the class **PhysicalLayoutRelationStructure** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/PhysicalLayoutRelationStructure_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the class **PhysicalLayoutRelationStructure** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/PhysicalLayoutRelationStructure.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the class **PhysicalLayoutRelationStructure** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/PhysicalLayoutRelationStructure.jsonld 
            :language: JSON-LD
            :linenos:
            :emphasize-lines: 5


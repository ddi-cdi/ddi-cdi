.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::FormatDescription::RecordRelation:


RecordRelation
**************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::FormatDescription:::index:`RecordRelation`


Definition
============
Relationships among record types within and between logical records.

Examples
==========
One logical record containing a PersonIdentifier and a PersonName and another logical record containing a MeasurementID, a PersonID, a SystolicPressure, and a DiastolicPressure could be linked by a record relation. The record relation could employ an instance variable value map to describe the linkage between  PersonIdentifier and PersonID.

A household-level logical record might contain an instance variable called HouseholdID and a person-level logical record might contain an instance variable called HID. Describing a link between HouseholdID and HID would allow the linking of a person-level :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord` to their corresponding household-level logical record.

Explanatory notes
===================
For instance variables existing in a logical record with multiple record layouts, pairs of instance variables may function as paired keys to permit the expression of hierarchical links between records of different types. These links between keys in different record types could also be used to link records in a relational structure.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/Classes/FormatDescription/RecordRelation.pu


.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - catalogDetails
        - \- *own class* \-
        - Bundles the information useful for a data catalog entry. 
          
          Examples would be creator, contributor, title, copyright, embargo, and license information
          
          A set of information useful for attribution, data discovery, and access.
          This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
        - 0..1
        - 

      * - displayLabel
        - \- *own class* \-
        - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
        - 0..*
        - 

      * - identifier
        - \- *own class* \-
        - Identifier for objects requiring short- or long-lasting referencing and management.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
        - 0..1
        - 

      * - purpose
        - \- *own class* \-
        - Intent or reason for the object/the description of the object.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - usage
        - \- *own class* \-
        - Explanation of the ways in which the object is employed.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 


.. dropdown:: Associations

   .. list-table::
      :widths: 5 10 30 5 10 10 5 5 15
      :header-rows: 1
      :class: datatable-associations
   
      * - Direction
        - Association
        - Description
        - Multiplicity of RecordRelation
        - Package of Other Class
        - Other Class
        - Multiplicity of other class
        - Aggregation Kind
        - Inherited from
      * - to
        - DataStore has RecordRelation
        - The record relation that defines the relationship and linking requirements between logical records in the data store.
        - 0..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
        - 0..*
        - none
        - \- *own class* \-
      * - from
        - RecordRelation has InstanceVariableMap
        - 
        - 0..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::InstanceVariableMap`
        - 0..*
        - composite
        - \- *own class* \-
      * - from
        - RecordRelation maps LogicalRecord
        - 
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
        - 2..*
        - none
        - \- *own class* \-

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the class **RecordRelation** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/RecordRelation.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the class **RecordRelation** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/RecordRelation_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the class **RecordRelation** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/RecordRelation.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the class **RecordRelation** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)

         .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/RecordRelation.jsonld 
            :language: JSON-LD
            :linenos:
            :emphasize-lines: 5


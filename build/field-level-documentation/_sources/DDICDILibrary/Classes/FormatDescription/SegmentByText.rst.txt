.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::FormatDescription::SegmentByText:

SegmentByText
*************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::FormatDescription:::index:`SegmentByText`


Definition 
============ 
Location of a segment of text through character or line counts.  

Examples 
========== 
The segment beginning at line 3, character 4 and ending at line 27 character 13. Alternatively the segment beginning at character 257 and ending at character 1350 of the whole body of text. StartLine of 10, endLine of 12, startCharacterPosition of 1, endCharacterPosition of 0 means all of lines 10, 11, and 12.  An endCharacterPosition of 0 indicates that whole lines are specified.  

Explanatory notes 
=================== 
An adequate description will always include a startCharacterPosition and then may include an endCharacterPosition or a characterLength. If StartLine is specified, the character counts begin within that line.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/FormatDescription/SegmentByText.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`FormatDescription::PhysicalSegmentLocation<DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLocation>`

      .. cssclass:: regular

      | |_| ᐊ── :focus:`FormatDescription::SegmentByText`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - characterLength
           - \- *own class* \-
           - The number of characters in the segment. The segment may include text from multiple lines of the resource. If it does, the length includes any line termination characters.
           - Integer 
           - 0..1
           - 

         * - endCharacterPosition
           - \- *own class* \-
           - The character position of the last character of the segment.  If endLine is specified, the count begins at character 1 of endLine. If startLine and endLine are not specified, the count begins at character 1 of the first line of the resource and the count includes any line termination characters. The resulting segment may include text from multiple lines of the resource.
           - Integer 
           - 0..1
           - 

         * - endLine
           - \- *own class* \-
           - The last line on which to count characters. If missing this defaults to startLine.
           - Integer 
           - 0..1
           - 

         * - startCharacterPosition
           - \- *own class* \-
           - The character position of the first character of the segment, with the count beginning at character 1 of startLine.
           - Integer 
           - 0..1
           - 

         * - startLine
           - \- *own class* \-
           - The line number, where 1 is the first line, on which to begin counting characters. If missing this defaults to 1 (the first line).
           - Integer 
           - 0..1
           - 1

         * - catalogDetails
           - :ref:`FormatDescription::PhysicalSegmentLocation<DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLocation>`
           - Bundles the information useful for a data catalog entry. 
             
             Examples would be creator, contributor, title, copyright, embargo, and license information
             
             A set of information useful for attribution, data discovery, and access.
             This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - identifier
           - :ref:`FormatDescription::PhysicalSegmentLocation<DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLocation>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of SegmentByText
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - to
           - ValueMapping uses PhysicalSegmentLocation
           - Uses a physical segment location to describe where in the physical record a segment representing the data point is. This could be, for example, described as a start position and end position value for characters in a text record via the segment by text extension of physical segment location.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::ValueMapping`
           - 0..*
           - none
           - :ref:`FormatDescription::PhysicalSegmentLocation<DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLocation>`

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **SegmentByText** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/SegmentByText.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **SegmentByText** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/SegmentByText_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **SegmentByText** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/SegmentByText.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **SegmentByText** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/FormatDescription/SegmentByText.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


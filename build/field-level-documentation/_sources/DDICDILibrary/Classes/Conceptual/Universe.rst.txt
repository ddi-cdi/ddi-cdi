.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Conceptual::Universe:

Universe
********

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Conceptual:::index:`Universe`


Definition
============
Specialized unit type, with the specialization based upon characteristics other than time and geography.

Examples
==========
1. Canadian adults (not limited to those residing in Canada)
2. Computer companies 
3. Universities

Explanatory notes
===================
Universe sits in a hierarchy between unit type and population, with unit type being most general and :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Population` most specific. A universe is a set of entities defined by a more narrow specification than that of an underlying unit type. A population further narrows the specification to a specific time and geography.

If the Universe consists of people, a number of factors may be used in defining membership in the Universe, such as age, sex, residence, income, veteran status, criminal convictions, etc. The universe may consist of elements other than persons, such as housing units, court cases, deaths, countries, etc. A universe may be described as "inclusive" or "exclusive". 

Not to be confused with :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Population`, which includes the specification of time and geography.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/Conceptual/Universe.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`

      .. cssclass:: regular

      | |_| ᐊ── :ref:`Conceptual::UnitType<DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType>`

      .. cssclass:: regular

      | |_| |_| ᐊ── :focus:`Conceptual::Universe`

      .. cssclass:: regular

      | |_| |_| |_| ᐊ── :ref:`Conceptual::Population<DDICDIModels::DDICDILibrary::Classes::Conceptual::Population>`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - isInclusive
           - \- *own class* \-
           - Default value is True. The description statement of a universe is generally stated in inclusive terms such as "All persons with university degree". Occasionally a universe is defined by what it excludes, i.e., "All persons except those with university degree". In this case the value would be changed to False.
           - Boolean 
           - 0..1
           - true

         * - descriptiveText
           - :ref:`Conceptual::UnitType<DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType>`
           - A short natural language account of the characteristics of the object.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - catalogDetails
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - definition
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
           - 0..1
           - 

         * - displayLabel
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
           - 0..*
           - 

         * - externalDefinition
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference` 
           - 0..1
           - 

         * - identifier
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 

         * - name
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
           - Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
           - 0..*
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of Universe
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - to
           - ConceptualVariable measures UnitType
           - The measures association is intended to describe specific relationships between the ConceptualVariable and UnitType classes, and similar relationships between their sub-classes. This is documented in section VII.D.5 of the "DDI-Cross Domain Integration: Detailed Model" document.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable`
           - 0..*
           - none
           - :ref:`Conceptual::UnitType<DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType>`
         * - to
           - Unit has UnitType
           - The unit type of the unit.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Unit`
           - 0..*
           - none
           - :ref:`Conceptual::UnitType<DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType>`
         * - to
           - AgentListing isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationFamily isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationIndex isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ClassificationSeries isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeries`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - Concept uses Concept
           - The uses association is intended to describe specific relationships between Concepts and several of its sub-classes. This is documented in section VII.D.5 of the "DDI-Cross Domain Integration: Detailed Model" document.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptMap hasSource Concept
           - Concept map has one to many source concepts.
           - 1..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptMap hasTarget Concept
           - Concept map has one to many target concepts.
           - 1..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptRelationship hasSource Concept
           - Restricts source object to concept for the relationship.
           - 1..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptRelationship hasTarget Concept
           - Restricts target object to concept for the relationship.
           - 1..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptSystem has Concept
           - Concept system has zero to many concepts.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - ConceptSystem isDefinedBy Concept
           - Concept system is defined by zero to many concepts. The conceptual basis for the collection of members.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - DataStore isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - EnumerationDomain isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - Level isDefinedBy Concept
           - A concept or concept sub-type which describes the level.
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::Level`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - LogicalRecord isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalDataSet isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalRecordSegment isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegment`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - PhysicalSegmentLayout isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - VariableCollection isDefinedBy Concept
           - The conceptual basis for the collection of members.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
           - 0..*
           - none
           - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
         * - to
           - Key correspondsTo Universe
           - 
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::Key`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - KeyDefinition correspondsTo Universe
           - 
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::KeyDefinition`
           - 0..*
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **Universe** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/Universe.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **Universe** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Universe_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **Universe** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Universe.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **Universe** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Universe.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


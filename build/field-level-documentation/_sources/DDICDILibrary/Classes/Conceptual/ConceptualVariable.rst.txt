.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable:


ConceptualVariable
******************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Conceptual:::index:`ConceptualVariable`


Definition 
============ 
A variable at the highest level of abstraction.
  
Examples 
========== 
A gender variable defining two categories – "male" and "female" allowing relating each of these to concepts having description of how these categories are decided.

Explanatory notes 
=================== 
The conceptual variable allows for describing the domain of concepts it can take on as well as the type of unit that can be measured. A conceptual variable for blood pressure might, for example describe the conditions under which the pressure is to be taken (sitting as opposed to standing) and a conceptual value domain as height of mercury – without units. One represented variable would further refine this by specifying inches as the unit of measurement for the height. Another might specify that the height be represented in centimeters. Both represented variables could reference the same conceptual variable to indicate in what way they are comparable.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/Classes/Conceptual/ConceptualVariable.pu

.. dropdown:: Inheritance

   .. |_| unicode:: U+2003 .. em space

   .. role:: focus

   .. cssclass:: regular

   | :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`

   .. cssclass:: regular

   | |_| ᐊ── :focus:`Conceptual::ConceptualVariable`

   .. cssclass:: regular

   | |_| |_| ᐊ── :ref:`Conceptual::RepresentedVariable<DDICDIModels::DDICDILibrary::Classes::Conceptual::RepresentedVariable>`

   .. cssclass:: regular

   | |_| |_| |_| ᐊ── :ref:`Long::DescriptorVariable<DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::DescriptorVariable>`

   .. cssclass:: regular

   | |_| |_| |_| ᐊ── :ref:`Conceptual::InstanceVariable<DDICDIModels::DDICDILibrary::Classes::Conceptual::InstanceVariable>`

   .. cssclass:: regular

   | |_| |_| |_| ᐊ── :ref:`Long::ReferenceVariable<DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceVariable>`




.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - descriptiveText
        - \- *own class* \-
        - A short natural language account of the characteristics of the object.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - unitOfMeasureKind
        - \- *own class* \-
        - Kind of unit of measure, so that it may be prone to translation to equivalent UOMs. Example values include "acceleration," "temperature," "salinity", etc. This description exists at the conceptual level, indicating a limitation on the type of representations which may be used for the variable as it is made more concrete.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
        - 0..1
        - 

      * - catalogDetails
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
        - 0..1
        - 

      * - definition
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - displayLabel
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
        - 0..*
        - 

      * - externalDefinition
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference` 
        - 0..1
        - 

      * - identifier
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - Identifier for objects requiring short- or long-lasting referencing and management.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
        - 0..1
        - 

      * - name
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
        - Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
        - 0..*
        - 


.. dropdown:: Associations

   .. list-table::
      :widths: 5 10 30 5 10 10 5 5 15
      :header-rows: 1
      :class: datatable-associations
   
      * - Direction
        - Association
        - Description
        - Multiplicity of ConceptualVariable
        - Package of Other Class
        - Other Class
        - Multiplicity of other class
        - Aggregation Kind
        - Inherited from
      * - to
        - AgentListing isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ClassificationFamily isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ClassificationIndex isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ClassificationSeries isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeries`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptMap hasSource Concept
        - Concept map has one to many source concepts.
        - 1..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptMap hasTarget Concept
        - Concept map has one to many target concepts.
        - 1..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptRelationship hasSource Concept
        - Restricts source object to concept for the relationship.
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptRelationship hasTarget Concept
        - Restricts target object to concept for the relationship.
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptSystem has Concept
        - Concept system has zero to many concepts.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptSystem isDefinedBy Concept
        - Concept system is defined by zero to many concepts. The conceptual basis for the collection of members.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - ConceptualVariable uses Concept
        - Reference to a concept that is being used.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - DataStore isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - EnumerationDomain isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - Level isDefinedBy Concept
        - A concept or concept sub-type which describes the level.
        - 0..1
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::Level`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - LogicalRecord isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - PhysicalDataSet isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - PhysicalRecordSegment isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegment`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - PhysicalSegmentLayout isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - UnitType uses Concept
        - Reference to the concept that is being used.
        - 0..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - Universe uses Concept
        - Reference to the concept that is being used.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Universe`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - to
        - VariableCollection isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
        - 0..*
        - none
        - :ref:`Conceptual::Concept<DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept>`
      * - from
        - ConceptualVariable measures UnitType
        - Identifies the unit type associated with the conceptual variable.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType`
        - 0..1
        - none
        - \- *own class* \-
      * - from
        - ConceptualVariable takesSentinelConceptsFrom SentinelConceptualDomain
        - Identifies the conceptual domain containing the set of sentinel concepts used to describe the conceptual variable.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::SentinelConceptualDomain`
        - 0..1
        - none
        - \- *own class* \-
      * - from
        - ConceptualVariable takesSubstantiveConceptsFrom SubstantiveConceptualDomain
        - Identifies the substantive conceptual domain containing the set of substantive concepts used to describe the conceptual variable.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::SubstantiveConceptualDomain`
        - 0..1
        - none
        - \- *own class* \-
      * - from
        - ConceptualVariable uses Concept
        - Reference to a concept that is being used.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - RepresentedVariable isBasedOn ConceptualVariable
        - The conceptual variable that can be shared by a set of represented variables. Indicates comparability in conceptual domain and unit type.
        - 0..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::RepresentedVariable`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - VariableCollection has ConceptualVariable
        - Variable collection has zero to many conceptual variables.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - VariablePosition indexes ConceptualVariable
        - Variable position indexes a conceptual variable.
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariablePosition`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - VariableRelationship hasSource ConceptualVariable
        - 
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableRelationship`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - VariableRelationship hasTarget ConceptualVariable
        - Note that this can be realized as a collection to support tuples.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableRelationship`
        - 0..*
        - none
        - \- *own class* \-

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the class **ConceptualVariable** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/ConceptualVariable.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the class **ConceptualVariable** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/ConceptualVariable_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the class **ConceptualVariable** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/ConceptualVariable.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the class **ConceptualVariable** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/ConceptualVariable.jsonld 
            :language: JSON-LD
            :linenos:
            :emphasize-lines: 5


.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Conceptual::SubstantiveConceptualDomain:

SubstantiveConceptualDomain
***************************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Conceptual:::index:`SubstantiveConceptualDomain`


Definition 
==========
Conceptual domain of substantive concepts.  

Examples 
======== 
An enumeration of concepts for a categorical variable like "male" and "female" for gender, or "ozone" and "particulate matter less than 2.5 microns in diameter" for pollutant in an air quality measure.  

Explanatory notes 
=================
A conceptual variable links a unit type to a substantive conceptual domain. The latter can be an enumeration or description of the values that the variable may take on. In the enumerated case these are the categories in a category set that can be values, not the codes that represent the values. An example might be the conceptual domain for a variable representing self-identified gender. An enumeration might include the concept of "male" and the concept of "female". These, in turn, would be represented in a substantive value domain by codes in a code list like "m" and "f", or "0" and "1". A conceptual domain might be described through a value and concept description's description property of "a real number greater than 0" or through a more formal logical expression of "all reals x such that x > 0". Even in the described case, what is being described are conceptual, not the symbols used to represent the values. This may be a subtle distinction, but allows specifying that the same numeric value might be represented by 32 bits or by 64 bits or by an Arabic numeral or a Roman numeral.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/Conceptual/SubstantiveConceptualDomain.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`

      .. cssclass:: regular

      | |_| ᐊ── :focus:`Conceptual::SubstantiveConceptualDomain`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - catalogDetails
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
           - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
           - 0..1
           - 

         * - displayLabel
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
           - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
           - 0..*
           - 

         * - identifier
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of SubstantiveConceptualDomain
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - from
           - ConceptualDomain isDescribedBy ValueAndConceptDescription
           - A description of the concepts in the domain. A numeric domain might use a logical expression to be machine actionable; a text domain might use a regular expression to describe strings that describe the concepts.
           - 0..*
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ValueAndConceptDescription`
           - 0..1
           - none
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
         * - from
           - ConceptualDomain takesConceptsFrom ConceptSystem
           - Conceptual domain takes concept from zero to one concept system.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
           - 0..1
           - none
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
         * - to
           - ConceptualValue hasConceptFrom ConceptualDomain
           - Conceptual value has concept from one conceptual domain.
           - 1..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue`
           - 0..*
           - none
           - :ref:`Conceptual::ConceptualDomain<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualDomain>`
         * - to
           - ConceptualVariable takesSubstantiveConceptsFrom SubstantiveConceptualDomain
           - Identifies the substantive conceptual domain containing the set of substantive concepts used to describe the conceptual variable.
           - 0..1
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable`
           - 0..*
           - none
           - \- *own class* \-
         * - to
           - SubstantiveValueDomain takesConceptsFrom SubstantiveConceptualDomain
           - Corresponding conceptual definition given by an substantive conceptual domain.
           - 0..1
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::SubstantiveValueDomain`
           - 0..*
           - none
           - \- *own class* \-

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **SubstantiveConceptualDomain** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/SubstantiveConceptualDomain.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **SubstantiveConceptualDomain** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/SubstantiveConceptualDomain_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2


         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **SubstantiveConceptualDomain** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/SubstantiveConceptualDomain.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **SubstantiveConceptualDomain** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Conceptual/SubstantiveConceptualDomain.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5



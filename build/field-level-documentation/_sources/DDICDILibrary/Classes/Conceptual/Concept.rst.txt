.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Conceptual::Concept:


Concept
*******

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Conceptual:::index:`Concept`


Definition 
============ 
:ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Unit` of thought differentiated by characteristics (from the Generic Statistical Information Model version 1.2: https://statswiki.unece.org/display/clickablegsim/Concept).  

Examples 
========== 
Velocity, Distance, Poverty, Income, Household Relationship, Family, Gender, Business Establishment, Satisfaction, Mass, Air Quality, etc.


Explanatory notes 
=================== 
Many DDI-CDI classes are subtypes of the concept class including category, universe, unit type, conceptual variable. This class realizes the pattern class signified and as such a concept can be denoted by a sign.


.. dropdown:: Diagram
   :open:

   .. container::
      :name: diagram

      .. uml:: /DDICDILibrary/Classes/Conceptual/Concept.pu

.. dropdown:: Inheritance

   .. |_| unicode:: U+2003 .. em space

   .. role:: focus

   .. cssclass:: regular

   | :focus:`Conceptual::Concept`

   .. cssclass:: regular

   |    ᐊ── :ref:`Conceptual::Category<DDICDIModels::DDICDILibrary::Classes::Conceptual::Category>`

   .. cssclass:: regular

   |    ᐊ── :ref:`DataDescription::ConceptualValue<DDICDIModels::DDICDILibrary::Classes::DataDescription::ConceptualValue>`

   .. cssclass:: regular

   |    |_| ᐊ── :ref:`Dimensional::DimensionalKeyDefinitionMember<DDICDIModels::DDICDILibrary::Classes::DataDescription::Dimensional::DimensionalKeyDefinitionMember>`

   .. cssclass:: abstract

   |    |_| ᐊ── :ref:`DataDescriptionPattern::KeyDefinitionMember<DDICDIModels::DesignPatterns::DataDescriptionPattern::KeyDefinitionMember>`

   .. cssclass:: regular

   |    ᐊ── :ref:`Conceptual::ConceptualVariable<DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable>`

   .. cssclass:: regular

   |    |_| ᐊ── :ref:`Conceptual::RepresentedVariable<DDICDIModels::DDICDILibrary::Classes::Conceptual::RepresentedVariable>`

   .. cssclass:: regular

   |    |_| |_| ᐊ── :ref:`Long::DescriptorVariable<DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::DescriptorVariable>`

   .. cssclass:: regular

   |    |_| |_| ᐊ── :ref:`Conceptual::InstanceVariable<DDICDIModels::DDICDILibrary::Classes::Conceptual::InstanceVariable>`

   .. cssclass:: regular

   |    |_| |_| ᐊ── :ref:`Long::ReferenceVariable<DDICDIModels::DDICDILibrary::Classes::DataDescription::Long::ReferenceVariable>`

   .. cssclass:: regular

   |    ᐊ── :ref:`Conceptual::UnitType<DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType>`

   .. cssclass:: regular

   |    ᐊ── :ref:`Conceptual::Universe<DDICDIModels::DDICDILibrary::Classes::Conceptual::Universe>`

   .. cssclass:: regular

   |    |_| ᐊ── :ref:`Conceptual::Population<DDICDIModels::DDICDILibrary::Classes::Conceptual::Population>`




.. dropdown:: Attributes

   .. list-table::
      :widths: 10 10 60 10 10 10
      :header-rows: 1
      :class: datatable-attributes

      * - Name
        - Inherited from
        - Description
        - Data Type
        - Multiplicity
        - Default value
      * - catalogDetails
        - \- *own class* \-
        - Bundles the information useful for a data catalog entry. Examples would be creator, contributor, title, copyright, embargo, and license information. A set of information useful for attribution, data discovery, and access. This is information that is tied to the identity of the object. If this information changes the version of the associated object changes.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::CatalogDetails` 
        - 0..1
        - 

      * - definition
        - \- *own class* \-
        - Natural language statement conveying the meaning of a concept, differentiating it from other concepts. Supports the use of multiple languages and structured text. 'externalDefinition' can't be used if 'definition' is used.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::InternationalString` 
        - 0..1
        - 

      * - displayLabel
        - \- *own class* \-
        - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
        - 0..*
        - 

      * - externalDefinition
        - \- *own class* \-
        - A reference to an external definition of a concept (that is, a concept which is described outside the content of the DDI-CDI metadata description). An example is a SKOS concept. The definition property is assumed to duplicate the external one referenced if externalDefinition is used. Other corresponding properties are assumed to be included unchanged if used.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Reference` 
        - 0..1
        - 

      * - identifier
        - \- *own class* \-
        - Identifier for objects requiring short- or long-lasting referencing and management.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
        - 0..1
        - 

      * - name
        - \- *own class* \-
        - Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
        - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
        - 0..*
        - 


.. dropdown:: Associations

   .. list-table::
      :widths: 5 10 30 5 10 10 5 5 15
      :header-rows: 1
      :class: datatable-associations
   
      * - Direction
        - Association
        - Description
        - Multiplicity of Concept
        - Package of Other Class
        - Other Class
        - Multiplicity of other class
        - Aggregation Kind
        - Inherited from
      * - to
        - AgentListing isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Agents::AgentListing`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ClassificationFamily isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationFamily`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ClassificationIndex isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationIndex`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ClassificationSeries isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::ClassificationSeries`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptMap hasSource Concept
        - Concept map has one to many source concepts.
        - 1..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptMap hasTarget Concept
        - Concept map has one to many target concepts.
        - 1..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptMap`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptRelationship hasSource Concept
        - Restricts source object to concept for the relationship.
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptRelationship hasTarget Concept
        - Restricts target object to concept for the relationship.
        - 1..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptRelationship`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptSystem has Concept
        - Concept system has zero to many concepts.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptSystem isDefinedBy Concept
        - Concept system is defined by zero to many concepts. The conceptual basis for the collection of members.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptSystem`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - ConceptualVariable uses Concept
        - Reference to a concept that is being used.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::ConceptualVariable`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - DataStore isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::DataStore`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - EnumerationDomain isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::EnumerationDomain`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - Level isDefinedBy Concept
        - A concept or concept sub-type which describes the level.
        - 0..1
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Representations::Level`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - LogicalRecord isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::LogicalRecord`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - PhysicalDataSet isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalDataSet`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - PhysicalRecordSegment isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalRecordSegment`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - PhysicalSegmentLayout isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription`
        - :ref:`DDICDIModels::DDICDILibrary::Classes::FormatDescription::PhysicalSegmentLayout`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - UnitType uses Concept
        - Reference to the concept that is being used.
        - 0..1
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::UnitType`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - Universe uses Concept
        - Reference to the concept that is being used.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::Universe`
        - 0..*
        - none
        - \- *own class* \-
      * - to
        - VariableCollection isDefinedBy Concept
        - The conceptual basis for the collection of members.
        - 0..*
        - \- *own package* \-
        - :ref:`DDICDIModels::DDICDILibrary::Classes::Conceptual::VariableCollection`
        - 0..*
        - none
        - \- *own class* \-

.. dropdown:: Syntax representations / encodings

   All syntax representations except the Canonical XMI are provided as reference points
   for specific implementations, or for use as defaults if sufficient in the form presented.

   .. tab-set::

      .. tab-item:: Canonical XMI
         :class-content: encoding

         Fragment for the class **Concept** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)

         .. literalinclude:: /xmi/Concept.xmi
            :lines: 2-
            :language: xml
            :linenos:
            :emphasize-lines: 4

      .. tab-item:: XML Schema
         :class-content: encoding

         Fragment for the class **Concept** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Concept_xsd.txt 
            :language: xml
            :linenos:
            :emphasize-lines: 1
            :dedent: 2

      .. tab-item:: Ontology (Turtle)
         :class-content: encoding

         Fragment for the class **Concept** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Concept.onto.ttl 
            :language: turtle
            :linenos:
            :emphasize-lines: 3

      .. tab-item:: JSON-LD
         :class-content: encoding

         Fragment for the class **Concept** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)

         .. literalinclude:: /DDICDILibrary/Classes/Conceptual/Concept.jsonld 
            :language: JSON-LD
            :linenos:
            :emphasize-lines: 5


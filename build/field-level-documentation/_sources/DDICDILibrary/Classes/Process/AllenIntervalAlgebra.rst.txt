.. This code was generated by the Eclipse Acceleo project UCMIS M2T.
   Target language is 'reStructuredText' ('doc') generated on the basis of the model 'DDICDIModels'.

.. _DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra:

AllenIntervalAlgebra
********************

**Fully qualified class name**: DDICDIModels::DDICDILibrary::Classes::Process:::index:`AllenIntervalAlgebra`


Definition 
==========
Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are distinct (any pair of definite intervals are described by one and only one of the relations), exhaustive (any pair of definite intervals are described by one of the relations), and qualitative (no numeric time spans are considered). See https://www.ics.uci.edu/~alspaugh/cls/shr/allen.html.

Examples
========
An Allen overlap indicates that within a sequence two procedures overlap in time. 

Explanatory notes
=================
Allen's intervals are pairwise.


.. container::
   :name: diagram

   .. dropdown:: Diagram
      :open:

      .. uml:: /DDICDILibrary/Classes/Process/AllenIntervalAlgebra.pu

.. container::
   :name: inheritance

   .. dropdown:: Inheritance

      .. |_| unicode:: U+2003 .. em space

      .. role:: focus

      .. cssclass:: regular

      | :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`

      .. cssclass:: regular

      | |_| ᐊ── :ref:`Process::NonDeterministicDeclarative<DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative>`

      .. cssclass:: regular

      | |_| |_| ᐊ── :ref:`Process::TemporalConstraints<DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints>`

      .. cssclass:: regular

      | |_| |_| |_| ᐊ── :focus:`Process::AllenIntervalAlgebra`




.. container::
   :name: attributes

   .. dropdown:: Attributes
    
      .. list-table::
         :widths: 10 10 60 10 10 10
         :header-rows: 1
         :class: datatable-attributes
    
         * - Name
           - Inherited from
           - Description
           - Data Type
           - Multiplicity
           - Default value
         * - temporalIntervalRelation
           - \- *own class* \-
           - Temporal constraint specified as an Allen's interval relation.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::Enumerations::TemporalRelation` 
           - 1..1
           - 

         * - description
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
           - A description of the control logic in human-readable language.
           - String 
           - 0..1
           - 

         * - displayLabel
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
           - A human-readable display label for the object. Supports the use of multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::LabelForDisplay` 
           - 0..*
           - 

         * - identifier
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
           - Identifier for objects requiring short- or long-lasting referencing and management.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::Identifier` 
           - 0..1
           - 

         * - name
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
           - Human understandable name (linguistic signifier, word, phrase, or mnemonic). May follow ISO/IEC 11179-5 naming principles, and have context provided to specify usage.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ObjectName` 
           - 0..*
           - 

         * - workflow
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
           - Reference to the system or standard from which the workflow was taken.
           - :ref:`DDICDIModels::DDICDILibrary::DataTypes::StructuredDataTypes::ControlledVocabularyEntry` 
           - 0..1
           - 


.. container::
   :name: associations

   .. dropdown:: Associations
    
      .. list-table::
         :widths: 5 10 30 5 10 10 5 5 15
         :header-rows: 1
         :class: datatable-associations
       
         * - Direction
           - Association
           - Description
           - Multiplicity of AllenIntervalAlgebra
           - Package of Other Class
           - Other Class
           - Multiplicity of other class
           - Aggregation Kind
           - Inherited from
         * - to
           - Activity hasInternal ControlLogic
           - An activity is embedded in the control construct which launches it.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - 0..*
           - none
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
         * - from
           - ControlLogic has InformationFlowDefinition
           - A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition`
           - 0..*
           - shared
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
         * - to
           - ControlLogic hasSubControlLogic ControlLogic
           - Control logic is a container of control logic which is in turn a container of control logic ad infinitum so that it is able to represent the structure of a program.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic`
           - 0..1
           - none
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
         * - from
           - ControlLogic informs ProcessingAgent
           - Control logic informs a processing agent. The information may be deterministic or non-deterministic.
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent`
           - 0..*
           - none
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`
         * - from
           - ControlLogic invokes Activity
           - Control logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling).
           - 0..*
           - \- *own package* \-
           - :ref:`DDICDIModels::DDICDILibrary::Classes::Process::Activity`
           - 1..*
           - none
           - :ref:`Process::ControlLogic<DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic>`

.. container::
   :name: encodings

   .. dropdown:: Syntax representations / encodings
    
      All syntax representations except the Canonical XMI are provided as reference points
      for specific implementations, or for use as defaults if sufficient in the form presented.
    
      .. tab-set::
    
         .. tab-item:: Canonical XMI
            :class-content: encoding
    
            Fragment for the class **AllenIntervalAlgebra** (`entire model as XMI </encoding/xmi/ddi-cdi_canonical-unique-names.xmi>`_)
    
            .. literalinclude:: /xmi/AllenIntervalAlgebra.xmi
               :lines: 2-
               :language: xml
               :linenos:
               :emphasize-lines: 4

         .. tab-item:: XML Schema
            :class-content: encoding

            Fragment for the class **AllenIntervalAlgebra** (`entire XML Schema </encoding/xml-schema/ddi-cdi.xsd>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Process/AllenIntervalAlgebra_xsd.txt 
               :language: xml
               :linenos:
               :emphasize-lines: 1
               :dedent: 2

         .. tab-item:: Ontology (Turtle)
            :class-content: encoding

            Fragment for the class **AllenIntervalAlgebra** (`main ontology </encoding/ontology/ddi-cdi.onto.ttl>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Process/AllenIntervalAlgebra.onto.ttl 
               :language: turtle
               :linenos:
               :emphasize-lines: 3

         .. tab-item:: JSON-LD
            :class-content: encoding

            Fragment for the class **AllenIntervalAlgebra** (`main JSON-LD </encoding/json-ld/ddi-cdi.jsonld>`_)
    
            .. literalinclude:: /DDICDILibrary/Classes/Process/AllenIntervalAlgebra.jsonld 
               :language: JSON-LD
               :linenos:
               :emphasize-lines: 5


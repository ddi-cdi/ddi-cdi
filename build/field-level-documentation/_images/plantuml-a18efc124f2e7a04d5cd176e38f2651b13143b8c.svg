<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="735.3px" preserveAspectRatio="none" style="width:981px;height:735px;background:#FFFFFF;" version="1.1" viewBox="0 0 981 735" width="981px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="520.2" x="224.325" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="511.2" x="228.825" y="27.6855">UML Diagram: Class NonDeterministicDeclarative in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="482.625" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[a0438961881a4fc606840d398cef942c]
entity ##3--><!--MD5=[7639129a7208b5720b5c8dbdaf72c8f5]
entity ##5--><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="47" fill="#FFD700" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="164.7" x="219.6" y="341.8633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="355.7061">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="222.3" y="370.7635">NonDeterministicDeclarative</text></g><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="60" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="661.95" y="215.8633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="716.85" y="229.7061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="664.65" y="244.7635">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="61" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="841.05" y="215.8633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="889.65" y="229.7061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="888.75" y="244.7635">Activity</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="97" fill="#FAFAD2" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="191.25" y="188.4133"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="202.2561">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="265.95" y="217.3135">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="192.15" x2="411.75" y1="224.5821" y2="224.5821"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="196.65" y="241.2619">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="196.65" y="257.1104">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="256.05" y="257.1104">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="196.65" y="272.9588">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="255.15" y="272.9588">ControlledVocabularyEntry</text></a></g></a><!--MD5=[08ba6ba01d98bb161ad68b4a623f9af7]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><a href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><rect codeLine="63" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="151.65" y="497.5633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="200.25" y="511.4061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="118.8" x="159.75" y="526.4635">TemporalConstraints</text></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="64" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="495.45" y="215.8633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="544.05" y="229.7061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="514.8" y="244.7635">ProcessingAgent</text></g></a><!--MD5=[02b9b219988dc503761fbf1cad30d622]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><a href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" target="_top" title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><rect codeLine="65" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="63.45" y="654.1633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="112.05" y="668.0061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="113.4" x="74.25" y="683.0635">AllenIntervalAlgebra</text></g></a><!--MD5=[709a7571879ab291d9a4b7a9d9794af4]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><a href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><rect codeLine="66" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="155.7" x="230.4" y="654.1633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="289.35" y="668.0061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="150.3" x="233.1" y="683.0635">TemporalControlConstruct</text></g></a><!--MD5=[176626d4bed7481770d2a75e2ecd0210]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><a href="../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization" target="_top" title=" ― RuleBasedScheduling:&#10;Rule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― RuleBasedScheduling:&#10;Rule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><rect codeLine="67" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="318.15" y="497.5633"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="366.75" y="511.4061">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="125.1" x="323.1" y="526.4635">RuleBasedScheduling</text></g></a><g id="elem_GMN15"><path d="M5.4,214.5133 L5.4,252.9461 A0,0 0 0 0 5.4,252.9461 L159.3,252.9461 A0,0 0 0 0 159.3,252.9461 L159.3,237.4633 L190.98,233.8633 L159.3,230.2633 L159.3,223.5133 L150.3,214.5133 L5.4,214.5133 A0,0 0 0 0 5.4,214.5133 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><path d="M150.3,214.5133 L150.3,223.5133 L159.3,223.5133 L150.3,214.5133 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="135" x="10.8" y="231.1589">Class has 5 associations.</text><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="120.6" x="10.8" y="245.8753">Only 3 are shown here.</text></g><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="85" d="M417.276,189.4303 C504.279,161.5033 626.58,134.1703 733.95,153.7633 C789.228,163.8523 847.386,195.3613 880.677,215.7193 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="412.902,190.8433,421.7175,191.7688,417.1825,189.455,419.4963,184.92,412.902,190.8433" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="664.65" y="152.4089"> hasInternal</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="90" d="M389.2853,183.7659 C389.2853,183.7659 497.79,143.8633 553.05,153.7633 C605.223,163.1053 660.303,189.9073 696.177,209.9503 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="706.437,215.7913,701.1806,208.6541,702.5269,213.564,697.6169,214.9103,706.437,215.7913" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="702.5269" x2="696.276" y1="213.564" y2="210.0043"/><polygon fill="none" points="379.494,188.3233,385.9088,189.3084,389.2853,183.7659,382.8705,182.7808,379.494,188.3233" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="30.6" x="521.55" y="152.4089"> has</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="95" d="M413.019,233.8633 C439.29,233.8633 466.641,233.8633 490.68,233.8633 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="495.441,233.8633,487.341,230.2633,490.941,233.8633,487.341,237.4633,495.441,233.8633" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="49.5" x="429.3" y="228.0089"> informs</text></a></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="105" d="M301.95,297.7093 C301.95,313.9273 301.95,330.0733 301.95,341.7103 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,297.6013,301.95,279.6013,308.25,297.6013,295.65,297.6013" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[7510d2ace8c22a0dd311afe46114521c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><path codeLine="108" d="M320.031,394.0003 C337.302,425.7703 362.664,472.3993 376.245,497.3743 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="314.451,396.9433,311.391,378.1153,325.521,390.9223,314.451,396.9433" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[6e8018043906774ee49f3c5e7edc31e4]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><path codeLine="109" d="M284.067,394.0003 C266.976,425.7703 241.884,472.3993 228.456,497.3743 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="278.532,390.9853,292.617,378.1153,289.629,396.9523,278.532,390.9853" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[ee7ec7a1d6655fb6d6f52b87854943de]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><path codeLine="110" d="M200.268,549.6103 C182.016,581.6323 155.097,628.8733 140.769,654.0283 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="194.985,546.1453,209.376,533.6173,205.938,552.3823,194.985,546.1453" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[45f094e0c35a294b6e3005ec336fc507]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><path codeLine="111" d="M238.23,549.6103 C256.662,581.6323 283.851,628.8733 298.332,654.0283 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="232.542,552.3643,229.023,533.6173,243.468,546.0823,232.542,552.3643" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="354.6" x="307.125" y="694.8321"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="704.1748"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="715.4951"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="354.6" x="307.125" y="726.8155">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::NonDeterministicDeclarative</text><!--MD5=[1d89e6c2e55bd6235913d40055432246]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class NonDeterministicDeclarative in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::NonDeterministicDeclarative

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:black>NonDeterministicDeclarative" #FFD700 {
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:blue>RuleBasedScheduling" [[../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization{ <U+2015> RuleBasedScheduling:\nRule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ...}]]



' Associations

' Super classes
' Associations of Super classes
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	InformationFlowDefinition
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	ProcessingAgent
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative

' Sub classes
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class NonDeterministicDeclarative in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::NonDeterministicDeclarative

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:black>NonDeterministicDeclarative" #FFD700 {
}

together {
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:blue>RuleBasedScheduling" [[../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization{ <U+2015> RuleBasedScheduling:\nRule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ...}]]




note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative

  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
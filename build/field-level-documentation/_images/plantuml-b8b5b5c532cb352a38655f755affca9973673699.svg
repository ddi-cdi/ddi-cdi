<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="231.3px" preserveAspectRatio="none" style="width:559px;height:231px;background:#FFFFFF;" version="1.1" viewBox="0 0 559 231" width="559.8px" zoomAndPan="magnify"><defs/><g><rect height="24.8484" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="543.6" x="4.5" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="351" x="9" y="22.0799">Inheritance tree of super classes starting from package</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="51.3" x="363.6" y="22.0799">Process</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="125.1" x="418.5" y="22.0799">without leaf classes</text><!--MD5=[91cb68fd87b3b72b9708791b96876208]
cluster Process--><g id="cluster_Process"><path d="M88.65,40.1484 L140.85,40.1484 A3.375,3.375 0 0 1 143.1,42.3984 L149.4,61.3969 L475.65,61.3969 A2.25,2.25 0 0 1 477.9,63.6469 L477.9,223.2984 A2.25,2.25 0 0 1 475.65,225.5484 L88.65,225.5484 A2.25,2.25 0 0 1 86.4,223.2984 L86.4,42.3984 A2.25,2.25 0 0 1 88.65,40.1484 " style="stroke:#000000;stroke-width:1.35;fill:none;"/><line style="stroke:#000000;stroke-width:1.35;fill:none;" x1="86.4" x2="149.4" y1="61.3969" y2="61.3969"/><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="51.3" x="90" y="55.0283">Process</text></g><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="24" fill="#EEEEEE" height="24.8484" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#000000;stroke-width:0.45;" width="144" x="100.8" y="72.5484"/><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="153" y="90.1283">Activity</text></g></a><!--MD5=[2c37921695407d096dd2c82a03bab8f7]
class DDICDIModels::DDICDILibrary::Classes::Process::Step--><a href="../DDICDILibrary/Classes/Process/Step.html#super-class-hierarchy-generalization" target="_top" title=" ― Step:&#10;Step is a reusable, parameterized activity associated to information flows. One or more steps perform an sctivity." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Step.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Step:&#10;Step is a reusable, parameterized activity associated to information flows. One or more steps perform an sctivity." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Step"><rect codeLine="27" fill="#EEEEEE" height="24.8484" id="DDICDIModels::DDICDILibrary::Classes::Process::Step" rx="2.25" ry="2.25" style="stroke:#000000;stroke-width:0.45;" width="144" x="309.15" y="72.5484"/><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="26.1" x="368.1" y="90.1283">Step</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="31" fill="#EEEEEE" height="24.8484" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#000000;stroke-width:0.45;" width="144" x="100.8" y="157.1484"/><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="136.8" y="174.7283">ControlLogic</text></g></a><!--MD5=[1a1a8561956ca8d977a1ae18d2ec3187]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><a href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" target="_top" title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><rect codeLine="34" fill="#EEEEEE" height="24.8484" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" rx="2.25" ry="2.25" style="stroke:#000000;stroke-width:0.45;" width="144" x="309.15" y="185.9484"/><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="131.4" x="315.45" y="203.5283">DeterministicImperative</text></g></a><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><a href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" target="_top" title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="38" fill="#EEEEEE" height="24.8484" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#000000;stroke-width:0.45;" width="164.7" x="298.8" y="129.2484"/><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="301.5" y="146.8283">NonDeterministicDeclarative</text></g></a><!--MD5=[f9480a126e0e5e65d8aed96ec1f02cc2]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::Activity to DDICDIModels::DDICDILibrary::Classes::Process::Step--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Activity_DDICDIModels::DDICDILibrary::Classes::Process::Step"><path codeLine="29" d="M263.097,85.1484 C278.406,85.1484 294.12,85.1484 308.871,85.1484 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity-backto-DDICDIModels::DDICDILibrary::Classes::Process::Step" style="stroke:#000000;stroke-width:1.35;"/><polygon fill="none" points="263.07,91.4484,245.07,85.1484,263.07,78.8484,263.07,91.4484" style="stroke:#000000;stroke-width:1.35;"/></g><!--MD5=[55887e32996690c03f97de33909f544c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><path codeLine="36" d="M263.097,182.2134 C278.406,184.3464 294.12,186.5424 308.871,188.5944 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" style="stroke:#000000;stroke-width:1.35;"/><polygon fill="none" points="262.026,188.4234,245.07,179.7024,263.772,175.9494,262.026,188.4234" style="stroke:#000000;stroke-width:1.35;"/></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="40" d="M263.25,157.6524 C274.995,156.0684 286.983,154.4484 298.593,152.8824 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#000000;stroke-width:1.35;"/><polygon fill="none" points="263.754,163.9434,245.07,160.1094,262.071,151.4514,263.754,163.9434" style="stroke:#000000;stroke-width:1.35;"/></g><!--MD5=[54b2bf254956a1c3bc8319f6dd843e67]
@startuml
title Inheritance tree of super classes starting from package **Process** without leaf classes

left to right direction
skinparam class {
  FontColor blue
}
scale 0.9
skinparam {
  shadowing false
  minClassWidth 160
  sameClassWidth false
  legendBackgroundColor white
  ArrowThickness 1.5
}
skinparam class {
  ArrowColor black
  BackGroundColor #EEEEEE
  BorderColor black
}
hide circle
hide empty members

package Process  {
  class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
}
package Process  {
  class DDICDIModels::DDICDILibrary::Classes::Process::Step as "<color:blue>Step" [[../DDICDILibrary/Classes/Process/Step.html#super-class-hierarchy-generalization{ <U+2015> Step:\nStep is a reusable, parameterized activity associated to information flows. One or more steps perform an sctivity.}]]
}
DDICDIModels::DDICDILibrary::Classes::Process::Activity <|- - DDICDIModels::DDICDILibrary::Classes::Process::Step
package Process  {
  class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
}
package Process  {
  class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]]
}
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- - DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative
package Process  {
  class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
}
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- - DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative

@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
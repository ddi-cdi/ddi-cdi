<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="725.4px" preserveAspectRatio="none" style="width:981px;height:725px;background:#FFFFFF;" version="1.1" viewBox="0 0 981 725" width="981px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="507.6" x="230.625" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="498.6" x="235.125" y="27.6855">UML Diagram: Class TemporalControlConstruct in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="482.625" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[a0438961881a4fc606840d398cef942c]
entity ##3--><!--MD5=[7639129a7208b5720b5c8dbdaf72c8f5]
entity ##5--><!--MD5=[709a7571879ab291d9a4b7a9d9794af4]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><rect codeLine="47" fill="#FFD700" height="59.2172" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="217.8" x="193.05" y="620.2513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="634.0941">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="150.3" x="226.8" y="649.1515">TemporalControlConstruct</text><line style="stroke:#404040;stroke-width:0.45;" x1="193.95" x2="409.95" y1="656.4201" y2="656.4201"/><a href="../DDICDILibrary/DataTypes/Enumerations/TemporalOperator.html#diagram" target="_top" title=" ― TemporalOperator:&#10;Set of control flow operators where the continuation of the execution flow depends on the finalization of one or more preceding activities." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/Enumerations/TemporalOperator.html#diagram" xlink:show="new" xlink:title=" ― TemporalOperator:&#10;Set of control flow operators where the continuation of the execution flow depends on the finalization of one or more preceding activities." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="98.1" x="198.45" y="673.0999">temporalControl :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="105.3" x="300.15" y="673.0999">TemporalOperator</text></a></g><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><a href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" target="_top" title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="82" fill="#FAFAD2" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="164.7" x="219.6" y="387.1513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="400.9941">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="222.3" y="416.0515">NonDeterministicDeclarative</text></g></a><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="63" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="661.95" y="237.7513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="716.85" y="251.5941">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="664.65" y="266.6515">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="64" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="841.05" y="237.7513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="889.65" y="251.5941">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="888.75" y="266.6515">Activity</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="109" fill="#FAFAD2" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="191.25" y="210.3013"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="224.1441">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="265.95" y="239.2015">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="192.15" x2="411.75" y1="246.4701" y2="246.4701"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="196.65" y="263.1499">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="196.65" y="278.9984">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="256.05" y="278.9984">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="196.65" y="294.8468">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="255.15" y="294.8468">ControlledVocabularyEntry</text></a></g></a><!--MD5=[08ba6ba01d98bb161ad68b4a623f9af7]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><a href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><rect codeLine="76" fill="#FAFAD2" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="234.45" y="502.3513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="516.1941">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="118.8" x="242.55" y="531.2515">TemporalConstraints</text></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="67" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="495.45" y="237.7513"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="544.05" y="251.5941">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="514.8" y="266.6515">ProcessingAgent</text></g></a><g id="elem_GMN15"><path d="M5.4,236.4013 L5.4,274.8341 A0,0 0 0 0 5.4,274.8341 L159.3,274.8341 A0,0 0 0 0 159.3,274.8341 L159.3,259.3513 L190.98,255.7513 L159.3,252.1513 L159.3,245.4013 L150.3,236.4013 L5.4,236.4013 A0,0 0 0 0 5.4,236.4013 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><path d="M150.3,236.4013 L150.3,245.4013 L159.3,245.4013 L150.3,236.4013 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="135" x="10.8" y="253.0469">Class has 5 associations.</text><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="120.6" x="10.8" y="267.7633">Only 3 are shown here.</text></g><!--MD5=[45f094e0c35a294b6e3005ec336fc507]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><path codeLine="79" d="M301.95,556.5313 C301.95,576.5473 301.95,601.2703 301.95,620.1343 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,556.4863,301.95,538.4863,308.25,556.4863,295.65,556.4863" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[6e8018043906774ee49f3c5e7edc31e4]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><path codeLine="85" d="M301.95,441.5653 C301.95,461.7163 301.95,486.0253 301.95,502.0633 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,441.2773,301.95,423.2773,308.25,441.2773,295.65,441.2773" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="97" d="M401.094,208.4473 C488.898,172.6993 620.37,134.1703 733.95,162.1513 C792.225,176.5063 852.183,214.7833 884.448,237.6973 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="396.684,210.2563,405.5436,210.5341,400.8514,208.5585,402.8271,203.8663,396.684,210.2563" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="664.65" y="158.0969"> hasInternal</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="102" d="M373.346,204.6684 C373.346,204.6684 491.193,147.2293 553.05,162.1513 C607.914,175.3903 664.821,208.0693 700.236,231.0733 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="710.082,237.5713,705.312,230.1003,706.3287,235.0889,701.3401,236.1056,710.082,237.5713" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="706.3287" x2="700.317" y1="235.0889" y2="231.1228"/><polygon fill="none" points="364.104,210.2563,370.5877,210.543,373.346,204.6684,366.8624,204.3817,364.104,210.2563" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="30.6" x="521.55" y="158.0969"> has</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="107" d="M413.019,255.7513 C439.29,255.7513 466.641,255.7513 490.68,255.7513 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="495.441,255.7513,487.341,252.1513,490.941,255.7513,487.341,259.3513,495.441,255.7513" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="49.5" x="429.3" y="249.8969"> informs</text></a></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="117" d="M301.95,319.6063 C301.95,344.1583 301.95,370.3393 301.95,386.9803 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,319.3363,301.95,301.3363,308.25,319.3363,295.65,319.3363" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="344.7" x="312.075" y="684.8685"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="694.2113"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="705.5316"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="344.7" x="312.075" y="716.8519">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalControlConstruct</text><!--MD5=[513442f35d12026d2644be981e5d6dfb]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class TemporalControlConstruct in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalControlConstruct

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:black>TemporalControlConstruct" #FFD700 {
  temporalControl : <color:blue>TemporalOperator   	  [[[../DDICDILibrary/DataTypes/Enumerations/TemporalOperator.html#diagram{ <U+2015> TemporalOperator:\nSet of control flow operators where the continuation of the execution flow depends on the finalization of one or more preceding activities.}]]]
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]



' Associations

' Super classes
' Associations of Super classes

class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10> \n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct
' Associations of Super classes

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints
' Associations of Super classes
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	InformationFlowDefinition
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	ProcessingAgent
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative




' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class TemporalControlConstruct in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalControlConstruct

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:black>TemporalControlConstruct" #FFD700 {
  temporalControl : <color:blue>TemporalOperator   	  [[[../DDICDILibrary/DataTypes/Enumerations/TemporalOperator.html#diagram{ <U+2015> TemporalOperator:\nSet of control flow operators where the continuation of the execution flow depends on the finalization of one or more preceding activities.}]]]
}

together {
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]





class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10> \n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative




@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
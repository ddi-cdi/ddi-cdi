<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="630px" preserveAspectRatio="none" style="width:810px;height:630px;background:#FFFFFF;" version="1.1" viewBox="0 0 810 630" width="810.9px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="318.6" x="239.85" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="309.6" x="244.35" y="27.6855">UML Diagram: Class Step in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="397.35" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[a08a5e20e95ed5b574a4539b60f4d8ee]
class DDICDIModels::DDICDILibrary::Classes::Process::Parameter--><a href="../DDICDILibrary/Classes/Process/Parameter.html#super-class-hierarchy-generalization" target="_top" title=" ― Parameter:&#10;An input or output to control logic and the step/sub-step it invokes. Parameters may take the form of any information object, including data sets and structured metadata as well as configuration information for the step/sub-step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Parameter.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Parameter:&#10;An input or output to control logic and the step/sub-step it invokes. Parameters may take the form of any information object, including data sets and structured metadata as well as configuration information for the step/sub-step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Parameter"><rect codeLine="57" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Parameter" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="79.2" y="548.5123"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="127.8" y="562.3551">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="59.4" x="117" y="577.4125">Parameter</text></g></a><!--MD5=[fa26dd5b28bd31e0227766c25574e362]
entity ##6--><!--MD5=[2c37921695407d096dd2c82a03bab8f7]
class DDICDIModels::DDICDILibrary::Classes::Process::Step--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Step"><rect codeLine="47" fill="#FFD700" height="75.0656" id="DDICDIModels::DDICDILibrary::Classes::Process::Step" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="279" x="6.3" y="401.3623"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="126.9" y="415.2051">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="26.1" x="132.75" y="430.2625">Step</text><line style="stroke:#404040;stroke-width:0.45;" x1="7.2" x2="284.4" y1="437.5311" y2="437.5311"/><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram" target="_top" title=" ― CommandCode:&#10;Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram" xlink:show="new" xlink:title=" ― CommandCode:&#10;Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="37.8" x="11.7" y="454.2109">script :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="88.2" x="53.1" y="454.2109">CommandCode</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="112.5" x="11.7" y="470.0594">scriptingLanguage :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="127.8" y="470.0594">ControlledVocabularyEntry</text></a></g><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="100" fill="#FAFAD2" height="138.4594" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="214.2" x="38.7" y="193.0123"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="126.9" y="206.8551">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="126" y="221.9125">Activity</text><line style="stroke:#404040;stroke-width:0.45;" x1="39.6" x2="252" y1="229.1811" y2="229.1811"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="44.1" y="245.8609">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" target="_top" title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" xlink:show="new" xlink:title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="92.7" x="44.1" y="261.7094">entityProduced :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="59.4" x="140.4" y="261.7094">Reference</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" target="_top" title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" xlink:show="new" xlink:title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="66.6" x="44.1" y="277.5578">entityUsed :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="59.4" x="114.3" y="277.5578">Reference</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="44.1" y="293.4063">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="103.5" y="293.4063">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ObjectName.html#diagram" target="_top" title=" ― ObjectName:&#10;A standard means of expressing a name for a class object. A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ObjectName.html#diagram" xlink:show="new" xlink:title=" ― ObjectName:&#10;A standard means of expressing a name for a class object. A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="38.7" x="44.1" y="309.2547">name :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="69.3" x="86.4" y="309.2547">ObjectName</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" target="_top" title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram" xlink:show="new" xlink:title=" ― Reference:&#10;Provides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="140.4" x="44.1" y="325.1031">standardModelMapping :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="59.4" x="188.1" y="325.1031">Reference</text></a></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="66" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="670.5" y="244.3123"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="719.1" y="258.1551">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="702" y="273.2125">ControlLogic</text></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="67" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="441.9" y="244.3123"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="490.5" y="258.1551">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="461.25" y="273.2125">ProcessingAgent</text></g></a><!--MD5=[89673f29900b54573742f73e1b08cef3]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::Step to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Step_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― has:&#10;Activities may be broken out into Steps. Steps are also a subtype of Activity." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;Activities may be broken out into Steps. Steps are also a subtype of Activity." xlink:type="simple"><path codeLine="72" d="M145.8,396.6103 C145.8,377.2513 145.8,353.6533 145.8,331.7203 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Step-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="145.8,401.1733,149.4,393.0733,145.8,396.6733,142.2,393.0733,145.8,401.1733" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="18.9" x="146.7" y="371.6579">has</text></a></g><!--MD5=[f9480a126e0e5e65d8aed96ec1f02cc2]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::Activity to DDICDIModels::DDICDILibrary::Classes::Process::Step--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Activity_DDICDIModels::DDICDILibrary::Classes::Process::Step"><path codeLine="114" d="M138.141,349.9453 C138.015,358.3513 138.141,366.7393 138.6,374.8123 C139.086,383.3893 139.941,392.5783 140.904,401.2273 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity-backto-DDICDIModels::DDICDILibrary::Classes::Process::Step" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="131.85,349.4413,138.753,331.6663,144.441,349.8643,131.85,349.4413" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[e7b0437cb5babbf805a9d1269b9f2ff9]
link DDICDIModels::DDICDILibrary::Classes::Process::Step to DDICDIModels::DDICDILibrary::Classes::Process::Step--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Step_DDICDIModels::DDICDILibrary::Classes::Process::Step"><a href="" target="_top" title=" ― hasSubStep:&#10;A step can be broken out into steps ad infinitum." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasSubStep:&#10;A step can be broken out into steps ad infinitum." xlink:type="simple"><path codeLine="73" d="M296.0466,428.2524 C296.0466,428.2524 316.8,434.0863 316.8,438.7123 C316.8,443.3383 309.276,446.7673 297.135,449.0173 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Step-DDICDIModels::DDICDILibrary::Classes::Process::Step" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="285.354,450.6913,293.8798,453.1162,289.8093,450.0584,292.8671,445.9878,285.354,450.6913" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="289.8093" x2="296.937" y1="450.0584" y2="449.0488"/><polygon fill="none" points="285.354,426.7333,290.194,431.057,296.0466,428.2524,291.2067,423.9286,285.354,426.7333" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="63.9" x="322.2" y="443.6579">hasSubStep</text></a></g><!--MD5=[e98f4e0f9f294ddc5b5a2460ad56ec68]
link DDICDIModels::DDICDILibrary::Classes::Process::Step to DDICDIModels::DDICDILibrary::Classes::Process::Parameter--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Step_DDICDIModels::DDICDILibrary::Classes::Process::Parameter"><a href="" target="_top" title=" ― produces:&#10;The Step creates Parameter as an output." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― produces:&#10;The Step creates Parameter as an output." xlink:type="simple"><path codeLine="74" d="M122.256,476.4043 C116.361,489.9133 112.77,505.4023 117,519.7123 C119.583,528.4693 124.416,537.1273 129.447,544.5163 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Step-to-DDICDIModels::DDICDILibrary::Classes::Process::Parameter" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="132.246,548.4943,130.5136,539.8013,129.6499,544.8187,124.6325,543.955,132.246,548.4943" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="47.7" x="117.9" y="516.5579">produces</text></a></g><!--MD5=[e98f4e0f9f294ddc5b5a2460ad56ec68]
link DDICDIModels::DDICDILibrary::Classes::Process::Step to DDICDIModels::DDICDILibrary::Classes::Process::Parameter--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Step_DDICDIModels::DDICDILibrary::Classes::Process::Parameter"><a href="" target="_top" title=" ― receives:&#10;The Step uses Parameter as an input." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― receives:&#10;The Step uses Parameter as an input." xlink:type="simple"><path codeLine="75" d="M165.501,476.4493 C170.469,489.9583 173.52,505.4383 170.1,519.7123 C168.048,528.2263 164.151,536.9383 160.11,544.4533 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Step-to-DDICDIModels::DDICDILibrary::Classes::Process::Parameter-1" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="157.86,548.4943,164.9407,543.162,160.0454,544.5606,158.6467,539.6653,157.86,548.4943" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="42.3" x="171.9" y="516.5579">receives</text></a></g><!--MD5=[9a126a6f390eb5c19cf783c6ca465c3e]
link DDICDIModels::DDICDILibrary::Classes::Process::Activity to DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Activity_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="88" d="M253.098,209.5183 C343.242,172.2043 475.02,134.1703 587.7,166.9123 C637.398,181.3573 686.403,217.7353 714.339,241.1623 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity-to-DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="717.975,244.2403,714.1183,236.2593,714.5402,241.333,709.4666,241.7549,717.975,244.2403" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="518.4" y="162.8579"> hasInternal</text></a></g><!--MD5=[55bc16dffe94287eb73a35015f44e6b9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::Activity to DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Activity_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><a href="" target="_top" title=" ― invokes:&#10;Control logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling)." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― invokes:&#10;Control logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling)." xlink:type="simple"><path codeLine="93" d="M257.355,207.7723 C347.355,171.0343 476.784,134.6833 587.7,166.9123 C639.63,182.0053 690.795,221.0473 717.975,244.2403 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity-backto-DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="253.098,209.5183,261.9583,209.7727,257.2609,207.8095,259.2242,203.1121,253.098,209.5183" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="50.4" x="527.4" y="162.8579"> invokes</text></a></g><!--MD5=[6c0345c21ac554deff8b3b5873300ab8]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::Activity to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::Activity_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― performs:&#10;A processing agent performs an activity at the direction of control logic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― performs:&#10;A processing agent performs an activity at the direction of control logic." xlink:type="simple"><path codeLine="98" d="M257.598,262.3123 C317.763,262.3123 389.997,262.3123 441.639,262.3123 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity-backto-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="252.918,262.3123,261.018,265.9123,257.418,262.3123,261.018,258.7123,252.918,262.3123" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="56.7" x="319.05" y="256.4579"> performs</text></a></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="252.9" x="272.7" y="589.1811"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="397.8" y="598.5238"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="397.8" y="609.8441"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="252.9" x="272.7" y="621.1645">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::Step</text><!--MD5=[2d493a6a90c0fd28f2627da4bdef1ef3]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class Step in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::Step

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::Step as "<size:10>Process::\n<color:black>Step" #FFD700 {
  script : <color:blue>CommandCode   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram{ <U+2015> CommandCode:\nContains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script.}]]]
  scriptingLanguage : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Parameter as "<size:10>Process::\n<color:blue>Parameter" [[../DDICDILibrary/Classes/Process/Parameter.html#super-class-hierarchy-generalization{ <U+2015> Parameter:\nAn input or output to control logic and the step/sub-step it invokes. Parameters may take the form of any information object, including data sets and structured metadata as well as configuration information for the step/sub-step.}]]
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]



' Associations
DDICDIModels::DDICDILibrary::Classes::Process::Step <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> has:\nActivities may be broken out into Steps. Steps are also a subtype of Activity.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::Step o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Step [[{ <U+2015> hasSubStep:\nA step can be broken out into steps ad infinitum.}]] : hasSubStep
DDICDIModels::DDICDILibrary::Classes::Process::Step -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Parameter [[{ <U+2015> produces:\nThe Step creates Parameter as an output.}]] : produces
DDICDIModels::DDICDILibrary::Classes::Process::Step -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Parameter [[{ <U+2015> receives:\nThe Step uses Parameter as an input.}]] : receives

' Super classes
' Associations of Super classes
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@43af351a (name: Activity, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@43af351a (name: Activity, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			Step
' aSuperClass:		Activity
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::Activity -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			Step
' aSuperClass:		Activity
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	Activity
DDICDIModels::DDICDILibrary::Classes::Process::Activity <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> invokes:\nControl logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling).}]] : <U+2003>invokes
' aClass:			Step
' aSuperClass:		Activity
' e_ownedEndClass:	ProcessingAgent
' e_otherEndClass:	Activity
DDICDIModels::DDICDILibrary::Classes::Process::Activity <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> performs:\nA processing agent performs an activity at the direction of control logic.}]] : <U+2003>performs

class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10> \n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]] #FAFAD2 {
  description : String
  entityProduced : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
  entityUsed : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  name : <color:blue>ObjectName   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ObjectName.html#diagram{ <U+2015> ObjectName:\nA standard means of expressing a name for a class object. A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles.}]]]
  standardModelMapping : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::Activity <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::Step


' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class Step in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::Step

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::Step as "<size:10>Process::\n<color:black>Step" #FFD700 {
  script : <color:blue>CommandCode   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram{ <U+2015> CommandCode:\nContains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script.}]]]
  scriptingLanguage : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Parameter as "<size:10>Process::\n<color:blue>Parameter" [[../DDICDILibrary/Classes/Process/Parameter.html#super-class-hierarchy-generalization{ <U+2015> Parameter:\nAn input or output to control logic and the step/sub-step it invokes. Parameters may take the form of any information object, including data sets and structured metadata as well as configuration information for the step/sub-step.}]]
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]



DDICDIModels::DDICDILibrary::Classes::Process::Step <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> has:\nActivities may be broken out into Steps. Steps are also a subtype of Activity.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::Step o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Step [[{ <U+2015> hasSubStep:\nA step can be broken out into steps ad infinitum.}]] : hasSubStep
DDICDIModels::DDICDILibrary::Classes::Process::Step -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Parameter [[{ <U+2015> produces:\nThe Step creates Parameter as an output.}]] : produces
DDICDIModels::DDICDILibrary::Classes::Process::Step -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Parameter [[{ <U+2015> receives:\nThe Step uses Parameter as an input.}]] : receives




DDICDIModels::DDICDILibrary::Classes::Process::Activity -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::Activity <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> invokes:\nControl logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling).}]] : <U+2003>invokes
DDICDIModels::DDICDILibrary::Classes::Process::Activity <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> performs:\nA processing agent performs an activity at the direction of control logic.}]] : <U+2003>performs

class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10> \n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]] #FAFAD2 {
  description : String
  entityProduced : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
  entityUsed : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  name : <color:blue>ObjectName   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ObjectName.html#diagram{ <U+2015> ObjectName:\nA standard means of expressing a name for a class object. A linguistic signifier. Human understandable name (word, phrase, or mnemonic) that reflects the ISO/IEC 11179-5 naming principles.}]]]
  standardModelMapping : <color:blue>Reference   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Reference.html#diagram{ <U+2015> Reference:\nProvides a way of pointing to resources outside of the information described in the set of DDI-CDI metadata.}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::Activity <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::Step


@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
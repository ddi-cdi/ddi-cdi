<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="680.4px" preserveAspectRatio="none" style="width:981px;height:680px;background:#FFFFFF;" version="1.1" viewBox="0 0 981 680" width="981px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="486" x="241.425" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="477" x="245.925" y="27.6855">UML Diagram: Class ConditionalControlLogic in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="482.625" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[cc49f1ab46f9010e697b8f1ad345c33d]
class DDICDIModels::DDICDILibrary::Classes::Process::Rule--><a href="../DDICDILibrary/Classes/Process/Rule.html#super-class-hierarchy-generalization" target="_top" title=" ― Rule:&#10;A rule has a condition part and an action part. A rule takes the form of: If [Condition} Then [Action]. A rule belongs to a rule set which is a component of rule based scheduling performed by the processing agent" xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Rule.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Rule:&#10;A rule has a condition part and an action part. A rule takes the form of: If [Condition} Then [Action]. A rule belongs to a rule set which is a component of rule based scheduling performed by the processing agent" xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Rule"><rect codeLine="57" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Rule" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="234.45" y="599.2543"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="613.0971">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="26.1" x="288.9" y="628.1545">Rule</text></g></a><!--MD5=[fa26dd5b28bd31e0227766c25574e362]
entity ##6--><!--MD5=[aeb310b8222cbee6a8a391ebc0bc3b5e]
class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic"><rect codeLine="47" fill="#FFD700" height="75.0656" id="DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="170.1" x="216.9" y="442.2043"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="456.0471">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="135.9" x="234" y="471.1045">ConditionalControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="217.8" x2="386.1" y1="478.3731" y2="478.3731"/><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram" target="_top" title=" ― CommandCode:&#10;Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram" xlink:show="new" xlink:title=" ― CommandCode:&#10;Contains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="58.5" x="222.3" y="495.0529">condition :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="88.2" x="284.4" y="495.0529">CommandCode</text></a><a href="../DDICDILibrary/DataTypes/Enumerations/ControlConstruct.html#diagram" target="_top" title=" ― ControlConstruct:&#10;Type of control construct used by the conditional control logic related to an activity." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/Enumerations/ControlConstruct.html#diagram" xlink:show="new" xlink:title=" ― ControlConstruct:&#10;Type of control construct used by the conditional control logic related to an activity." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="59.4" x="222.3" y="510.9014">construct :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="285.3" y="510.9014">ControlConstruct</text></a></g><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="65" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="661.95" y="215.8543"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="716.85" y="229.6971">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="664.65" y="244.7545">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="66" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="841.05" y="215.8543"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="889.65" y="229.6971">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="888.75" y="244.7545">Activity</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="106" fill="#FAFAD2" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="191.25" y="188.4043"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="202.2471">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="265.95" y="217.3045">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="192.15" x2="411.75" y1="224.5731" y2="224.5731"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="196.65" y="241.2529">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="196.65" y="257.1014">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="256.05" y="257.1014">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="196.65" y="272.9498">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="255.15" y="272.9498">ControlledVocabularyEntry</text></a></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="68" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="495.45" y="215.8543"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="544.05" y="229.6971">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="514.8" y="244.7545">ProcessingAgent</text></g></a><!--MD5=[1a1a8561956ca8d977a1ae18d2ec3187]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><a href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" target="_top" title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><rect codeLine="79" fill="#FAFAD2" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="136.8" x="233.55" y="343.6543"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="357.4971">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="131.4" x="236.25" y="372.5545">DeterministicImperative</text></g></a><g id="elem_GMN15"><path d="M5.4,214.5043 L5.4,252.9371 A0,0 0 0 0 5.4,252.9371 L159.3,252.9371 A0,0 0 0 0 159.3,252.9371 L159.3,237.4543 L190.98,233.8543 L159.3,230.2543 L159.3,223.5043 L150.3,214.5043 L5.4,214.5043 A0,0 0 0 0 5.4,214.5043 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><path d="M150.3,214.5043 L150.3,223.5043 L159.3,223.5043 L150.3,214.5043 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="135" x="10.8" y="231.1499">Class has 5 associations.</text><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="120.6" x="10.8" y="245.8663">Only 3 are shown here.</text></g><!--MD5=[70c098095c6668e4445c5db9b393a11d]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Rule--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Rule"><a href="" target="_top" title=" ― hasPrecondition:&#10;The condition part of a rule is associated with conditonal control logic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasPrecondition:&#10;The condition part of a rule is associated with conditonal control logic." xlink:type="simple"><path codeLine="74" d="M301.95,521.9803 C301.95,547.8193 301.95,579.6883 301.95,598.9933 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Rule" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="301.95,517.2283,298.35,525.3283,301.95,521.7283,305.55,525.3283,301.95,517.2283" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="83.7" x="302.85" y="562.7999">hasPrecondition</text></a></g><!--MD5=[06da0ddd9a7fa480e991ab04536ea3b2]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative to DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative_DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic"><path codeLine="82" d="M301.95,397.9063 C301.95,411.8743 301.95,427.9213 301.95,442.0063 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative-backto-DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,397.6903,301.95,379.6903,308.25,397.6903,295.65,397.6903" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="94" d="M417.276,189.4213 C504.279,161.4943 626.58,134.1703 733.95,153.7543 C789.228,163.8433 847.386,195.3523 880.677,215.7103 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="412.902,190.8343,421.7175,191.7598,417.1825,189.446,419.4963,184.911,412.902,190.8343" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="664.65" y="152.3999"> hasInternal</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="99" d="M389.2853,183.7569 C389.2853,183.7569 497.79,143.8543 553.05,153.7543 C605.223,163.1053 660.303,189.8983 696.177,209.9413 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="706.437,215.7823,701.1806,208.6451,702.5269,213.555,697.6169,214.9013,706.437,215.7823" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="702.5269" x2="696.276" y1="213.555" y2="209.9953"/><polygon fill="none" points="379.494,188.3143,385.9088,189.2994,389.2853,183.7569,382.8705,182.7718,379.494,188.3143" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="30.6" x="521.55" y="152.3999"> has</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="104" d="M413.019,233.8543 C439.29,233.8543 466.641,233.8543 490.68,233.8543 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="495.441,233.8543,487.341,230.2543,490.941,233.8543,487.341,237.4543,495.441,233.8543" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="49.5" x="429.3" y="227.9999"> informs</text></a></g><!--MD5=[55887e32996690c03f97de33909f544c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><path codeLine="114" d="M301.95,297.5833 C301.95,314.4313 301.95,331.2973 301.95,343.3573 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,297.5293,301.95,279.5293,308.25,297.5293,295.65,297.5293" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="337.5" x="315.675" y="639.9231"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="649.2658"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="660.5861"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="337.5" x="315.675" y="671.9065">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ConditionalControlLogic</text><!--MD5=[b3c4381b5ebe925b7b1f65b3bb7cd985]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class ConditionalControlLogic in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ConditionalControlLogic

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic as "<size:10>Process::\n<color:black>ConditionalControlLogic" #FFD700 {
  condition : <color:blue>CommandCode   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram{ <U+2015> CommandCode:\nContains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script.}]]]
  construct : <color:blue>ControlConstruct   	  [[[../DDICDILibrary/DataTypes/Enumerations/ControlConstruct.html#diagram{ <U+2015> ControlConstruct:\nType of control construct used by the conditional control logic related to an activity.}]]]
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Rule as "<size:10>Process::\n<color:blue>Rule" [[../DDICDILibrary/Classes/Process/Rule.html#super-class-hierarchy-generalization{ <U+2015> Rule:\nA rule has a condition part and an action part. A rule takes the form of: If [Condition<U+007D> Then [Action]. A rule belongs to a rule set which is a component of rule based scheduling performed by the processing agent}]]
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10>Process::\n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]]



' Associations
DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Rule [[{ <U+2015> hasPrecondition:\nThe condition part of a rule is associated with conditonal control logic.}]] : hasPrecondition

' Super classes
' Associations of Super classes

class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10> \n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic
' Associations of Super classes
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			DeterministicImperative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			DeterministicImperative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	InformationFlowDefinition
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
' aClass:			DeterministicImperative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	ProcessingAgent
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative



' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class ConditionalControlLogic in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ConditionalControlLogic

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic as "<size:10>Process::\n<color:black>ConditionalControlLogic" #FFD700 {
  condition : <color:blue>CommandCode   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/CommandCode.html#diagram{ <U+2015> CommandCode:\nContains information on the command used for processing data. Contains a description of the command which should clarify for the user the purpose and process of the command, an in-line provision of the command itself, and a reference to an external version of the command such as a coding script.}]]]
  construct : <color:blue>ControlConstruct   	  [[[../DDICDILibrary/DataTypes/Enumerations/ControlConstruct.html#diagram{ <U+2015> ControlConstruct:\nType of control construct used by the conditional control logic related to an activity.}]]]
}

together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Rule as "<size:10>Process::\n<color:blue>Rule" [[../DDICDILibrary/Classes/Process/Rule.html#super-class-hierarchy-generalization{ <U+2015> Rule:\nA rule has a condition part and an action part. A rule takes the form of: If [Condition<U+007D> Then [Action]. A rule belongs to a rule set which is a component of rule based scheduling performed by the processing agent}]]
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10>Process::\n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]]



DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Rule [[{ <U+2015> hasPrecondition:\nThe condition part of a rule is associated with conditonal control logic.}]] : hasPrecondition


class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10> \n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative



@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
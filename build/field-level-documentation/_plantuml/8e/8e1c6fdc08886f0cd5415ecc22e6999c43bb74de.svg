<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="765.9px" preserveAspectRatio="none" style="width:1021px;height:765px;background:#FFFFFF;" version="1.1" viewBox="0 0 1021 765" width="1021.5px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="389.7" x="309.6" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="380.7" x="314.1" y="27.6855">UML Diagram: Class ControlLogic in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="502.65" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="58" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="531.9" y="298.4203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="586.8" y="312.2631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="534.6" y="327.3205">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="59" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="712.8" y="298.4203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="761.4" y="312.2631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="760.5" y="327.3205">Activity</text></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="60" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="881.1" y="298.4203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="929.7" y="312.2631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="900.45" y="327.3205">ProcessingAgent</text></g></a><!--MD5=[f9cab4dd997d7c1fc86d2ab62e0cc130]
entity ##8--><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="47" fill="#FFD700" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="531.9" y="135.0703"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="623.7" y="148.9131">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="606.6" y="163.9705">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="532.8" x2="752.4" y1="171.2391" y2="171.2391"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="537.3" y="187.9189">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="537.3" y="203.7674">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="596.7" y="203.7674">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="537.3" y="219.6158">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="595.8" y="219.6158">ControlledVocabularyEntry</text></a></g><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><a href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" target="_top" title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="68" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="164.7" x="246.15" y="391.1203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="309.6" y="404.9631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="248.85" y="420.0205">NonDeterministicDeclarative</text></g></a><!--MD5=[08ba6ba01d98bb161ad68b4a623f9af7]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><a href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalConstraints:&#10;Temporal constraints provide a mechanism for expressing concurrency control and synchronization" xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><rect codeLine="69" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="95.4" y="537.8203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="144" y="551.6631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="118.8" x="103.5" y="566.7205">TemporalConstraints</text></g></a><!--MD5=[02b9b219988dc503761fbf1cad30d622]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><a href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" target="_top" title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><rect codeLine="70" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="6.3" y="684.5203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="54.9" y="698.3631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="113.4" x="17.1" y="713.4205">AllenIntervalAlgebra</text></g></a><!--MD5=[aeb310b8222cbee6a8a391ebc0bc3b5e]
class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic--><a href="../DDICDILibrary/Classes/Process/ConditionalControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ConditionalControlLogic:&#10;A set of decision points which determine the flow between the steps used to perform an activity." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ConditionalControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ConditionalControlLogic:&#10;A set of decision points which determine the flow between the steps used to perform an activity." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic"><rect codeLine="71" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="141.3" x="438.75" y="537.8203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="490.5" y="551.6631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="135.9" x="441.45" y="566.7205">ConditionalControlLogic</text></g></a><!--MD5=[1a1a8561956ca8d977a1ae18d2ec3187]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><a href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" target="_top" title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― DeterministicImperative:&#10;Deterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><rect codeLine="72" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="136.8" x="444.6" y="391.1203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="494.1" y="404.9631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="131.4" x="447.3" y="420.0205">DeterministicImperative</text></g></a><!--MD5=[709a7571879ab291d9a4b7a9d9794af4]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><a href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><rect codeLine="73" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="155.7" x="175.05" y="684.5203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="234" y="698.3631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="150.3" x="177.75" y="713.4205">TemporalControlConstruct</text></g></a><!--MD5=[176626d4bed7481770d2a75e2ecd0210]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><a href="../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization" target="_top" title=" ― RuleBasedScheduling:&#10;Rule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― RuleBasedScheduling:&#10;Rule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><rect codeLine="74" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="263.7" y="537.8203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="312.3" y="551.6631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="125.1" x="268.65" y="566.7205">RuleBasedScheduling</text></g></a><!--MD5=[8bc1edeb4199750592a575c53fada897]
class DDICDIModels::DDICDILibrary::Classes::Process::Sequence--><a href="../DDICDILibrary/Classes/Process/Sequence.html#super-class-hierarchy-generalization" target="_top" title=" ― Sequence:&#10;A sequence controls the order of activities or steps by defining a simple sequence." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Sequence.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Sequence:&#10;A sequence controls the order of activities or steps by defining a simple sequence." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Sequence"><rect codeLine="75" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Sequence" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="613.8" y="537.8203"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="662.4" y="551.6631">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="57.6" x="652.5" y="566.7205">Sequence</text></g></a><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="80" d="M656.181,230.3353 C661.896,244.3123 669.762,258.7033 680.4,269.6203 C680.715,269.9353 714.51,285.4333 742.698,298.3303 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="654.48,226.0153,654.0987,234.8711,656.129,230.2023,660.7978,232.2326,654.48,226.0153" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="56.7" x="681.3" y="266.4659">hasInternal</text></a></g><!--MD5=[0b3538009642ca8c7f458173ec441398]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― invokes:&#10;Control logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling)." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― invokes:&#10;Control logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling)." xlink:type="simple"><path codeLine="84" d="M712.26,226.0333 C723.006,234.4483 733.5,243.6913 742.5,253.4203 C753.669,265.4893 763.263,281.3563 769.986,294.0283 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="772.155,298.1953,771.5941,289.3491,770.0708,294.2071,765.2129,292.6838,772.155,298.1953" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="38.7" x="755.1" y="266.4659">invokes</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="81" d="M622.455,236.2944 C622.455,236.2944 618.831,248.1013 617.4,253.4203 C614.529,264.1573 612.099,276.1273 610.209,286.6753 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="608.247,298.2313,613.1497,290.8466,608.9988,293.7946,606.0509,289.6437,608.247,298.2313" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="608.9988" x2="610.2045" y1="293.7946" y2="286.6933"/><polygon fill="none" points="625.824,226.0333,620.7192,230.0409,622.455,236.2944,627.5599,232.2868,625.824,226.0333" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="18.9" x="618.3" y="266.4659">has</text></a></g><!--MD5=[46f85e1bfed1bd3a4d4a06ce0ff11e9f]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><a href="" target="_top" title=" ― hasSubControlLogic:&#10;Control logic is a container of control logic which is in turn a container of control logic ad infinitum so that it is able to represent the structure of a program." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasSubControlLogic:&#10;Control logic is a container of control logic which is in turn a container of control logic ad infinitum so that it is able to represent the structure of a program." xlink:type="simple"><path codeLine="82" d="M764.1747,168.0354 C764.1747,168.0354 784.8,174.7693 784.8,180.5203 C784.8,186.2713 777.159,190.3933 765.126,192.8773 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="753.498,194.6323,762.0479,196.9709,757.9466,193.9544,760.9632,189.8531,753.498,194.6323" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="757.9466" x2="765.0675" y1="193.9544" y2="192.8818"/><polygon fill="none" points="753.498,166.4083,758.294,170.7807,764.1747,168.0354,759.3787,163.6629,753.498,166.4083" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="104.4" x="790.2" y="185.4659">hasSubControlLogic</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="83" d="M747.549,226.0783 C784.449,241.9273 826.137,259.9993 864,276.8203 C878.184,283.1203 893.637,290.1403 907.407,296.4493 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="911.619,298.3843,905.7599,291.733,907.5294,296.5067,902.7557,298.2763,911.619,298.3843" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="37.8" x="846.9" y="266.4659">informs</text></a></g><!--MD5=[55887e32996690c03f97de33909f544c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative"><path codeLine="87" d="M547.497,237.6883 C535.14,249.0643 524.16,262.1233 516.6,276.8203 C497.61,313.7563 503.802,364.5883 508.968,390.8863 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="543.546,232.7833,561.366,225.9973,551.664,242.4133,543.546,232.7833" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[06da0ddd9a7fa480e991ab04536ea3b2]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative to DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative_DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic"><path codeLine="88" d="M512.127,445.3813 C511.398,474.6943 510.39,515.1043 509.832,537.7483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative-backto-DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="505.836,445.0483,512.577,427.2103,518.427,445.3633,505.836,445.0483" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[3ebdb2bd1c4563186d82182f64e1afb3]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative to DDICDIModels::DDICDILibrary::Classes::Process::Sequence--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative_DDICDIModels::DDICDILibrary::Classes::Process::Sequence"><path codeLine="89" d="M546.687,439.0183 C581.013,468.5743 633.096,513.4213 661.365,537.7483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative-backto-DDICDIModels::DDICDILibrary::Classes::Process::Sequence" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="542.502,443.7343,532.971,427.2103,550.719,434.1853,542.502,443.7343" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="90" d="M541.827,235.4023 C532.242,241.2433 522.792,247.3003 513.9,253.4203 C448.794,298.2403 379.053,360.9883 346.797,390.9583 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="538.785,229.8763,557.478,226.0963,545.22,240.7123,538.785,229.8763" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[7510d2ace8c22a0dd311afe46114521c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><path codeLine="91" d="M329.166,445.3813 C329.706,474.6943 330.462,515.1043 330.885,537.7483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="322.857,445.3273,328.824,427.2103,335.457,445.0933,322.857,445.3273" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[6e8018043906774ee49f3c5e7edc31e4]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><path codeLine="92" d="M295.128,439.2253 C261.36,468.7723 210.276,513.4753 182.529,537.7483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="291.159,434.3203,308.862,427.2103,299.457,443.8063,291.159,434.3203" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[ee7ec7a1d6655fb6d6f52b87854943de]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><path codeLine="93" d="M142.704,589.5703 C124.578,619.0453 98.685,661.1473 84.357,684.4483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="137.538,585.9433,152.334,573.9103,148.275,592.5403,137.538,585.9433" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[45f094e0c35a294b6e3005ec336fc507]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><path codeLine="94" d="M183.312,589.5703 C201.618,619.0453 227.772,661.1473 242.244,684.4483 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="177.732,592.5223,173.583,573.9103,188.433,585.8803,177.732,592.5223" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="288" x="360.45" y="725.1891"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="503.1" y="734.5318"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="503.1" y="745.8521"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="288" x="360.45" y="757.1725">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ControlLogic</text><!--MD5=[2a1a9b7816a9866578d4dd6db8958aac]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class ControlLogic in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ControlLogic

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:black>ControlLogic" #FFD700 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
  class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic as "<size:10>Process::\n<color:blue>ConditionalControlLogic" [[../DDICDILibrary/Classes/Process/ConditionalControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ConditionalControlLogic:\nA set of decision points which determine the flow between the steps used to perform an activity.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10>Process::\n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:blue>RuleBasedScheduling" [[../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization{ <U+2015> RuleBasedScheduling:\nRule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Sequence as "<size:10>Process::\n<color:blue>Sequence" [[../DDICDILibrary/Classes/Process/Sequence.html#super-class-hierarchy-generalization{ <U+2015> Sequence:\nA sequence controls the order of activities or steps by defining a simple sequence.}]]



' Associations
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> hasSubControlLogic:\nControl logic is a container of control logic which is in turn a container of control logic ad infinitum so that it is able to represent the structure of a program.}]] : hasSubControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : informs
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> invokes:\nControl logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling).}]] : invokes

' Sub classes
  DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative 
  DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic 
  DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::Sequence 
  DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class ControlLogic in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::ControlLogic

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:black>ControlLogic" #FFD700 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

together {
  class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:blue>TemporalConstraints" [[../DDICDILibrary/Classes/Process/TemporalConstraints.html#super-class-hierarchy-generalization{ <U+2015> TemporalConstraints:\nTemporal constraints provide a mechanism for expressing concurrency control and synchronization}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic as "<size:10>Process::\n<color:blue>ConditionalControlLogic" [[../DDICDILibrary/Classes/Process/ConditionalControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ConditionalControlLogic:\nA set of decision points which determine the flow between the steps used to perform an activity.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative as "<size:10>Process::\n<color:blue>DeterministicImperative" [[../DDICDILibrary/Classes/Process/DeterministicImperative.html#super-class-hierarchy-generalization{ <U+2015> DeterministicImperative:\nDeterministic imperative is a subtype of control logic. Deterministic control logic consists of control constructs.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:blue>RuleBasedScheduling" [[../DDICDILibrary/Classes/Process/RuleBasedScheduling.html#super-class-hierarchy-generalization{ <U+2015> RuleBasedScheduling:\nRule based scheduling performs a fact check on rules from the rule set, testing their condition part against the facts in the research data store. Fact checking may be assisted by a curator who can semantically compare the condition part of each candidate rule with the facts. The fact checker return ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Sequence as "<size:10>Process::\n<color:blue>Sequence" [[../DDICDILibrary/Classes/Process/Sequence.html#super-class-hierarchy-generalization{ <U+2015> Sequence:\nA sequence controls the order of activities or steps by defining a simple sequence.}]]



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey]- DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic [[{ <U+2015> hasSubControlLogic:\nControl logic is a container of control logic which is in turn a container of control logic ad infinitum so that it is able to represent the structure of a program.}]] : hasSubControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : informs
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> invokes:\nControl logic invokes an activity deterministically (either conditionally or unconditionally) or non-derministically (based on temporal constraints or rule-based scheduling).}]] : invokes

  DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative 
  DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::ConditionalControlLogic 
  DDICDIModels::DDICDILibrary::Classes::Process::DeterministicImperative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::Sequence 
  DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling 
  DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
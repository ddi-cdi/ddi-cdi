<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="731.7px" preserveAspectRatio="none" style="width:981px;height:731px;background:#FFFFFF;" version="1.1" viewBox="0 0 981 731" width="981px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="459" x="254.925" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="450" x="259.425" y="27.6855">UML Diagram: Class TemporalConstraints in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="482.625" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[a0438961881a4fc606840d398cef942c]
entity ##3--><!--MD5=[7639129a7208b5720b5c8dbdaf72c8f5]
entity ##5--><!--MD5=[08ba6ba01d98bb161ad68b4a623f9af7]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><rect codeLine="47" fill="#FFD700" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="234.45" y="476.2783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="490.1211">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="118.8" x="242.55" y="505.1785">TemporalConstraints</text></g><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><a href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" target="_top" title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="75" fill="#FAFAD2" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="164.7" x="219.6" y="369.1783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="383.0211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="222.3" y="398.0785">NonDeterministicDeclarative</text></g></a><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="61" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="661.95" y="228.7783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="716.85" y="242.6211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="664.65" y="257.6785">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="62" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="841.05" y="228.7783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="889.65" y="242.6211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="888.75" y="257.6785">Activity</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="102" fill="#FAFAD2" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="191.25" y="201.3283"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="215.1711">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="265.95" y="230.2285">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="192.15" x2="411.75" y1="237.4971" y2="237.4971"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="196.65" y="254.1769">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="196.65" y="270.0254">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="256.05" y="270.0254">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="196.65" y="285.8738">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="255.15" y="285.8738">ControlledVocabularyEntry</text></a></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="64" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="495.45" y="228.7783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="544.05" y="242.6211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="514.8" y="257.6785">ProcessingAgent</text></g></a><!--MD5=[02b9b219988dc503761fbf1cad30d622]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><a href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" target="_top" title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― AllenIntervalAlgebra:&#10;Control logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><rect codeLine="65" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="146.25" y="649.9783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="194.85" y="663.8211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="113.4" x="157.05" y="678.8785">AllenIntervalAlgebra</text></g></a><!--MD5=[709a7571879ab291d9a4b7a9d9794af4]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><a href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" target="_top" title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― TemporalControlConstruct:&#10;Declarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -&gt; C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><rect codeLine="66" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="155.7" x="313.2" y="649.9783"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="372.15" y="663.8211">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="150.3" x="315.9" y="678.8785">TemporalControlConstruct</text></g></a><g id="elem_GMN15"><path d="M5.4,227.4283 L5.4,265.8611 A0,0 0 0 0 5.4,265.8611 L159.3,265.8611 A0,0 0 0 0 159.3,265.8611 L159.3,250.3783 L190.98,246.7783 L159.3,243.1783 L159.3,236.4283 L150.3,227.4283 L5.4,227.4283 A0,0 0 0 0 5.4,227.4283 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><path d="M150.3,227.4283 L150.3,236.4283 L159.3,236.4283 L150.3,227.4283 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="135" x="10.8" y="244.0739">Class has 5 associations.</text><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="120.6" x="10.8" y="258.7903">Only 3 are shown here.</text></g><!--MD5=[6e8018043906774ee49f3c5e7edc31e4]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints"><path codeLine="78" d="M301.95,423.2593 C301.95,441.0883 301.95,461.9323 301.95,476.2333 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,423.2323,301.95,405.2323,308.25,423.2323,295.65,423.2323" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="90" d="M409.545,199.5283 C497.079,167.1733 623.709,134.1703 733.95,158.5783 C790.983,171.2053 850.194,206.6833 882.909,228.5983 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="405.153,201.1663,413.9999,201.7167,409.3707,199.5975,411.4898,194.9684,405.153,201.1663" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="664.65" y="156.3239"> hasInternal</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="95" d="M378.8289,196.0817 C378.8289,196.0817 493.533,145.6273 553.05,158.5783 C606.816,170.2783 662.994,200.5363 698.616,222.3523 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="708.768,228.6793,703.7995,221.3387,704.9495,226.2983,699.9899,227.4483,708.768,228.6793" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="704.9495" x2="698.841" y1="226.2983" y2="222.4918"/><polygon fill="none" points="369.369,201.2923,375.8358,201.8403,378.8289,196.0817,372.3621,195.5337,369.369,201.2923" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="30.6" x="521.55" y="156.3239"> has</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="100" d="M413.019,246.7783 C439.29,246.7783 466.641,246.7783 490.68,246.7783 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="495.441,246.7783,487.341,243.1783,490.941,246.7783,487.341,250.3783,495.441,246.7783" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="49.5" x="429.3" y="240.9239"> informs</text></a></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="110" d="M301.95,310.3453 C301.95,331.8193 301.95,354.1573 301.95,368.9983 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,310.2913,301.95,292.2913,308.25,310.2913,295.65,310.2913" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[ee7ec7a1d6655fb6d6f52b87854943de]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra"><path codeLine="114" d="M284.859,528.4873 C266.229,564.7933 237.15,621.4753 222.624,649.7803 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="279.351,525.4273,293.175,512.2873,290.556,531.1783,279.351,525.4273" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[45f094e0c35a294b6e3005ec336fc507]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints to DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints_DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct"><path codeLine="115" d="M319.212,528.4873 C338.031,564.7933 367.416,621.4753 382.086,649.7803 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints-backto-DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="313.506,531.1693,310.815,512.2873,324.693,525.3733,313.506,531.1693" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="320.4" x="324.225" y="690.6471"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="699.9898"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="711.3101"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="320.4" x="324.225" y="722.6305">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalConstraints</text><!--MD5=[3750a43774a43ddd572b84dc8a79d3b9]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class TemporalConstraints in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalConstraints

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:black>TemporalConstraints" #FFD700 {
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]



' Associations

' Super classes
' Associations of Super classes

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints
' Associations of Super classes
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	InformationFlowDefinition
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	ProcessingAgent
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative


' Sub classes
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class TemporalConstraints in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::TemporalConstraints

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints as "<size:10>Process::\n<color:black>TemporalConstraints" #FFD700 {
}

together {
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra as "<size:10>Process::\n<color:blue>AllenIntervalAlgebra" [[../DDICDILibrary/Classes/Process/AllenIntervalAlgebra.html#super-class-hierarchy-generalization{ <U+2015> AllenIntervalAlgebra:\nControl logic where the execution flow is determined by the satisfaction of temporal constraints specified with Allen's Interval Algebra over time intervals. Allen's interval algebra consists of thirteen temporal interval relations and the operations defined on them. Together these relations are dis ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct as "<size:10>Process::\n<color:blue>TemporalControlConstruct" [[../DDICDILibrary/Classes/Process/TemporalControlConstruct.html#super-class-hierarchy-generalization{ <U+2015> TemporalControlConstruct:\nDeclarative control flow operator where the continuation of the execution flow depends on the finalization of one or more preceding activities/steps. - XORJoin: Given three activities A, B and C, if XORJoin(A, B) -> C, then C is executed after either A or B finishes executing. XORJoin is sometimes r ...}]]





class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative


  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::AllenIntervalAlgebra 
  DDICDIModels::DDICDILibrary::Classes::Process::TemporalConstraints <|- -[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::TemporalControlConstruct 

@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>
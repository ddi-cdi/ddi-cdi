<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="678.6px" preserveAspectRatio="none" style="width:981px;height:678px;background:#FFFFFF;" version="1.1" viewBox="0 0 981 678" width="981px" zoomAndPan="magnify"><defs/><g><rect height="47.4891" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="465.3" x="251.775" y="4.5"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacing" textLength="456.3" x="256.275" y="27.6855">UML Diagram: Class RuleBasedScheduling in Context</text><text fill="#000000" font-family="sans-serif" font-size="12.6" font-weight="bold" lengthAdjust="spacing" textLength="3.6" x="482.625" y="44.7205"> </text><rect fill="#FFFFFF" height="56.0813" rx="6.75" ry="6.75" style="stroke:#000000;stroke-width:0.9;" width="276.3" x="7.2" y="64.5891"/><text fill="#000000" font-family="sans-serif" font-size="9" font-weight="bold" lengthAdjust="spacing" textLength="22.5" x="12.6" y="79.3318">Hints</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="265.5" x="12.6" y="90.6521">- Move the mouse cursor over a name to see more information.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="216" x="12.6" y="101.9725">- Click on a name to go to the corresponding page.</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="164.7" x="12.6" y="113.2928">- The arrows of the inheritance tree are</text><text fill="#D2691E" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="32.4" x="180" y="113.2928">colored</text><text fill="#808080" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="212.4" y="113.2928">.</text><!--MD5=[da34b2a5f0525633fff84df4b1d0d1d2]
class DDICDIModels::DDICDILibrary::Classes::Process::Curator--><a href="../DDICDILibrary/Classes/Process/Curator.html#super-class-hierarchy-generalization" target="_top" title=" ― Curator:&#10;Curator is a software agent that uses techniques such as natural language processing to map facts in the research data store to the condition part of a rule." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Curator.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Curator:&#10;Curator is a software agent that uses techniques such as natural language processing to map facts in the research data store to the condition part of a rule." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Curator"><rect codeLine="55" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Curator" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="151.65" y="597.0493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="200.25" y="610.8921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="43.2" x="197.55" y="625.9495">Curator</text></g></a><!--MD5=[dce7397f6e0597c464aeadfc6cc1c787]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleSet--><a href="../DDICDILibrary/Classes/Process/RuleSet.html#super-class-hierarchy-generalization" target="_top" title=" ― RuleSet:&#10;A rule set is a collection of rules. A rule set is a component of rule based scheduling." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/RuleSet.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― RuleSet:&#10;A rule set is a collection of rules. A rule set is a component of rule based scheduling." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::RuleSet"><rect codeLine="56" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleSet" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="318.15" y="597.0493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="366.75" y="610.8921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="45" x="363.15" y="625.9495">RuleSet</text></g></a><!--MD5=[cf2b466143bd797820c9416be252779d]
entity ##7--><!--MD5=[176626d4bed7481770d2a75e2ecd0210]
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><rect codeLine="47" fill="#FFD700" height="59.2172" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="222.3" x="190.8" y="453.0493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="466.8921">Process::</text><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="125.1" x="239.4" y="481.9495">RuleBasedScheduling</text><line style="stroke:#404040;stroke-width:0.45;" x1="191.7" x2="412.2" y1="489.2181" y2="489.2181"/><a href="../DDICDILibrary/DataTypes/Enumerations/SchedulingStrategy.html#diagram" target="_top" title=" ― SchedulingStrategy:&#10;Enumeration that consists of forward chaining and backward chaining. Rule based scheduling is guided by its scheduling strategy." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/Enumerations/SchedulingStrategy.html#diagram" xlink:show="new" xlink:title=" ― SchedulingStrategy:&#10;Enumeration that consists of forward chaining and backward chaining. Rule based scheduling is guided by its scheduling strategy." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="97.2" x="196.2" y="505.8979">schedulingType :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="110.7" x="297" y="505.8979">SchedulingStrategy</text></a></g><!--MD5=[a806a748fb49e84c80de945e0c6c68a2]
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><a href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" target="_top" title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― NonDeterministicDeclarative:&#10;Non-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><rect codeLine="79" fill="#FAFAD2" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="164.7" x="219.6" y="351.3493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="365.1921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="159.3" x="222.3" y="380.2495">NonDeterministicDeclarative</text></g></a><!--MD5=[52638b0770114f5e4336b936e2b81262]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><a href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" target="_top" title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― InformationFlowDefinition:&#10;The relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><rect codeLine="65" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="147.6" x="661.95" y="219.9493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="716.85" y="233.7921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="142.2" x="664.65" y="248.8495">InformationFlowDefinition</text></g></a><!--MD5=[250dc3f1cdf1ef2cc74ebd3b8cfec0b1]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity--><a href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" target="_top" title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― Activity:&#10;An activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><rect codeLine="66" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::Activity" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="841.05" y="219.9493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="889.65" y="233.7921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="39.6" x="888.75" y="248.8495">Activity</text></g></a><!--MD5=[86778c92e97b374d9d16badd6f2c91e1]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic--><a href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" target="_top" title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ControlLogic:&#10;Control logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic"><rect codeLine="106" fill="#FAFAD2" height="90.9141" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="221.4" x="191.25" y="192.4993"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="283.05" y="206.3421">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="72" x="265.95" y="221.3995">ControlLogic</text><line style="stroke:#404040;stroke-width:0.45;" x1="192.15" x2="411.75" y1="228.6681" y2="228.6681"/><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="106.2" x="196.65" y="245.3479">description : String</text><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" target="_top" title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram" xlink:show="new" xlink:title=" ― Identifier:&#10;Identifier for objects requiring short- or long-lasting referencing and management." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="55.8" x="196.65" y="261.1964">identifier :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="48.6" x="256.05" y="261.1964">Identifier</text></a><a href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" target="_top" title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram" xlink:show="new" xlink:title=" ― ControlledVocabularyEntry:&#10;Allows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ..." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="54.9" x="196.65" y="277.0448">workflow :</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="152.1" x="255.15" y="277.0448">ControlledVocabularyEntry</text></a></g></a><!--MD5=[3078b484125a0460bfac2d32d1854149]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><a href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" target="_top" title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:actuate="onRequest" xlink:href="../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization" xlink:show="new" xlink:title=" ― ProcessingAgent:&#10;A processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ..." xlink:type="simple"><g id="elem_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><rect codeLine="68" fill="#F1F1F1" height="36.1688" id="DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" rx="2.25" ry="2.25" style="stroke:#404040;stroke-width:0.45;" width="135" x="495.45" y="219.9493"/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="37.8" x="544.05" y="233.7921">Process::</text><text fill="#0000FF" font-family="sans-serif" font-size="12.6" lengthAdjust="spacing" textLength="96.3" x="514.8" y="248.8495">ProcessingAgent</text></g></a><g id="elem_GMN17"><path d="M5.4,218.5993 L5.4,257.0321 A0,0 0 0 0 5.4,257.0321 L159.3,257.0321 A0,0 0 0 0 159.3,257.0321 L159.3,241.5493 L190.98,237.9493 L159.3,234.3493 L159.3,227.5993 L150.3,218.5993 L5.4,218.5993 A0,0 0 0 0 5.4,218.5993 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><path d="M150.3,218.5993 L150.3,227.5993 L159.3,227.5993 L150.3,218.5993 " fill="#FFFFFF" style="stroke:#181818;stroke-width:0.45;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="135" x="10.8" y="235.2449">Class has 5 associations.</text><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="120.6" x="10.8" y="249.9613">Only 3 are shown here.</text></g><!--MD5=[d441925b5732d1cac5a1be2151696604]
link DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling to DDICDIModels::DDICDILibrary::Classes::Process::Curator--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling_DDICDIModels::DDICDILibrary::Classes::Process::Curator"><a href="" target="_top" title=" ― has:&#10;Rule based scheduling has one or more curators. The curators may be commercial/off-the-shelf, open source and/or home grown. They are likely to be domain-specific which is why rule based scheduling might employ many." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;Rule based scheduling has one or more curators. The curators may be commercial/off-the-shelf, open source and/or home grown. They are likely to be domain-specific which is why rule based scheduling might employ many." xlink:type="simple"><path codeLine="73" d="M277.7799,521.7268 C277.7799,521.7268 248.31,568.1953 236.538,586.7443 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling-DDICDIModels::DDICDILibrary::Classes::Process::Curator" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="230.112,596.8783,237.4917,591.9681,232.5231,593.0788,231.4124,588.1103,230.112,596.8783" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="232.5231" x2="236.3805" y1="593.0788" y2="586.9963"/><polygon fill="#808080" points="283.572,512.6113,277.6375,515.2383,277.7799,521.7268,283.7144,519.0997,283.572,512.6113" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="18.9" x="261.45" y="559.6949">has</text></a></g><!--MD5=[ba76c6a36ee547367a74f3bdbc827d35]
link DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling to DDICDIModels::DDICDILibrary::Classes::Process::RuleSet--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling_DDICDIModels::DDICDILibrary::Classes::Process::RuleSet"><a href="" target="_top" title=" ― has:&#10;Rule sets are a component of rule based scheduling." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;Rule sets are a component of rule based scheduling." xlink:type="simple"><path codeLine="74" d="M326.3542,521.7037 C326.3542,521.7037 356.319,568.4203 368.244,587.0053 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling-DDICDIModels::DDICDILibrary::Classes::Process::RuleSet" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="374.571,596.8783,373.2307,588.1163,372.1426,593.0898,367.1691,592.0017,374.571,596.8783" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="372.1426" x2="368.253" y1="593.0898" y2="587.0278"/><polygon fill="#808080" points="320.526,512.6113,320.4093,519.1003,326.3542,521.7037,326.4709,515.2148,320.526,512.6113" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="18.9" x="351.45" y="559.6949">has</text></a></g><!--MD5=[7510d2ace8c22a0dd311afe46114521c]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative to DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative_DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling"><path codeLine="82" d="M301.95,405.5833 C301.95,420.7573 301.95,438.2803 301.95,452.6893 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative-backto-DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,405.4483,301.95,387.4483,308.25,405.4483,295.65,405.4483" style="stroke:#D2691E;stroke-width:1.35;"/></g><!--MD5=[905e6468026295fccf09de81c28ac784]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::Activity--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::Activity"><a href="" target="_top" title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― hasInternal:&#10;An activity is embedded in the control construct which launches it." xlink:type="simple"><path codeLine="94" d="M417.357,191.5903 C504.396,162.5113 626.715,134.1703 733.95,155.1493 C789.921,166.1023 848.547,199.0243 881.622,219.9043 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::Activity" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="412.983,193.0663,421.8073,193.9041,417.2495,191.6356,419.5181,187.0778,412.983,193.0663" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="68.4" x="664.65" y="153.7949"> hasInternal</text></a></g><!--MD5=[7f3215c825603254f2cfd6e18ef191f0]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition"><a href="" target="_top" title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― has:&#10;A control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated." xlink:type="simple"><path codeLine="99" d="M385.5594,187.5999 C385.5594,187.5999 496.26,144.2413 553.05,155.1493 C605.691,165.2653 661.086,193.1563 696.888,213.7933 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="707.121,219.7963,701.9594,212.5902,703.2406,217.5175,698.3133,218.7988,707.121,219.7963" style="stroke:#808080;stroke-width:1.35;"/><line style="stroke:#808080;stroke-width:1.35;" x1="703.2406" x2="697.0365" y1="217.5175" y2="213.8698"/><polygon fill="none" points="375.876,192.3823,382.3118,193.2189,385.5594,187.5999,379.1236,186.7633,375.876,192.3823" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="30.6" x="521.55" y="153.7949"> has</text></a></g><!--MD5=[dcad773e65a355ef72878f788d9544ba]
link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent"><a href="" target="_top" title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title=" ― informs:&#10;Control logic informs a processing agent. The information may be deterministic or non-deterministic." xlink:type="simple"><path codeLine="104" d="M413.019,237.9493 C439.29,237.9493 466.641,237.9493 490.68,237.9493 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-to-DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent" style="stroke:#808080;stroke-width:1.35;"/><polygon fill="#808080" points="495.441,237.9493,487.341,234.3493,490.941,237.9493,487.341,241.5493,495.441,237.9493" style="stroke:#808080;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="11.7" lengthAdjust="spacing" textLength="49.5" x="429.3" y="232.0949"> informs</text></a></g><!--MD5=[654ce1662b7e4c6910765456e411cca9]
reverse link DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic to DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative--><g id="link_DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic_DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative"><path codeLine="114" d="M301.95,301.7143 C301.95,319.8853 301.95,338.2633 301.95,351.1153 " fill="none" id="DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic-backto-DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative" style="stroke:#D2691E;stroke-width:1.35;"/><polygon fill="none" points="295.65,301.4533,301.95,283.4533,308.25,301.4533,295.65,301.4533" style="stroke:#D2691E;stroke-width:1.35;"/></g><rect height="33.9609" style="stroke:#00000000;stroke-width:0.9;fill:none;" width="328.5" x="320.175" y="637.7181"/><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="647.0608"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="2.7" x="483.075" y="658.3811"> </text><text fill="#888888" font-family="sans-serif" font-size="9" lengthAdjust="spacing" textLength="328.5" x="320.175" y="669.7015">DDI Cross Domain Integration (DDI-CDI)   1.0 - Process::RuleBasedScheduling</text><!--MD5=[ccbeac121a74a9b1c011df96aaa7503b]
@startuml
!pragma ratio 0.5625
' HD display aspect ratio 16:9
' hyperlinkColor and pathHoverColor do not seem to work with class diagrams
' working approach: colors per item
' default font size for class names is 14

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class RuleBasedScheduling in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::RuleBasedScheduling

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

' Core class of diagram
class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:black>RuleBasedScheduling" #FFD700 {
  schedulingType : <color:blue>SchedulingStrategy   	  [[[../DDICDILibrary/DataTypes/Enumerations/SchedulingStrategy.html#diagram{ <U+2015> SchedulingStrategy:\nEnumeration that consists of forward chaining and backward chaining. Rule based scheduling is guided by its scheduling strategy.}]]]
}

' Class definitions for associated classes without superclass (might have also an association)
' This would be too many constraints for Graphviz. 
together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Curator as "<size:10>Process::\n<color:blue>Curator" [[../DDICDILibrary/Classes/Process/Curator.html#super-class-hierarchy-generalization{ <U+2015> Curator:\nCurator is a software agent that uses techniques such as natural language processing to map facts in the research data store to the condition part of a rule.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::RuleSet as "<size:10>Process::\n<color:blue>RuleSet" [[../DDICDILibrary/Classes/Process/RuleSet.html#super-class-hierarchy-generalization{ <U+2015> RuleSet:\nA rule set is a collection of rules. A rule set is a component of rule based scheduling.}]]
}

' Class definitions for suppliers of abstractions
together {
}

' Rest of class definitions, without associated classes of core class and abstraction supplier classes
class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]



' Associations
DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling *-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Curator [[{ <U+2015> has:\nRule based scheduling has one or more curators. The curators may be commercial/off-the-shelf, open source and/or home grown. They are likely to be domain-specific which is why rule based scheduling might employ many.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling *-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::RuleSet [[{ <U+2015> has:\nRule sets are a component of rule based scheduling.}]] : has

' Super classes
' Associations of Super classes

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling
' Associations of Super classes
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.
' firstAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)
' secondAncestor:	org.eclipse.uml2.uml.internal.impl.ClassImpl@3f0d6038 (name: ControlLogic, visibility: <unset>) (isLeaf: false, isAbstract: false, isFinalSpecialization: false) (isActive: false)



' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	Activity
' e_otherEndClass:	ControlLogic
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	InformationFlowDefinition
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
' aClass:			NonDeterministicDeclarative
' aSuperClass:		ControlLogic
' e_ownedEndClass:	ControlLogic
' e_otherEndClass:	ProcessingAgent
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative



' Abstractions
@enduml

@startuml
!pragma ratio 0.5625

hide circle
hide empty members
scale 0.9

skinparam {
  ArrowThickness 1.5
  MinClassWidth 150
}

skinparam legend {
  BackgroundColor white
  FontSize 10
}

skinparam note {
  BackgroundColor white
}

skinparam class {
  ArrowColor #404040
  BorderColor #404040
}

skinparam package {
  FontColor lightgrey
  BorderColor lightgrey
}

title <size:20>UML Diagram: Class RuleBasedScheduling in Context\n
footer \n\nDDI Cross Domain Integration (DDI-CDI)   1.0 - Process::RuleBasedScheduling

legend top left
**Hints**
<color:grey>- Move the mouse cursor over a name to see more information.
<color:grey>- Click on a name to go to the corresponding page.
<color:grey>- The arrows of the inheritance tree are <color:#D2691E>colored<color:grey>.
endlegend

class DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling as "<size:10>Process::\n<color:black>RuleBasedScheduling" #FFD700 {
  schedulingType : <color:blue>SchedulingStrategy   	  [[[../DDICDILibrary/DataTypes/Enumerations/SchedulingStrategy.html#diagram{ <U+2015> SchedulingStrategy:\nEnumeration that consists of forward chaining and backward chaining. Rule based scheduling is guided by its scheduling strategy.}]]]
}

together {
  class DDICDIModels::DDICDILibrary::Classes::Process::Curator as "<size:10>Process::\n<color:blue>Curator" [[../DDICDILibrary/Classes/Process/Curator.html#super-class-hierarchy-generalization{ <U+2015> Curator:\nCurator is a software agent that uses techniques such as natural language processing to map facts in the research data store to the condition part of a rule.}]]
  class DDICDIModels::DDICDILibrary::Classes::Process::RuleSet as "<size:10>Process::\n<color:blue>RuleSet" [[../DDICDILibrary/Classes/Process/RuleSet.html#super-class-hierarchy-generalization{ <U+2015> RuleSet:\nA rule set is a collection of rules. A rule set is a component of rule based scheduling.}]]
}

together {
}

class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10>Process::\n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition as "<size:10>Process::\n<color:blue>InformationFlowDefinition" [[../DDICDILibrary/Classes/Process/InformationFlowDefinition.html#super-class-hierarchy-generalization{ <U+2015> InformationFlowDefinition:\nThe relationships between parameters across steps is described by the information flow definition. Each relationship creates a pathway for an information object to follow.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::Activity as "<size:10>Process::\n<color:blue>Activity" [[../DDICDILibrary/Classes/Process/Activity.html#super-class-hierarchy-generalization{ <U+2015> Activity:\nAn activity is a task described at a conceptual level. It is not parameterized and as such is less reusable. For more logical/physical, fine-grained, reusable description there is a sub-type called step.}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10>Process::\n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]]
class DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent as "<size:10>Process::\n<color:blue>ProcessingAgent" [[../DDICDILibrary/Classes/Process/ProcessingAgent.html#super-class-hierarchy-generalization{ <U+2015> ProcessingAgent:\nA processing agent orchestrates the production of information objects in a production environment. There are processing agents which perform data capture, data editing/processing, and data analysis (etc.), each in the appropriate production environments. The processing agent performs an activity bas ...}]]



DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling *-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::Curator [[{ <U+2015> has:\nRule based scheduling has one or more curators. The curators may be commercial/off-the-shelf, open source and/or home grown. They are likely to be domain-specific which is why rule based scheduling might employ many.}]] : has
DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling *-[#grey]-> DDICDIModels::DDICDILibrary::Classes::Process::RuleSet [[{ <U+2015> has:\nRule sets are a component of rule based scheduling.}]] : has


class DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative as "<size:10> \n<color:blue>NonDeterministicDeclarative" [[../DDICDILibrary/Classes/Process/NonDeterministicDeclarative.html#super-class-hierarchy-generalization{ <U+2015> NonDeterministicDeclarative:\nNon-deterministic control logic is a subtype of control logic. Non-deterministic (or declarative) control logic is constraint- and/or rule-based.}]] #FAFAD2 {
}

DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::RuleBasedScheduling
note left of DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic : Class has 5 associations.\nOnly 3 are shown here.



DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <-[#grey] DDICDIModels::DDICDILibrary::Classes::Process::Activity [[{ <U+2015> hasInternal:\nAn activity is embedded in the control construct which launches it.}]] : <U+2003>hasInternal
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic o-[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::InformationFlowDefinition [[{ <U+2015> has:\nA control construct has zero or more information flow definitions each of which provides the control construct with zero or more input and output parameters used or produced in the step/sub-step with which it is associated.}]] : <U+2003>has
DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic -[#grey]> DDICDIModels::DDICDILibrary::Classes::Process::ProcessingAgent [[{ <U+2015> informs:\nControl logic informs a processing agent. The information may be deterministic or non-deterministic.}]] : <U+2003>informs

class DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic as "<size:10> \n<color:blue>ControlLogic" [[../DDICDILibrary/Classes/Process/ControlLogic.html#super-class-hierarchy-generalization{ <U+2015> ControlLogic:\nControl logic is a program in which the order of statements is explicit. Control logic is either deterministic (imperative) or non-deterministic (declarative). Deterministic control logic consists of control constructs. Declarative control logic is constraint- and/or rule-based. Control logic may co ...}]] #FAFAD2 {
  description : String
  identifier : <color:blue>Identifier   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/Identifier.html#diagram{ <U+2015> Identifier:\nIdentifier for objects requiring short- or long-lasting referencing and management.}]]]
  workflow : <color:blue>ControlledVocabularyEntry   	  [[[../DDICDILibrary/DataTypes/StructuredDataTypes/ControlledVocabularyEntry.html#diagram{ <U+2015> ControlledVocabularyEntry:\nAllows for unstructured content which may be an entry from an externally maintained controlled vocabulary.If the content is from a controlled vocabulary provide the code value of the entry, as well as a reference to the controlled vocabulary from which the value is taken. Provide as many of the iden ...}]]]
}

DDICDIModels::DDICDILibrary::Classes::Process::ControlLogic <|-[#D2691E]- DDICDIModels::DDICDILibrary::Classes::Process::NonDeterministicDeclarative



@enduml

PlantUML version 1.2022.6(Tue Jun 21 19:34:49 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>